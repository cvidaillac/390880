<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_2dZ5gGmnEe2od597qOQ9lw" name="UpdateEnergyOnPropositions" author="C6754557" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004">
    <elements xmi:type="process:Pool" xmi:id="_2dZ5gWmnEe2od597qOQ9lw" name="UpdateEnergyOnPropositions">
      <elements xmi:type="process:Lane" xmi:id="_2dZ5gmmnEe2od597qOQ9lw" name="Update lane" actor="_2dZ5m2mnEe2od597qOQ9lw">
        <elements xmi:type="process:StartEvent" xmi:id="_2dZ5g2mnEe2od597qOQ9lw" name="File Upload" outgoing="_GYfdMGmoEe2od597qOQ9lw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_2dZ5hGmnEe2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_2dZ5hWmnEe2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_2dZ5hmmnEe2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_CVKxsGmoEe2od597qOQ9lw" name="Load list of materials" outgoing="_zIJskGm1Ee2od597qOQ9lw _Bqs9sGp_Ee2od597qOQ9lw _dndjgGp_Ee2od597qOQ9lw" incoming="_GYfdMGmoEe2od597qOQ9lw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_CVKxsmmoEe2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_CVKxsWmoEe2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_CVKxs2moEe2od597qOQ9lw" name="descriptionAfterCompletion()" content="def String desc=&quot;Loaded &quot; + String.valueOf(nbMaterials) + &quot; materials from input file&quot;;&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_YtFiAGnAEe2od597qOQ9lw" name="nbMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
          </stepSummary>
          <connectors xmi:type="process:Connector" xmi:id="_dbndwGmsEe2od597qOQ9lw" name="loadExcelFile" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_dbndwWmsEe2od597qOQ9lw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.12.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_dbndwmmsEe2od597qOQ9lw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_dbndw2msEe2od597qOQ9lw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_dbndxGmsEe2od597qOQ9lw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_dbndxWmsEe2od597qOQ9lw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_dbndxmmsEe2od597qOQ9lw" name="readExcelFile" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.LocaleUtility&#xD;&#xA;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;List&lt;List&lt;Object>> excel_content=null;&#xD;&#xA;String error_message=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;   String filename = materialsFile.getFileName();&#xD;&#xA;&#x9;   logDebug(log_file, &quot;Filename: &quot; + filename);&#xD;&#xA;&#x9;   ByteArrayInputStream input_stream = new ByteArrayInputStream(materialsFile.getContent());&#xD;&#xA;&#x9;   java.util.Locale user_locale = LocaleUtility.getLocale();&#xD;&#xA;&#x9;   excel_content = ExcelFile.readExcelInputStreamFirstWorksheet(input_stream, true, true, user_locale);&#xD;&#xA;&#x9;   if (excel_content == null) {&#xD;&#xA;&#x9;&#x9;&#x9; error_message = &quot;Failed to read input file [&quot; + filename + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#x9; logError(log_file, error_message);&#xD;&#xA;&#x9;   } else {&#xD;&#xA;&#x9;&#x9;&#x9; logDebug(log_file, &quot;Successfully loaded input file [&quot; + filename + &quot;]&quot;);&#xD;&#xA;&#x9;   }&#xD;&#xA;&#x9;   &#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;   logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return [excelContent: excel_content, errorMessage: error_message];&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;readExcelFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;readExcelFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;readExcelFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_HB7ZwGm-Ee2od597qOQ9lw" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_HB7ZwWm-Ee2od597qOQ9lw" name="materialsFile" dataType="_2dZ5smmnEe2od597qOQ9lw" className="org.bonitasoft.engine.bpm.contract.FileInputValue"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_dbndx2msEe2od597qOQ9lw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_dbndyGmsEe2od597qOQ9lw" name="materialsData" content="materialsData" type="TYPE_VARIABLE" returnType="java.util.List">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_dbndyWmsEe2od597qOQ9lw" name="materialsData" multiple="true" dataType="_2dZ5smmnEe2od597qOQ9lw" className="java.util.List"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_dbndymmsEe2od597qOQ9lw" name="excelContent" content="return result['excelContent'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
                <referencedElements xmi:type="definition:Output" xmi:id="_HjIxwGmwEe2od597qOQ9lw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_dbndzGmsEe2od597qOQ9lw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_TyDJMGmxEe2od597qOQ9lw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_TyDJMWmxEe2od597qOQ9lw" name="errorMsg" content="errorMsg" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_TyDJMmmxEe2od597qOQ9lw" name="errorMsg" dataType="_2dZ5sWmnEe2od597qOQ9lw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_TyDJM2mxEe2od597qOQ9lw" name="errorMessage" content="return result[&quot;errorMessage&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="definition:Output" xmi:id="_TyDJNGmxEe2od597qOQ9lw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_TyDJNWmxEe2od597qOQ9lw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <operations xmi:type="expression:Operation" xmi:id="_rXLyAGmyEe2od597qOQ9lw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_rXLyAWmyEe2od597qOQ9lw" name="nbMaterials" content="nbMaterials" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_r_OpcGmyEe2od597qOQ9lw" name="nbMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_rXLyAmmyEe2od597qOQ9lw" name="getNbMaterials" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def int nb_materials = 0;&#xD;&#xA;def log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;if (materialsData != null) {&#xD;&#xA;&#x9;nb_materials = materialsData.size();&#xD;&#xA;&#x9;if ((nb_materials > 0) &amp;&amp; ignoreHeaderLine) {&#xD;&#xA;&#x9;&#x9;nb_materials--;&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;logInfo(log_file, &quot;Number of materials found in file: &quot; + String.valueOf(nb_materials));&#xD;&#xA;&#xD;&#xA;return nb_materials;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;filterMaterials&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_My1BYGm-Ee2od597qOQ9lw" name="materialsData" multiple="true" dataType="_2dZ5smmnEe2od597qOQ9lw" className="java.util.List"/>
              <referencedElements xmi:type="process:Data" xmi:id="_My1BYWm-Ee2od597qOQ9lw" name="ignoreHeaderLine" dataType="_2dZ5rGmnEe2od597qOQ9lw"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_My1BYmm-Ee2od597qOQ9lw" name="logClass" typeClassname="java.lang.String"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_rXLyA2myEe2od597qOQ9lw" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_CVKxtGmoEe2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_CVKxtWmoEe2od597qOQ9lw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_CVKxtmmoEe2od597qOQ9lw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_CVKxuGmoEe2od597qOQ9lw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_CVKxt2moEe2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_xGIxgGm1Ee2od597qOQ9lw" name="Filter materials list" outgoing="_tmwDEGnBEe2od597qOQ9lw _U-N1wGp_Ee2od597qOQ9lw _tzLkMGp_Ee2od597qOQ9lw" incoming="_zIJskGm1Ee2od597qOQ9lw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_xGLNwWm1Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_xGLNwGm1Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_xGLNwmm1Ee2od597qOQ9lw" name="descriptionAfterCompletion()" content="def String desc=&quot;Found &quot; + String.valueOf(nbMaterials) + &quot; materials with a valid energy&quot;;&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_k8NKQGnAEe2od597qOQ9lw" name="nbMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
          </stepSummary>
          <operations xmi:type="expression:Operation" xmi:id="_3d5k0Gm1Ee2od597qOQ9lw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_3d5k0Wm1Ee2od597qOQ9lw" name="filteredMaterials" content="filteredMaterials" type="TYPE_VARIABLE" returnType="java.util.List">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_4LZkAGm1Ee2od597qOQ9lw" documentation="List of materials with a valid energy, with fields:&#xD;&#xA;materialNumber, energy, retrofit, b100, xtl, zfe&#xD;&#xA;" name="filteredMaterials" multiple="true" dataType="_2dZ5smmnEe2od597qOQ9lw" className="java.util.Map"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_3d5k0mm1Ee2od597qOQ9lw" name="filterMaterials" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def List&lt;Map&lt;String, Object>> filtered_materials = [];&#xD;&#xA;def log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Loop through each line in Excel file&#xD;&#xA;&#x9;def int first_material = (ignoreHeaderLine) ? 1 : 0;&#xD;&#xA;&#x9;def int list_size = materialsData.size();&#xD;&#xA;&#x9;for (int i=first_material; i&lt;list_size; i++) {&#xD;&#xA;&#x9;&#x9;def List&lt;Object> one_material = materialsData[i];&#xD;&#xA;&#x9;&#x9;// Check the number of columns : at least 5&#xD;&#xA;&#x9;&#x9;def int nb_cols = one_material.size();&#xD;&#xA;&#x9;&#x9;if (nb_cols &lt; 6) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Excel line &quot; + String.valueOf(i+1) + &quot;: Ignore line with &quot; + String.valueOf(nb_cols) + &quot; columns&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def String material_number = one_material[0];&#xD;&#xA;&#x9;&#x9;&#x9;if (material_number) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def energy_code = one_material[1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (energy_code &amp;&amp; energy_code != energyCodeToBeDefined) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Found a valid energy&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def Map valid_material = [&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;materialNumber&quot; : material_number,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;energyCode&quot; : energy_code,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;energyName&quot; : one_material[2],&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;retrofit&quot; : getBoolean(one_material[3]),&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;b100&quot; : getBoolean(one_material[4]),&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;xtl&quot;  : getBoolean(one_material[5])&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;filtered_materials.add(valid_material);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Ignore invalid energy&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Excel line &quot; + String.valueOf(i+1) + &quot;: Ignore invalid energy for material &quot; + material_number);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Ignore invalid line&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Excel line &quot; + String.valueOf(i+1) + &quot;: Ignore line with no material number&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return filtered_materials;&#xD;&#xA;&#xD;&#xA;def Boolean getBoolean(Object lyre_value) {&#xD;&#xA;&#x9;Boolean res = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if ((lyre_value == 1) || (lyre_value == &quot;1&quot;)) {&#xD;&#xA;&#x9;&#x9;res = true;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else if ((lyre_value == 2) || (lyre_value == &quot;2&quot;)) {&#xD;&#xA;&#x9;&#x9;res = false;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return res;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;filterMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;filterMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;filterMaterials&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_f3TZ0GzdEe2XAuaIctqsHw" name="energyCodeToBeDefined" typeClassname="java.lang.String" description="Lyre energy Lyre code 'A définir' : ignore material in this case"/>
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_f3TZ0WzdEe2XAuaIctqsHw" name="materialsData" multiple="true" dataType="_2dZ5smmnEe2od597qOQ9lw" className="java.util.List"/>
              <referencedElements xmi:type="process:Data" xmi:id="_f3TZ0mzdEe2XAuaIctqsHw" name="ignoreHeaderLine" dataType="_2dZ5rGmnEe2od597qOQ9lw"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_f3TZ02zdEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_3d5k02m1Ee2od597qOQ9lw" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_ro_n0Gm_Ee2od597qOQ9lw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_ro_n0Wm_Ee2od597qOQ9lw" name="nbFilteredMaterials" content="nbFilteredMaterials" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_sy1kwGm_Ee2od597qOQ9lw" name="nbFilteredMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_ro_n0mm_Ee2od597qOQ9lw" name="getNbFilteredMaterials" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def int nb_materials = 0;&#xD;&#xA;def log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;if (filteredMaterials != null) {&#xD;&#xA;&#x9;nb_materials = filteredMaterials.size();&#xD;&#xA;}&#xD;&#xA;logInfo(log_file, &quot;Number of valid materials to update : &quot; + String.valueOf(nb_materials));&#xD;&#xA;&#xD;&#xA;return nb_materials;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;getNbFilteredMaterials&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_-1FpQGm_Ee2od597qOQ9lw" name="logClass" typeClassname="java.lang.String"/>
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_-1FpQWm_Ee2od597qOQ9lw" documentation="List of materials with a valid energy, with fields:&#xD;&#xA;materialNumber, energy, retrofit, b100, xtl, zfe&#xD;&#xA;" name="filteredMaterials" multiple="true" dataType="_2dZ5smmnEe2od597qOQ9lw" className="java.util.Map"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_ro_n02m_Ee2od597qOQ9lw" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_lPj5MGnCEe2od597qOQ9lw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_lPj5MWnCEe2od597qOQ9lw" name="maxNumberOfBatches" content="maxNumberOfBatches" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_lxtkAGnCEe2od597qOQ9lw" name="maxNumberOfBatches" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_lPj5MmnCEe2od597qOQ9lw" name="setMaxNumberOfBatches" content="def double_value = Math.ceil(nbFilteredMaterials /nbMaterialsPerBatch);&#xD;&#xA;return double_value.intValue();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_CHRRkGsGEe2od597qOQ9lw" name="nbFilteredMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_CHRRkWsGEe2od597qOQ9lw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_lPj5M2nCEe2od597qOQ9lw" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_xGLNw2m1Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_xGLNxGm1Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_xGLNxWm1Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_xGLNx2m1Ee2od597qOQ9lw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_xGLNxmm1Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_jGTjIGnBEe2od597qOQ9lw" name="Process one batch" outgoing="_syPhEGp-Ee2od597qOQ9lw" incoming="_tmwDEGnBEe2od597qOQ9lw" type="STANDARD" testBefore="true">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jGWmcWnBEe2od597qOQ9lw" name="displayName()" content="def String desc = &quot;Batch n°&quot; + String.valueOf(batchCount + 1);&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_JmHMQGsHEe2od597qOQ9lw" name="batchCount" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
          </dynamicLabel>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jGWmcGnBEe2od597qOQ9lw" name="dynamicDescription()" content="def String desc = &quot;Processing materials &quot; + String.valueOf(materialStartIndex) + &quot; to &quot; + String.valueOf(materialEndIndex);&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_H3XLcGsHEe2od597qOQ9lw" name="materialStartIndex" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            <referencedElements xmi:type="process:Data" xmi:id="_H3XLcWsHEe2od597qOQ9lw" name="materialEndIndex" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jGWmcmnBEe2od597qOQ9lw" name="descriptionAfterCompletion()" content="def String desc = &quot;Updated &quot; + String.valueOf(nbUpdatedPropositionsOnBatch) + &quot; propositions on this step, total=&quot; + String.valueOf(nbPropositionsUpdated);&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_yRvp8GzfEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            <referencedElements xmi:type="process:Data" xmi:id="_yRvp8WzfEe2XAuaIctqsHw" name="nbPropositionsUpdated" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
          </stepSummary>
          <data xmi:type="process:Data" xmi:id="_9gT8wGnBEe2od597qOQ9lw" name="materialStartIndex" dataType="_2dZ5rmmnEe2od597qOQ9lw">
            <defaultValue xmi:type="expression:Expression" xmi:id="_9gT8wWnBEe2od597qOQ9lw" name="init_materialStartIndex()" content="return batchCount * nbMaterialsPerBatch;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_UfeigGsHEe2od597qOQ9lw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
              <referencedElements xmi:type="process:Data" xmi:id="_UfeigWsHEe2od597qOQ9lw" name="batchCount" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </defaultValue>
          </data>
          <data xmi:type="process:Data" xmi:id="_VqAOsGnEEe2od597qOQ9lw" name="materialEndIndex" dataType="_2dZ5rmmnEe2od597qOQ9lw">
            <defaultValue xmi:type="expression:Expression" xmi:id="_VqAOsWnEEe2od597qOQ9lw" name="init_materialEndIndex()" content="def int end_index = (batchCount * nbMaterialsPerBatch) + nbMaterialsPerBatch;&#xD;&#xA;if (end_index >= nbFilteredMaterials) {&#xD;&#xA;&#x9;end_index = nbFilteredMaterials-1;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return end_index" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_ZlO7YGsHEe2od597qOQ9lw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
              <referencedElements xmi:type="process:Data" xmi:id="_ZlO7YWsHEe2od597qOQ9lw" name="batchCount" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
              <referencedElements xmi:type="process:Data" xmi:id="_ZlO7YmsHEe2od597qOQ9lw" name="nbFilteredMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </defaultValue>
          </data>
          <data xmi:type="process:Data" xmi:id="_AmGV0GzfEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" dataType="_2dZ5rmmnEe2od597qOQ9lw">
            <defaultValue xmi:type="expression:Expression" xmi:id="_AmGV0WzfEe2XAuaIctqsHw" name="0" content="0" returnType="java.lang.Integer"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_YD4z8GqEEe2od597qOQ9lw" name="Process_Lot" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_YD4z8WqEEe2od597qOQ9lw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.12.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YD4z8mqEEe2od597qOQ9lw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_YD4z82qEEe2od597qOQ9lw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YD4z9GqEEe2od597qOQ9lw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YD4z9WqEEe2od597qOQ9lw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_YD4z9mqEEe2od597qOQ9lw" name="ProcessOneLotOfMaterials" content="import com.sgdbf.model.Proposition&#xD;&#xA;import com.sgdbf.model.PropositionDAO&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logInfo(log_file, &quot;Starting batch &quot; + String.valueOf(batchCount) + &quot; : processing materials &quot; + String.valueOf(materialStartIndex) + &quot; to &quot; + String.valueOf(materialEndIndex));&#xD;&#xA;&#x9;return filteredMaterials.subList(materialStartIndex, materialEndIndex);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;def String error_msg = &quot;Exception processing batch &quot; + String.valueOf(batchCount) + &quot; : &quot; + e;&#xD;&#xA;&#x9;logError(log_file, error_msg);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_Li-OwGv9Ee2XAuaIctqsHw" documentation="List of materials with a valid energy, with fields:&#xD;&#xA;materialNumber, energy, retrofit, b100, xtl, zfe&#xD;&#xA;" name="filteredMaterials" multiple="true" dataType="_2dZ5smmnEe2od597qOQ9lw" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_Li-10Gv9Ee2XAuaIctqsHw" name="materialStartIndex" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_Li-10Wv9Ee2XAuaIctqsHw" name="materialEndIndex" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_Li-10mv9Ee2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_Li-102v9Ee2XAuaIctqsHw" name="batchCount" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_YD4z_WqEEe2od597qOQ9lw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_YD4z_mqEEe2od597qOQ9lw" name="updatedPropositions" content="updatedPropositions" type="TYPE_VARIABLE" returnType="java.util.List">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_RqJA0GrKEe2od597qOQ9lw" name="updatedPropositions" multiple="true" dataType="_2dZ5tGmnEe2od597qOQ9lw" className="com.sgdbf.model.Proposition"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_YD4z_2qEEe2od597qOQ9lw" name="getPropositionsToUpdate" content="import com.sgdbf.model.Proposition&#xD;&#xA;import com.sgdbf.model.PropositionDAO&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def int nb_materials_processed = 0;&#xD;&#xA;def int nb_propositions_updated = 0;&#xD;&#xA;def String error_msg = &quot;&quot;;&#xD;&#xA;def List&lt;Proposition> list_propositions_to_update = [];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Get list of materials to process&#xD;&#xA;&#x9;def List&lt;Map&lt;String, Object>> materials_list = result;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Process each material&#xD;&#xA;&#x9;for (Map&lt;String, Object> one_material : materials_list) {&#xD;&#xA;&#x9;&#x9;def String material_number = one_material[&quot;materialNumber&quot;];&#xD;&#xA;&#x9;&#x9;def int nb_material_props_updated = 0;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Search propositions for this material&#xD;&#xA;&#x9;&#x9;def List&lt;Proposition> list_propositions = searchPropositions(propositionDAO, material_number);&#xD;&#xA;&#x9;&#x9;if (list_propositions == null) {&#xD;&#xA;&#x9;&#x9;&#x9;error_msg = &quot;Error processing batch &quot; + String.valueOf(batchCount) + &quot;, failed to search existing propositions for material [&quot; + material_number + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, error_msg);&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def int nb_propositions = list_propositions.size() ;&#xD;&#xA;&#x9;&#x9;&#x9;one_material[&quot;nbPropositions&quot;] = nb_propositions;&#xD;&#xA;&#x9;&#x9;&#x9;if (nb_propositions > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Checking the propositions to update&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Batch &quot; + String.valueOf(batchCount) + &quot; : Updating &quot; + String.valueOf(nb_propositions) + &quot; propositions for material [&quot; + material_number + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;for (int prop_num=0; prop_num&lt;nb_propositions; prop_num++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def Proposition one_prop = list_propositions[prop_num];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;one_material = updateProposition(one_prop, one_material);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def one_prop_error_msg = one_material[&quot;errorMsg&quot;];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (one_prop_error_msg  != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to update proposition [&quot; + one_prop.persistenceId +  &quot;] : &quot; + one_prop_error_msg);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (error_msg != &quot;&quot;) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;error_msg += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;error_msg += one_prop_error_msg;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Get list of propositions updated&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def List&lt;Proposition> updated_props = one_material[&quot;updatedPropositions&quot;];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if ((updated_props != null) &amp;&amp; (updated_props.size() > 0)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list_propositions_to_update.addAll(updated_props);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;nb_material_props_updated += updated_props.size();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Count total number of updated propositions&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;nb_propositions_updated += nb_material_props_updated;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Batch &quot; + String.valueOf(batchCount) + &quot; : no proposition found for material [&quot; + material_number + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Increment number of materials processed&#xD;&#xA;&#x9;&#x9;&#x9;nb_materials_processed++;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} // End for materials&#xD;&#xA;&#x9;logInfo(log_file, &quot;End of batch &quot; + String.valueOf(batchCount) + &quot; : processed &quot; + String.valueOf(nb_materials_processed) + &quot; materials and updated &quot; + String.valueOf(nb_propositions_updated) + &quot; propositions&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_msg = &quot;Exception processing batch &quot; + String.valueOf(batchCount) + &quot; : &quot; + e;&#xD;&#xA;&#x9;logError(log_file, error_msg);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return list_propositions_to_update;&#xD;&#xA;&#xD;&#xA;def List&lt;Proposition> searchPropositions(PropositionDAO propositionDAO, String material_number) {&#xD;&#xA;&#x9;List&lt;Proposition> props = propositionDAO.findByMaterialNumber(material_number, 0, 1000);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return props;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, Object> updateProposition(Proposition one_prop, Map&lt;String, Object> one_material) {&#xD;&#xA;&#x9;def boolean is_updated = false;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check energy code&#xD;&#xA;&#x9;def String energy_code = one_material[&quot;energyCode&quot;];&#xD;&#xA;&#x9;if ((energy_code != null) &amp;&amp; (one_prop.currentEnergyCode != energy_code )) {&#xD;&#xA;&#x9;&#x9;one_prop.currentEnergyCode = energy_code;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;// Check energy name&#xD;&#xA;&#x9;def String energy_name = one_material[&quot;energyName&quot;];&#xD;&#xA;&#x9;if ((energy_name != null) &amp;&amp; (one_prop.currentEnergyName != energy_name )) {&#xD;&#xA;&#x9;&#x9;one_prop.currentEnergyName = energy_name;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;// Check retrofit flag&#xD;&#xA;&#x9;def Boolean retrofit = one_material[&quot;retrofit&quot;];&#xD;&#xA;&#x9;if ((retrofit == true) &amp;&amp; (one_prop.currentRetrofitable != retrofit)) {&#xD;&#xA;&#x9;&#x9;one_prop.currentRetrofitable = retrofit;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check B100&#xD;&#xA;&#x9;def Boolean b100 =  one_material[&quot;b100&quot;];&#xD;&#xA;&#x9;if ((b100 == true) &amp;&amp; (one_prop.currentBiofuelB100 != b100)) {&#xD;&#xA;&#x9;&#x9;one_prop.currentBiofuelB100 = b100;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check XTL&#xD;&#xA;&#x9;def Boolean xtl =  one_material[&quot;xtl&quot;];&#xD;&#xA;&#x9;if ((xtl == true) &amp;&amp; (one_prop.currentBiofuelXTL != xtl)) {&#xD;&#xA;&#x9;&#x9;one_prop.currentBiofuelXTL = xtl;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;if (is_updated) {&#xD;&#xA;&#x9;&#x9;def List&lt;Proposition> updated_props = one_material[&quot;updatedPropositions&quot;];&#xD;&#xA;&#x9;&#x9;if (updated_props == null) {&#xD;&#xA;&#x9;&#x9;&#x9;updated_props = [];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;updated_props.add(one_prop);&#xD;&#xA;&#x9;&#x9;one_material[&quot;updatedPropositions&quot;] = updated_props;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return one_material;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_zHdRUGzcEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="process:Data" xmi:id="_zHdRUWzcEe2XAuaIctqsHw" name="batchCount" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
                <referencedElements xmi:type="definition:Output" xmi:id="_zHdRUmzcEe2XAuaIctqsHw" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_zHdRU2zcEe2XAuaIctqsHw" name="propositionDAO" content="propositionDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.PropositionDAO" returnTypeFixed="true"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_YD40AWqEEe2od597qOQ9lw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <operations xmi:type="expression:Operation" xmi:id="_vScogGnEEe2od597qOQ9lw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_vScogWnEEe2od597qOQ9lw" name="batchCount" content="batchCount" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_v5UbQGnEEe2od597qOQ9lw" name="batchCount" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_vScogmnEEe2od597qOQ9lw" name="increment" content="batchCount + 1;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_z9FLoGnEEe2od597qOQ9lw" name="batchCount" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_vScog2nEEe2od597qOQ9lw" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_Jxo4UGzfEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_Jxo4UWzfEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" content="nbUpdatedPropositionsOnBatch" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_LAZKcGzfEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_Jxo4UmzfEe2XAuaIctqsHw" name="numberOfPropositionsInList" content="def int nb_props = 0;&#xD;&#xA;&#xD;&#xA;if (updatedPropositions != null) {&#xD;&#xA;&#x9;nb_props = updatedPropositions.size();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return nb_props ;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_eiJS0GzfEe2XAuaIctqsHw" name="updatedPropositions" multiple="true" dataType="_2dZ5tGmnEe2od597qOQ9lw" className="com.sgdbf.model.Proposition"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_Jxo4U2zfEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_WruwMGzfEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_WruwMWzfEe2XAuaIctqsHw" name="nbPropositionsUpdated" content="nbPropositionsUpdated" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_Xshe0GzfEe2XAuaIctqsHw" name="nbPropositionsUpdated" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_WruwMmzfEe2XAuaIctqsHw" name="addNumberOnStep" content="return nbPropositionsUpdated + nbUpdatedPropositionsOnBatch;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_iU9dIGzfEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
              <referencedElements xmi:type="process:Data" xmi:id="_iU9dIWzfEe2XAuaIctqsHw" name="nbPropositionsUpdated" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_WruwM2zfEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_jGWmc2nBEe2od597qOQ9lw" name="loopWhile()" content="nbMaterialsProcessed &lt; nbFilteredMaterials" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_b3q8wGnCEe2od597qOQ9lw" name="nbMaterialsProcessed" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
            <referencedElements xmi:type="process:Data" xmi:id="_b3q8wWnCEe2od597qOQ9lw" name="nbFilteredMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
          </loopCondition>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_jGWmdGnBEe2od597qOQ9lw" name="maxNumberOfBatches" content="maxNumberOfBatches" type="TYPE_VARIABLE" returnType="java.lang.Integer" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_CP4YUGnEEe2od597qOQ9lw" name="maxNumberOfBatches" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
          </loopMaximum>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_jGWmdWnBEe2od597qOQ9lw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_jGWmd2nBEe2od597qOQ9lw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_jGWmdmnBEe2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndEvent" xmi:id="_sx8mIGp-Ee2od597qOQ9lw" name="End" incoming="_yfMc0Gp-Ee2od597qOQ9lw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_syGXIWp-Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_syGXIGp-Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_syGXImp-Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_yfDS4Gp-Ee2od597qOQ9lw" name="Send report" outgoing="_yfMc0Gp-Ee2od597qOQ9lw" incoming="_syPhEGp-Ee2od597qOQ9lw _7vaD8Gp-Ee2od597qOQ9lw _dndjgGp_Ee2od597qOQ9lw _tzLkMGp_Ee2od597qOQ9lw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_yfD58Wp-Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_yfD58Gp-Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_yfD58mp-Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_yfD582p-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_yfD59Gp-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_yfD59Wp-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_yfD592p-Ee2od597qOQ9lw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_yfD59mp-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_5HF94Gp-Ee2od597qOQ9lw" name="Report error" outgoing="_7vaD8Gp-Ee2od597qOQ9lw" incoming="_Bqs9sGp_Ee2od597qOQ9lw _U-N1wGp_Ee2od597qOQ9lw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_5HF94mp-Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_5HF94Wp-Ee2od597qOQ9lw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_5HF942p-Ee2od597qOQ9lw" name="descriptionAfterCompletion()" content="def String desc = &quot;Error detected&quot;;&#xD;&#xA;&#xD;&#xA;if (errorMsg != null) {&#xD;&#xA;&#x9;desc += &quot; : &quot; + errorMsg;&#xD;&#xA;}&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_Ks46cGqAEe2od597qOQ9lw" name="errorMsg" dataType="_2dZ5sWmnEe2od597qOQ9lw"/>
          </stepSummary>
          <loopCondition xmi:type="expression:Expression" xmi:id="_5HF95Gp-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_5HF95Wp-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_5HF95mp-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_5HF96Gp-Ee2od597qOQ9lw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_5HF952p-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
      </elements>
      <data xmi:type="process:JavaObjectData" xmi:id="_AUcTQGmsEe2od597qOQ9lw" name="materialsData" multiple="true" dataType="_2dZ5smmnEe2od597qOQ9lw" className="java.util.List">
        <defaultValue xmi:type="expression:Expression" xmi:id="_AUcTQWmsEe2od597qOQ9lw" name="emptyList" content="return [];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_mrJyoGmwEe2od597qOQ9lw" name="materialsFile" dataType="_2dZ5smmnEe2od597qOQ9lw" className="org.bonitasoft.engine.bpm.contract.FileInputValue">
        <defaultValue xmi:type="expression:Expression" xmi:id="_mrJyoWmwEe2od597qOQ9lw" name="excelFile" content="excelFile" interpreter="GROOVY" type="TYPE_CONTRACT_INPUT" returnType="org.bonitasoft.engine.bpm.contract.FileInputValue">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_gaBDsGrMEe2od597qOQ9lw" name="excelFile" type="FILE">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_gaBDsWrMEe2od597qOQ9lw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_ARFrAGmxEe2od597qOQ9lw" name="errorMsg" dataType="_2dZ5sWmnEe2od597qOQ9lw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ARFrAWmxEe2od597qOQ9lw" name="emptystring" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_aOTa8GmxEe2od597qOQ9lw" name="nbMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_aOTa8WmxEe2od597qOQ9lw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_iCf6kGmyEe2od597qOQ9lw" name="ignoreHeaderLine" dataType="_2dZ5rGmnEe2od597qOQ9lw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_iCf6kWmyEe2od597qOQ9lw" name="withHeaderLine" content="withHeaderLine" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Boolean">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_pi2toGmyEe2od597qOQ9lw" name="withHeaderLine" type="BOOLEAN">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_pi2toWmyEe2od597qOQ9lw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_t510oGm1Ee2od597qOQ9lw" documentation="List of materials with a valid energy, with fields:&#xD;&#xA;materialNumber, energy, retrofit, b100, xtl, zfe&#xD;&#xA;" name="filteredMaterials" multiple="true" dataType="_2dZ5smmnEe2od597qOQ9lw" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_t510oWm1Ee2od597qOQ9lw" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_sQhXUGm-Ee2od597qOQ9lw" name="nbFilteredMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_sQhXUWm-Ee2od597qOQ9lw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_rqbgUGnBEe2od597qOQ9lw" name="nbMaterialsProcessed" dataType="_2dZ5rmmnEe2od597qOQ9lw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_rqbgUWnBEe2od597qOQ9lw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_jrqdgGnCEe2od597qOQ9lw" name="maxNumberOfBatches" dataType="_2dZ5rmmnEe2od597qOQ9lw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jrqdgWnCEe2od597qOQ9lw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_s7f_QGnEEe2od597qOQ9lw" name="batchCount" dataType="_2dZ5rmmnEe2od597qOQ9lw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_s7f_QWnEEe2od597qOQ9lw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_1copQGrJEe2od597qOQ9lw" name="updatedPropositions" multiple="true" dataType="_2dZ5tGmnEe2od597qOQ9lw" className="com.sgdbf.model.Proposition">
        <defaultValue xmi:type="expression:Expression" xmi:id="_1copQWrJEe2od597qOQ9lw" name="init_updatedPropositions()" content="return [];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_FuhBIGzfEe2XAuaIctqsHw" name="nbPropositionsUpdated" dataType="_2dZ5rmmnEe2od597qOQ9lw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_FuhBIWzfEe2XAuaIctqsHw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_2dZ5lGmnEe2od597qOQ9lw">
        <targetForm xmi:type="expression:Expression" xmi:id="_gP3p4GmzEe2od597qOQ9lw" name="loadExcelFileForm" content="707763e5-9799-4612-88f6-8c507760c18c" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_2dZ5lmmnEe2od597qOQ9lw">
        <targetForm xmi:type="expression:Expression" xmi:id="_2dZ5l2mnEe2od597qOQ9lw" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_GYfdMGmoEe2od597qOQ9lw" target="_CVKxsGmoEe2od597qOQ9lw" source="_2dZ5g2mnEe2od597qOQ9lw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_GYgEQGmoEe2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_GYgEQWmoEe2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_zIJskGm1Ee2od597qOQ9lw" name="materials loaded" target="_xGIxgGm1Ee2od597qOQ9lw" source="_CVKxsGmoEe2od597qOQ9lw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_zIJskWm1Ee2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_zIJskmm1Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_tmwDEGnBEe2od597qOQ9lw" name="materials to process" target="_jGTjIGnBEe2od597qOQ9lw" source="_xGIxgGm1Ee2od597qOQ9lw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_tmzGYGnBEe2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_tmzGYWnBEe2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_syPhEGp-Ee2od597qOQ9lw" target="_yfDS4Gp-Ee2od597qOQ9lw" source="_jGTjIGnBEe2od597qOQ9lw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_syPhEWp-Ee2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_syPhEmp-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_yfMc0Gp-Ee2od597qOQ9lw" target="_sx8mIGp-Ee2od597qOQ9lw" source="_yfDS4Gp-Ee2od597qOQ9lw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_yfMc0Wp-Ee2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_yfMc0mp-Ee2od597qOQ9lw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_7vaD8Gp-Ee2od597qOQ9lw" target="_yfDS4Gp-Ee2od597qOQ9lw" source="_5HF94Gp-Ee2od597qOQ9lw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_7vaD8Wp-Ee2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_7vaD8mp-Ee2od597qOQ9lw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_Bqs9sGp_Ee2od597qOQ9lw" name="Error detected" target="_5HF94Gp-Ee2od597qOQ9lw" source="_CVKxsGmoEe2od597qOQ9lw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_BqwoEGp_Ee2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_BqwoEWp_Ee2od597qOQ9lw" name="(errorMsg != null) &amp;&amp; (errorMsg != &quot;&quot;)" content="return (errorMsg != null) &amp;&amp; (errorMsg != &quot;&quot;);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_SmqIgGp_Ee2od597qOQ9lw" name="errorMsg" dataType="_2dZ5sWmnEe2od597qOQ9lw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_U-N1wGp_Ee2od597qOQ9lw" name="error detected" target="_5HF94Gp-Ee2od597qOQ9lw" source="_xGIxgGm1Ee2od597qOQ9lw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_U-N1wWp_Ee2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_U-N1wmp_Ee2od597qOQ9lw" name="newScript()" content="return (errorMsg != null) &amp;&amp; (errorMsg != &quot;&quot;);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_X9bY4Gp_Ee2od597qOQ9lw" name="errorMsg" dataType="_2dZ5sWmnEe2od597qOQ9lw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_dndjgGp_Ee2od597qOQ9lw" name="No materials found" target="_yfDS4Gp-Ee2od597qOQ9lw" source="_CVKxsGmoEe2od597qOQ9lw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_dndjgWp_Ee2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_dndjgmp_Ee2od597qOQ9lw" name="No material" content="return (nbMaterials == 0) &amp;&amp; (errorMsg == &quot;&quot;);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_sb8EcGp_Ee2od597qOQ9lw" name="nbMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
          <referencedElements xmi:type="process:Data" xmi:id="_sb8EcWp_Ee2od597qOQ9lw" name="errorMsg" dataType="_2dZ5sWmnEe2od597qOQ9lw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_tzLkMGp_Ee2od597qOQ9lw" name="No materials in filtered list" target="_yfDS4Gp-Ee2od597qOQ9lw" source="_xGIxgGm1Ee2od597qOQ9lw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_tzLkMWp_Ee2od597qOQ9lw"/>
        <condition xmi:type="expression:Expression" xmi:id="_tzLkMmp_Ee2od597qOQ9lw" name="newScript()" content="(nbFilteredMaterials == 0) &amp;&amp; (errorMsg == &quot;&quot;)" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_5QzeEGp_Ee2od597qOQ9lw" name="nbFilteredMaterials" dataType="_2dZ5rmmnEe2od597qOQ9lw"/>
          <referencedElements xmi:type="process:Data" xmi:id="_5QzeEWp_Ee2od597qOQ9lw" name="errorMsg" dataType="_2dZ5sWmnEe2od597qOQ9lw"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_2dZ5m2mnEe2od597qOQ9lw" documentation="Admin user" name="Administrator" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_c3jQ8Gm4Ee2od597qOQ9lw" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_c3jQ-mm4Ee2od597qOQ9lw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_c3jQ-2m4Ee2od597qOQ9lw" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_c3jQ_Gm4Ee2od597qOQ9lw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_c3jQ_Wm4Ee2od597qOQ9lw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_c3jQ_mm4Ee2od597qOQ9lw">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_c3jQ_2m4Ee2od597qOQ9lw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_c3jQ8Wm4Ee2od597qOQ9lw" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_c3jQ8mm4Ee2od597qOQ9lw" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_c3jQ82m4Ee2od597qOQ9lw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_ElhxAIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_EmYFkIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_c3jQ9mm4Ee2od597qOQ9lw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRAGm4Ee2od597qOQ9lw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRAWm4Ee2od597qOQ9lw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRAmm4Ee2od597qOQ9lw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRA2m4Ee2od597qOQ9lw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRBGm4Ee2od597qOQ9lw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRBWm4Ee2od597qOQ9lw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRBmm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRB2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRCGm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRCWm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRCmm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRC2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRDGm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRDWm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRDmm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRD2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jREGm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jREWm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jREmm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRE2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRFGm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRFWm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRFmm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRF2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_c3jQ92m4Ee2od597qOQ9lw" id="OTHER">
          <fragments xmi:type="configuration:Fragment" xmi:id="_y05OIGrNEe2od597qOQ9lw" key="poi-4.0.0.jar" value="poi-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_y08RcGrNEe2od597qOQ9lw" key="poi-ooxml-4.0.0.jar" value="poi-ooxml-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_y08RcWrNEe2od597qOQ9lw" key="poi-scratchpad-4.0.0.jar" value="poi-scratchpad-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_y08RcmrNEe2od597qOQ9lw" key="commons-collections4-4.2.jar" value="commons-collections4-4.2.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_y08Rc2rNEe2od597qOQ9lw" key="commons-compress-1.21.jar" value="commons-compress-1.21.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_y08RdGrNEe2od597qOQ9lw" key="poi-ooxml-schemas-4.0.0.jar" value="poi-ooxml-schemas-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_y08RdWrNEe2od597qOQ9lw" key="commons-math3-3.6.1.jar" value="commons-math3-3.6.1.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_y08RdmrNEe2od597qOQ9lw" key="curvesapi-1.05.jar" value="curvesapi-1.05.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_y08Rd2rNEe2od597qOQ9lw" key="xmlbeans-3.0.1.jar" value="xmlbeans-3.0.1.jar" type="JAR"/>
        </processDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_c3jQ-Gm4Ee2od597qOQ9lw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRGGm4Ee2od597qOQ9lw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRGWm4Ee2od597qOQ9lw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRGmm4Ee2od597qOQ9lw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRG2m4Ee2od597qOQ9lw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRHGm4Ee2od597qOQ9lw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRHWm4Ee2od597qOQ9lw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRHmm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRH2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRIGm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRIWm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRImm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRI2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRJGm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRJWm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRJmm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRJ2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRKGm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRKWm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRKmm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRK2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRLGm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRLWm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRLmm4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_c3jRL2m4Ee2od597qOQ9lw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_c3jQ-Wm4Ee2od597qOQ9lw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_c3jRMWm4Ee2od597qOQ9lw" name="logClass" value="com.sgdbf.pop3p.groovy.UpdateEnergyOnPropositions" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_c3jRMmm4Ee2od597qOQ9lw" name="energyCodeToBeDefined" value="99" typeClassname="java.lang.String" description="Lyre energy Lyre code 'A définir' : ignore material in this case"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NUmxYGnBEe2od597qOQ9lw" name="nbMaterialsPerBatch" value="10" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_wMhNYGzgEe2XAuaIctqsHw" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_wMibgGzgEe2XAuaIctqsHw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_wMibgWzgEe2XAuaIctqsHw" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_wMibgmzgEe2XAuaIctqsHw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_wMibg2zgEe2XAuaIctqsHw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_wMibhGzgEe2XAuaIctqsHw"/>
            <users xmi:type="actormapping:Users" xmi:id="_wMibhWzgEe2XAuaIctqsHw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_wMhNYWzgEe2XAuaIctqsHw" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_wMhNYmzgEe2XAuaIctqsHw" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_wMhNY2zgEe2XAuaIctqsHw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_EnOaIIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_EoHK8IExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_wMhNZmzgEe2XAuaIctqsHw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibhmzgEe2XAuaIctqsHw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibh2zgEe2XAuaIctqsHw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibiGzgEe2XAuaIctqsHw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibiWzgEe2XAuaIctqsHw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibimzgEe2XAuaIctqsHw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibi2zgEe2XAuaIctqsHw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibjGzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibjWzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibjmzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibj2zgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibkGzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibkWzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibkmzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMibk2zgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMiblGzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMiblWzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCkGzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCkWzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCkmzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCk2zgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjClGzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjClWzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjClmzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCl2zgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_wMhNZ2zgEe2XAuaIctqsHw" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_wMhNaGzgEe2XAuaIctqsHw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCmGzgEe2XAuaIctqsHw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCmWzgEe2XAuaIctqsHw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCmmzgEe2XAuaIctqsHw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCm2zgEe2XAuaIctqsHw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCnGzgEe2XAuaIctqsHw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCnWzgEe2XAuaIctqsHw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCnmzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCn2zgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCoGzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCoWzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjComzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCo2zgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCpGzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCpWzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCpmzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCp2zgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCqGzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCqWzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCqmzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCq2zgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCrGzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCrWzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCrmzgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_wMjCr2zgEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_wMhNaWzgEe2XAuaIctqsHw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_wMjCsGzgEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_wMjCsWzgEe2XAuaIctqsHw" name="energyCodeToBeDefined" typeClassname="java.lang.String" description="Lyre energy Lyre code 'A définir' : ignore material in this case"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_wMjCsmzgEe2XAuaIctqsHw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_ie-ikGmvEe2od597qOQ9lw" name="logClass" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_aqZc4Gm4Ee2od597qOQ9lw" name="energyCodeToBeDefined" typeClassname="java.lang.String" description="Lyre energy Lyre code 'A définir' : ignore material in this case"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_LQBqgGnBEe2od597qOQ9lw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
      <contract xmi:type="process:Contract" xmi:id="_2dZ5nGmnEe2od597qOQ9lw">
        <inputs xmi:type="process:ContractInput" xmi:id="_e1XNAGmuEe2od597qOQ9lw" name="excelFile" type="FILE">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_e1XNAWmuEe2od597qOQ9lw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_kJv68GmyEe2od597qOQ9lw" name="withHeaderLine" type="BOOLEAN">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_kJv68WmyEe2od597qOQ9lw"/>
        </inputs>
      </contract>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_2dZ5nWmnEe2od597qOQ9lw">
        <name xmi:type="expression:Expression" xmi:id="_2dZ5nmmnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_2dZ5n2mnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_2dZ5oGmnEe2od597qOQ9lw">
        <name xmi:type="expression:Expression" xmi:id="_2dZ5oWmnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_2dZ5ommnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_2dZ5o2mnEe2od597qOQ9lw">
        <name xmi:type="expression:Expression" xmi:id="_2dZ5pGmnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_2dZ5pWmnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_2dZ5pmmnEe2od597qOQ9lw">
        <name xmi:type="expression:Expression" xmi:id="_2dZ5p2mnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_2dZ5qGmnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_2dZ5qWmnEe2od597qOQ9lw">
        <name xmi:type="expression:Expression" xmi:id="_2dZ5qmmnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_2dZ5q2mnEe2od597qOQ9lw" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_2dZ5rGmnEe2od597qOQ9lw" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_2dZ5rWmnEe2od597qOQ9lw" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_2dZ5rmmnEe2od597qOQ9lw" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_2dZ5r2mnEe2od597qOQ9lw" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_2dZ5sGmnEe2od597qOQ9lw" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_2dZ5sWmnEe2od597qOQ9lw" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_2dZ5smmnEe2od597qOQ9lw" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_2dZ5s2mnEe2od597qOQ9lw" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_2dZ5tGmnEe2od597qOQ9lw" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_2dZ5tWmnEe2od597qOQ9lw" type="Process" element="_2dZ5gGmnEe2od597qOQ9lw" name="MyDiagram" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_2dZ5tmmnEe2od597qOQ9lw" type="2007" element="_2dZ5gWmnEe2od597qOQ9lw">
      <children xmi:type="notation:DecorationNode" xmi:id="_2dZ5t2mnEe2od597qOQ9lw" type="5008"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_2dZ5uGmnEe2od597qOQ9lw" type="7001">
        <children xmi:type="notation:Node" xmi:id="_2dZ5uWmnEe2od597qOQ9lw" type="3007" element="_2dZ5gmmnEe2od597qOQ9lw">
          <children xmi:type="notation:DecorationNode" xmi:id="_2dZ5ummnEe2od597qOQ9lw" type="5007"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_2dZ5u2mnEe2od597qOQ9lw" type="7002">
            <children xmi:type="notation:Shape" xmi:id="_2dZ5v2mnEe2od597qOQ9lw" type="3002" element="_2dZ5g2mnEe2od597qOQ9lw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_2dZ5wGmnEe2od597qOQ9lw" type="5024">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_2dZ5wWmnEe2od597qOQ9lw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_2dZ5wmmnEe2od597qOQ9lw" x="60" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_CVUisGmoEe2od597qOQ9lw" type="3027" element="_CVKxsGmoEe2od597qOQ9lw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_CVUismmoEe2od597qOQ9lw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_CVUisWmoEe2od597qOQ9lw" x="204" y="53" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_xGMb4Gm1Ee2od597qOQ9lw" type="3027" element="_xGIxgGm1Ee2od597qOQ9lw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_xGNC8Gm1Ee2od597qOQ9lw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_xGMb4Wm1Ee2od597qOQ9lw" x="441" y="53" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_jGYboGnBEe2od597qOQ9lw" type="3027" element="_jGTjIGnBEe2od597qOQ9lw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_jGYbomnBEe2od597qOQ9lw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jGYboWnBEe2od597qOQ9lw" x="688" y="53" width="112" height="56"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_syGXI2p-Ee2od597qOQ9lw" type="3003" element="_sx8mIGp-Ee2od597qOQ9lw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_syGXJWp-Ee2od597qOQ9lw" type="5025">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_syGXJmp-Ee2od597qOQ9lw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_syGXJGp-Ee2od597qOQ9lw" x="1030" y="65"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_yfEhAGp-Ee2od597qOQ9lw" type="3027" element="_yfDS4Gp-Ee2od597qOQ9lw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_yfEhAmp-Ee2od597qOQ9lw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_yfEhAWp-Ee2od597qOQ9lw" x="859" y="55"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_5HGk8Gp-Ee2od597qOQ9lw" type="3027" element="_5HF94Gp-Ee2od597qOQ9lw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_5HGk8mp-Ee2od597qOQ9lw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_5HGk8Wp-Ee2od597qOQ9lw" x="688" y="141"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_2dZ5w2mnEe2od597qOQ9lw"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_2dZ5xGmnEe2od597qOQ9lw" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_2dZ5xWmnEe2od597qOQ9lw"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_2dZ5xmmnEe2od597qOQ9lw"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_2dZ5x2mnEe2od597qOQ9lw"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_2dZ5yGmnEe2od597qOQ9lw"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_2dZ5yWmnEe2od597qOQ9lw" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_2dZ5ymmnEe2od597qOQ9lw"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_2dZ5y2mnEe2od597qOQ9lw"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_2dZ5zGmnEe2od597qOQ9lw" width="1157" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_2dZ5zWmnEe2od597qOQ9lw"/>
    <edges xmi:type="notation:Connector" xmi:id="_GYhSYGmoEe2od597qOQ9lw" type="4001" element="_GYfdMGmoEe2od597qOQ9lw" source="_2dZ5v2mnEe2od597qOQ9lw" target="_CVUisGmoEe2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_GYh5cGmoEe2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_GYh5cWmoEe2od597qOQ9lw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_GYhSYWmoEe2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_GYhSYmmoEe2od597qOQ9lw" points="[0, -15, -115, -1]$[114, -14, -1, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_GYlj0GmoEe2od597qOQ9lw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_GYlj0WmoEe2od597qOQ9lw" id="(0.008333333333333333,0.5166666666666667)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_zIKToGm1Ee2od597qOQ9lw" type="4001" element="_zIJskGm1Ee2od597qOQ9lw" source="_CVUisGmoEe2od597qOQ9lw" target="_xGMb4Gm1Ee2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_zIKTo2m1Ee2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_zIKTpGm1Ee2od597qOQ9lw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_zIKToWm1Ee2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_zIKTomm1Ee2od597qOQ9lw" points="[0, -4, -95, 0]$[79, -4, -16, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_zIMv4Gm1Ee2od597qOQ9lw" id="(1.0,0.5666666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_zIMv4Wm1Ee2od597qOQ9lw" id="(0.13333333333333333,0.5)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_tm0UgGnBEe2od597qOQ9lw" type="4001" element="_tmwDEGnBEe2od597qOQ9lw" source="_xGMb4Gm1Ee2od597qOQ9lw" target="_jGYboGnBEe2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_tm07kGnBEe2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_tm07kWnBEe2od597qOQ9lw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_tm0UgWnBEe2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_tm0UgmnBEe2od597qOQ9lw" points="[0, 0, -58, 0]$[51, 0, -7, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_tm2wwGnBEe2od597qOQ9lw" id="(1.0,0.5333333333333333)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_tm2wwWnBEe2od597qOQ9lw" id="(0.0625,0.5357142857142857)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_syPhE2p-Ee2od597qOQ9lw" type="4001" element="_syPhEGp-Ee2od597qOQ9lw" source="_jGYboGnBEe2od597qOQ9lw" target="_yfEhAGp-Ee2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_syPhFmp-Ee2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_syPhF2p-Ee2od597qOQ9lw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_syPhFGp-Ee2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_syPhFWp-Ee2od597qOQ9lw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_yfMc02p-Ee2od597qOQ9lw" type="4001" element="_yfMc0Gp-Ee2od597qOQ9lw" source="_yfEhAGp-Ee2od597qOQ9lw" target="_syGXI2p-Ee2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_yfMc1mp-Ee2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_yfMc12p-Ee2od597qOQ9lw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_yfMc1Gp-Ee2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_yfMc1Wp-Ee2od597qOQ9lw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_7varAGp-Ee2od597qOQ9lw" type="4001" element="_7vaD8Gp-Ee2od597qOQ9lw" source="_5HGk8Gp-Ee2od597qOQ9lw" target="_yfEhAGp-Ee2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_7varA2p-Ee2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_7vbSEGp-Ee2od597qOQ9lw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_7varAWp-Ee2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_7varAmp-Ee2od597qOQ9lw" points="[0, -11, -103, 67]$[90, -11, -13, 67]$[90, -71, -13, 7]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_7vcgMGp-Ee2od597qOQ9lw" id="(1.0,0.7)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_7vcgMWp-Ee2od597qOQ9lw" id="(0.32,0.86)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_BqxPIGp_Ee2od597qOQ9lw" type="4001" element="_Bqs9sGp_Ee2od597qOQ9lw" source="_CVUisGmoEe2od597qOQ9lw" target="_5HGk8Gp-Ee2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_Bqx2MGp_Ee2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_Bqx2MWp_Ee2od597qOQ9lw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_BqxPIWp_Ee2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_BqxPImp_Ee2od597qOQ9lw" points="[-54, 25, -468, -53]$[-54, 91, -468, 13]$[364, 91, -50, 13]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_BqzEUGp_Ee2od597qOQ9lw" id="(1.0,0.5833333333333334)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_U-Oc0Gp_Ee2od597qOQ9lw" type="4001" element="_U-N1wGp_Ee2od597qOQ9lw" source="_xGMb4Gm1Ee2od597qOQ9lw" target="_5HGk8Gp-Ee2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_U-PD4Gp_Ee2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_U-PD4Wp_Ee2od597qOQ9lw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_U-Oc0Wp_Ee2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_U-Oc0mp_Ee2od597qOQ9lw" points="[-25, 28, -157, -44]$[-25, 69, -157, -3]$[127, 69, -5, -3]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_U-Q5EGp_Ee2od597qOQ9lw" id="(1.0,0.5333333333333333)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_U-Q5EWp_Ee2od597qOQ9lw" id="(0.05,0.32)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_dneKkGp_Ee2od597qOQ9lw" type="4001" element="_dndjgGp_Ee2od597qOQ9lw" source="_CVUisGmoEe2od597qOQ9lw" target="_yfEhAGp-Ee2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_dneKk2p_Ee2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_dneKlGp_Ee2od597qOQ9lw" x="-212" y="7"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_dneKkWp_Ee2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_dneKkmp_Ee2od597qOQ9lw" points="[-54, -30, -649, -8]$[-54, -75, -649, -53]$[585, -75, -10, -53]$[585, -28, -10, -6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_dnfYsGp_Ee2od597qOQ9lw" id="(1.0,0.5)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_dnfYsWp_Ee2od597qOQ9lw" id="(0.6,0.12)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_tzMLQGp_Ee2od597qOQ9lw" type="4001" element="_tzLkMGp_Ee2od597qOQ9lw" source="_xGMb4Gm1Ee2od597qOQ9lw" target="_yfEhAGp-Ee2od597qOQ9lw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_tzMLQ2p_Ee2od597qOQ9lw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_tzMLRGp_Ee2od597qOQ9lw" x="-71" y="7"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_tzMLQWp_Ee2od597qOQ9lw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_tzMLQmp_Ee2od597qOQ9lw" points="[-60, -33, -373, -3]$[-60, -59, -373, -29]$[317, -59, 4, -29]$[317, -31, 4, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_tzMyUGp_Ee2od597qOQ9lw" id="(1.0,0.55)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uZRT0Gp_Ee2od597qOQ9lw" id="(0.15,0.02)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
