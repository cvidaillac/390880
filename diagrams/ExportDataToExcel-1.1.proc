<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_oP5XwBrHEeyhI4tUSP5zmQ" name="ExportDataToExcel" version="1.1" author="C6754557" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004" configId="ACED0005740010372E31312E312D303031372E31312E34">
    <elements xmi:type="process:Pool" xmi:id="_oP5XwRrHEeyhI4tUSP5zmQ" name="ExportDataToExcel" version="1.1">
      <elements xmi:type="process:Lane" xmi:id="_oP5XwhrHEeyhI4tUSP5zmQ" name="Export User" actor="_oP5Y-BrHEeyhI4tUSP5zmQ">
        <elements xmi:type="process:StartEvent" xmi:id="_oP5XwxrHEeyhI4tUSP5zmQ" name="Start Export" outgoing="_oP5YzxrHEeyhI4tUSP5zmQ _oP5Y9BrHEeyhI4tUSP5zmQ">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_oP5XxBrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_oP5XxRrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_oP5XxhrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_oP5XxxrHEeyhI4tUSP5zmQ" name="Export Data from BDM Query" outgoing="_oP5Y6xrHEeyhI4tUSP5zmQ" incoming="_oP5YzxrHEeyhI4tUSP5zmQ">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_oP5XyBrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_oP5XyRrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_oP5XyhrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_oP5XyxrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_oP5XzBrHEeyhI4tUSP5zmQ" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_oP5XzRrHEeyhI4tUSP5zmQ" name="exportDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_oP5XzhrHEeyhI4tUSP5zmQ" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5XzxrHEeyhI4tUSP5zmQ" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_oP5X0BrHEeyhI4tUSP5zmQ" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5X0RrHEeyhI4tUSP5zmQ" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5X0hrHEeyhI4tUSP5zmQ" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_oP5X0xrHEeyhI4tUSP5zmQ" name="exportDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def BusinessObjectDAO dao_instance = null;&#xD;&#xA;def java.lang.reflect.Method find_method = null;&#xD;&#xA;def Object[] method_parameters = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def int page_count=0;&#xD;&#xA;def int page_limit=0;&#x9;// To avoid infinite loop&#xD;&#xA;def int page_size=0;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;// Map objectName (lowercase) -> DAO object&#xD;&#xA;def Map dao_objects_map = [&quot;proposition&quot;: propositionDAO];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Data Export&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get find method parameters&#xD;&#xA;&#x9;def Map find_method_profile = BDMUtility.getFindQuery(objectName,queryName, queryCriteria, dao_objects_map, queryListIds);&#xD;&#xA;&#x9;error_message = find_method_profile['errorMessage'];&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error while retrieving find method: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;dao_instance = find_method_profile['daoInstance'];&#xD;&#xA;&#x9;&#x9;find_method = find_method_profile['findMethod'];&#xD;&#xA;&#x9;&#x9;method_parameters = find_method_profile['parameters'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get Page count / page size values according to the type of query&#xD;&#xA;&#x9;&#x9;if (! formatAllRowsExported.equalsIgnoreCase(rowsExported)) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting only current page according to selected format : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = pageCount;&#xD;&#xA;&#x9;&#x9;&#x9;page_size = pageSize;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit = page_count+1;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting all rows : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = 0;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit=maximumNumberOfQueriedPages;&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;&#x9;&#x9;page_size=queryAllPageSize;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get fields map&#xD;&#xA;&#x9;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, dao_instance: dao_instance, find_method: find_method, method_parameters: method_parameters, page_count: page_count, page_size: page_size, page_limit: page_limit, field_names_list: field_names_list, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5X1BrHEeyhI4tUSP5zmQ" name="queryCriteria" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_oP5X1RrHEeyhI4tUSP5zmQ" name="propositionDAO" content="propositionDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.PropositionDAO" returnTypeFixed="true"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5X1hrHEeyhI4tUSP5zmQ" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5X1xrHEeyhI4tUSP5zmQ" name="objectName" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5X2BrHEeyhI4tUSP5zmQ" name="queryName" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_oP5X2RrHEeyhI4tUSP5zmQ" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5X2hrHEeyhI4tUSP5zmQ" name="pageCount" dataType="_oP5_aRrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_oP5X2xrHEeyhI4tUSP5zmQ" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5X3BrHEeyhI4tUSP5zmQ" name="pageSize" dataType="_oP5_aRrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5X3RrHEeyhI4tUSP5zmQ" name="formatAllRowsExported" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5X3hrHEeyhI4tUSP5zmQ" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5X3xrHEeyhI4tUSP5zmQ" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5X4BrHEeyhI4tUSP5zmQ" name="fieldsMap" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5X4RrHEeyhI4tUSP5zmQ" name="rowsExported" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5X4hrHEeyhI4tUSP5zmQ" name="applicationPage" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5X4xrHEeyhI4tUSP5zmQ" name="outputFormat" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5X5BrHEeyhI4tUSP5zmQ" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5X5RrHEeyhI4tUSP5zmQ" name="queryListIds" multiple="true" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5X5hrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5X5xrHEeyhI4tUSP5zmQ" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5X6BrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5X6RrHEeyhI4tUSP5zmQ" name="executeExport" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def find_method = result['find_method'];&#xD;&#xA;&#x9;def dao_instance = result['dao_instance'];&#xD;&#xA;&#x9;def method_parameters = result['method_parameters'];&#xD;&#xA;&#x9;def int page_count =  result['page_count'];&#xD;&#xA;&#x9;def int page_limit = result['page_limit'];&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;def int page_size = result['page_size'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;while ((has_more) &amp;&amp; (page_count&lt;page_limit) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Executing query with &quot; + String.valueOf(method_parameters.size()) + &quot; parameters for page &quot; + String.valueOf(page_count) + &quot; and page size=&quot; + String.valueOf(page_size));&#xD;&#xA;&#x9;&#x9;def Map find_result = BDMUtility.executeFindMethod(dao_instance, find_method, method_parameters, page_count, page_size);&#xD;&#xA;&#x9;&#x9;error_message = find_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;def records_list = find_result['records'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Error detected on query page &quot; + String.valueOf(page_count) + &quot; : &quot; + error_message);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (records_list == null) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : records list is null&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def nb_records = records_list.size();&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : found &quot;  + String.valueOf(nb_records) + &quot; records&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Export list to Excel&#xD;&#xA;&#x9;&#x9;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ExcelFile.addExcelDataRow(worksheet, records_list[i], field_names_list, row_index, dateStyle);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;if (nb_records&lt;page_size) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Next page&#xD;&#xA;&#x9;&#x9;page_count = page_count +1;&#xD;&#xA;&#x9;} // end while&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_oP5X6hrHEeyhI4tUSP5zmQ" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_oP5X6xrHEeyhI4tUSP5zmQ" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_oP5X7BrHEeyhI4tUSP5zmQ" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5X7RrHEeyhI4tUSP5zmQ" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5X7hrHEeyhI4tUSP5zmQ" name="logClass" typeClassname="java.lang.String"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5X7xrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5X8BrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5X8RrHEeyhI4tUSP5zmQ" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5X8hrHEeyhI4tUSP5zmQ" name="errorMessage" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5X8xrHEeyhI4tUSP5zmQ" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5X9BrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5X9RrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5X9hrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5X9xrHEeyhI4tUSP5zmQ" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5X-BrHEeyhI4tUSP5zmQ" name="documentStorageId" dataType="_oP5_ahrHEeyhI4tUSP5zmQ"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5X-RrHEeyhI4tUSP5zmQ" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5X-hrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5X-xrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5X_BrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5X_RrHEeyhI4tUSP5zmQ" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5X_hrHEeyhI4tUSP5zmQ" name="filepath" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5X_xrHEeyhI4tUSP5zmQ" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5YABrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5YARrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5YAhrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5YAxrHEeyhI4tUSP5zmQ" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5YBBrHEeyhI4tUSP5zmQ" name="errorDetected" dataType="_oP5_ZxrHEeyhI4tUSP5zmQ"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5YBRrHEeyhI4tUSP5zmQ" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5YBhrHEeyhI4tUSP5zmQ" name="errorMessage" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5YBxrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_oP5YCBrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_oP5YCRrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_oP5YChrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_oP5YCxrHEeyhI4tUSP5zmQ" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_oP5YDBrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_oP5YDRrHEeyhI4tUSP5zmQ" name="ExportError" outgoing="_oP5Y2BrHEeyhI4tUSP5zmQ"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_oP5YDhrHEeyhI4tUSP5zmQ" name="Display Output File" outgoing="_oP5Y1RrHEeyhI4tUSP5zmQ" incoming="_oP5Y0hrHEeyhI4tUSP5zmQ" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_oP5YDxrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_oP5YEBrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_oP5YERrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_oP5YEhrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_oP5YExrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_oP5YFBrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_oP5YFRrHEeyhI4tUSP5zmQ" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_oP5YFhrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_oP5YFxrHEeyhI4tUSP5zmQ" name="TimerTermination" outgoing="_oP5Y5RrHEeyhI4tUSP5zmQ">
            <condition xmi:type="expression:Expression" xmi:id="_oP5YGBrHEeyhI4tUSP5zmQ" name="delayBeforeCaseCompletionInMinutes" content="return 60000L * delayBeforeCaseCompletionInMinutes;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5YGRrHEeyhI4tUSP5zmQ" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
            </condition>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_oP5YGhrHEeyhI4tUSP5zmQ">
            <targetForm xmi:type="expression:Expression" xmi:id="_oP5YGxrHEeyhI4tUSP5zmQ" name="DisplayExportFile" content="8d9a9132-635d-4604-b63e-711933a32b41" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_oP5YHBrHEeyhI4tUSP5zmQ"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_oP5YHRrHEeyhI4tUSP5zmQ" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_oP5YHhrHEeyhI4tUSP5zmQ" name="Display Error" outgoing="_oP5Y2xrHEeyhI4tUSP5zmQ" incoming="_oP5Y2BrHEeyhI4tUSP5zmQ _oP5Y3hrHEeyhI4tUSP5zmQ _oP5Y8RrHEeyhI4tUSP5zmQ" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_oP5YHxrHEeyhI4tUSP5zmQ" name="displayName()" content="return &quot;Echec de l'export de données&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_oP5YIBrHEeyhI4tUSP5zmQ" name="dynamicDescription()" content="return errorMessage.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_oP5YIRrHEeyhI4tUSP5zmQ" name="errorMessage" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_oP5YIhrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_oP5YIxrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_oP5YJBrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_oP5YJRrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_oP5YJhrHEeyhI4tUSP5zmQ" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_oP5YJxrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_oP5YKBrHEeyhI4tUSP5zmQ" name="Error Expiry" outgoing="_oP5Y6BrHEeyhI4tUSP5zmQ">
            <condition xmi:type="expression:Expression" xmi:id="_oP5YKRrHEeyhI4tUSP5zmQ" name="00:05:00" content="300000L" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long"/>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_oP5YKhrHEeyhI4tUSP5zmQ">
            <targetForm xmi:type="expression:Expression" xmi:id="_oP5YKxrHEeyhI4tUSP5zmQ" name="DisplayExportError" content="591192bc-c8ec-41e5-b987-f74165738cb6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_oP5YLBrHEeyhI4tUSP5zmQ"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_oP5YLRrHEeyhI4tUSP5zmQ" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_oP5YLhrHEeyhI4tUSP5zmQ" name="Purge Document" outgoing="_oP5Y4hrHEeyhI4tUSP5zmQ" incoming="_oP5Y1RrHEeyhI4tUSP5zmQ _oP5Y5RrHEeyhI4tUSP5zmQ">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_oP5YLxrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_oP5YMBrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_oP5YMRrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_oP5YMhrHEeyhI4tUSP5zmQ" name="purgeDocumentAndFile" definitionId="scripting-groovy-script" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_oP5YMxrHEeyhI4tUSP5zmQ" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5YNBrHEeyhI4tUSP5zmQ" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_oP5YNRrHEeyhI4tUSP5zmQ" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5YNhrHEeyhI4tUSP5zmQ" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5YNxrHEeyhI4tUSP5zmQ" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_oP5YOBrHEeyhI4tUSP5zmQ" name="purgeDocumentAndFile" content="import org.bonitasoft.engine.api.APIAccessor;&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Delete temporary file&#xD;&#xA;&#x9;if (! filepath.isEmpty()) {&#xD;&#xA;&#x9;&#x9;FileUtility.deleteFile(filepath);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Remove document&#xD;&#xA;&#x9;if (documentStorageId != null) {&#xD;&#xA;&#x9;&#x9;FileUtility.removeDocument(documentStorageId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;logError(log_file, &quot;Failed to purge document: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5YORrHEeyhI4tUSP5zmQ" name="documentStorageId" dataType="_oP5_ahrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5YOhrHEeyhI4tUSP5zmQ" name="filepath" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_oP5YOxrHEeyhI4tUSP5zmQ" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5YPBrHEeyhI4tUSP5zmQ" name="logClass" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5YPRrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5YPhrHEeyhI4tUSP5zmQ" content=""/>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5YPxrHEeyhI4tUSP5zmQ" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_oP5YQBrHEeyhI4tUSP5zmQ" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5YQRrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_oP5YQhrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_oP5YQxrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_oP5YRBrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_oP5YRRrHEeyhI4tUSP5zmQ" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_oP5YRhrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_oP5YRxrHEeyhI4tUSP5zmQ" name="End Error" incoming="_oP5Y2xrHEeyhI4tUSP5zmQ _oP5Y6BrHEeyhI4tUSP5zmQ">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_oP5YSBrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_oP5YSRrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_oP5YShrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_oP5YSxrHEeyhI4tUSP5zmQ" name="End Export" incoming="_oP5Y4hrHEeyhI4tUSP5zmQ">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_oP5YTBrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_oP5YTRrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_oP5YThrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_oP5YTxrHEeyhI4tUSP5zmQ" name="is OK?" outgoing="_oP5Y0hrHEeyhI4tUSP5zmQ _oP5Y3hrHEeyhI4tUSP5zmQ" incoming="_oP5Y6xrHEeyhI4tUSP5zmQ _oP5Y7hrHEeyhI4tUSP5zmQ">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_oP5YUBrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_oP5YURrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_oP5YUhrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_oP5YUxrHEeyhI4tUSP5zmQ" name="Export Data from Input" outgoing="_oP5Y7hrHEeyhI4tUSP5zmQ" incoming="_oP5Y9BrHEeyhI4tUSP5zmQ">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_oP5YVBrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_oP5YVRrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_oP5YVhrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_oP5YVxrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YWBrHEeyhI4tUSP5zmQ" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_oP5YWRrHEeyhI4tUSP5zmQ" name="exportInputDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_oP5YWhrHEeyhI4tUSP5zmQ" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5YWxrHEeyhI4tUSP5zmQ" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_oP5YXBrHEeyhI4tUSP5zmQ" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5YXRrHEeyhI4tUSP5zmQ" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5YXhrHEeyhI4tUSP5zmQ" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_oP5YXxrHEeyhI4tUSP5zmQ" name="exportInputDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def List&lt;Integer> field_values_index = null;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Export from data provided in contract&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get fields map&#xD;&#xA;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// For each field name, get the corresponding index of fields values&#xD;&#xA;&#x9;&#x9;field_values_index = buildFieldValuesIndex(dataRowsToExport[0].get('fieldNames'), field_names_list);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, field_names_list: field_names_list, field_values_index: field_values_index, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;Integer> buildFieldValuesIndex(List&lt;String> dataRowsFieldNames, List&lt;String> field_names_list) {&#xD;&#xA;&#x9;def List&lt;Integer> list_fields_values_index = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// We need at list one record of data&#xD;&#xA;&#x9;if (dataRowsFieldNames != null) {&#xD;&#xA;&#x9;&#x9;def int nb_fields_values = dataRowsFieldNames.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Loop through each field from field_names_list&#xD;&#xA;&#x9;&#x9;def int nb_fields_names = field_names_list.size();&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields_names; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;// Search the field name in the record values&#xD;&#xA;&#x9;&#x9;&#x9;def String one_field_name = field_names_list[i];&#xD;&#xA;&#x9;&#x9;&#x9;def Integer field_value_index = null;&#xD;&#xA;&#x9;&#x9;&#x9;for (int j=0; j&lt;nb_fields_values; j++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def value_field_name = dataRowsFieldNames[j];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (one_field_name.equalsIgnoreCase(value_field_name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Field has been found in record values&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;field_value_index = Integer.valueOf(j);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Store the field index found, or null if not found&#xD;&#xA;&#x9;&#x9;&#x9;list_fields_values_index.push(field_value_index);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return list_fields_values_index;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5YYBrHEeyhI4tUSP5zmQ" name="fieldsMap" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5YYRrHEeyhI4tUSP5zmQ" name="applicationPage" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5YYhrHEeyhI4tUSP5zmQ" name="objectName" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5YYxrHEeyhI4tUSP5zmQ" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_oP5YZBrHEeyhI4tUSP5zmQ" name="outputFormat" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_oP5YZRrHEeyhI4tUSP5zmQ" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_oP5YZhrHEeyhI4tUSP5zmQ" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5YZxrHEeyhI4tUSP5zmQ" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5YaBrHEeyhI4tUSP5zmQ" name="dataRowsToExport" multiple="true" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5YaRrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5YahrHEeyhI4tUSP5zmQ" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5YaxrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5YbBrHEeyhI4tUSP5zmQ" name="executeExportOfInputData" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def List&lt;Integer> field_values_index = result['field_values_index'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Export list to Excel&#xD;&#xA;&#x9;List&lt;Map> data_records = dataRowsToExport[0].get('records');&#xD;&#xA;&#x9;def int nb_records = data_records.size();&#xD;&#xA;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get the record values and add the row to the speadsheet&#xD;&#xA;&#x9;&#x9;def List&lt;Object> one_record_values = data_records[i].get(&quot;values&quot;);&#xD;&#xA;&#x9;&#x9;def List&lt;Object> record_values = getRecordValues(one_record_values, field_values_index, log_file);&#xD;&#xA;&#x9;&#x9;ExcelFile.addExcelFieldValuesRow(worksheet, record_values, row_index, dateStyle)&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;def List&lt;Object> getRecordValues(List&lt;Object> one_row_to_export, List&lt;Integer> field_values_index, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;Object> record_values = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def int nb_fields = field_values_index.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;def Integer value_index = field_values_index[i];&#xD;&#xA;&#x9;&#x9;&#x9;if ((value_index == null) || (value_index >= one_row_to_export.size())) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Field not found&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(null);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Get the field value&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def Object field_value = one_row_to_export[value_index];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(field_value);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getRecordValues: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return record_values;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_oP5YbRrHEeyhI4tUSP5zmQ" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5YbhrHEeyhI4tUSP5zmQ" name="logClass" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_oP5YbxrHEeyhI4tUSP5zmQ" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_oP5YcBrHEeyhI4tUSP5zmQ" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5YcRrHEeyhI4tUSP5zmQ" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5YchrHEeyhI4tUSP5zmQ" name="dataRowsToExport" multiple="true" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5YcxrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5YdBrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5YdRrHEeyhI4tUSP5zmQ" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5YdhrHEeyhI4tUSP5zmQ" name="errorMessage" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5YdxrHEeyhI4tUSP5zmQ" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5YeBrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5YeRrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5YehrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5YexrHEeyhI4tUSP5zmQ" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5YfBrHEeyhI4tUSP5zmQ" name="documentStorageId" dataType="_oP5_ahrHEeyhI4tUSP5zmQ"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5YfRrHEeyhI4tUSP5zmQ" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5YfhrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5YfxrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5YgBrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5YgRrHEeyhI4tUSP5zmQ" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5YghrHEeyhI4tUSP5zmQ" name="filepath" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5YgxrHEeyhI4tUSP5zmQ" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5YhBrHEeyhI4tUSP5zmQ" name="exportResult" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5YhRrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_oP5YhhrHEeyhI4tUSP5zmQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_oP5YhxrHEeyhI4tUSP5zmQ" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5YiBrHEeyhI4tUSP5zmQ" name="errorDetected" dataType="_oP5_ZxrHEeyhI4tUSP5zmQ"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_oP5YiRrHEeyhI4tUSP5zmQ" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_oP5YihrHEeyhI4tUSP5zmQ" name="errorMessage" dataType="_oP5_bBrHEeyhI4tUSP5zmQ"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_oP5YixrHEeyhI4tUSP5zmQ" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_oP5YjBrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_oP5YjRrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_oP5YjhrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_oP5YjxrHEeyhI4tUSP5zmQ" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_oP5YkBrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_oP5YkRrHEeyhI4tUSP5zmQ" name="ExportFromInputError" outgoing="_oP5Y8RrHEeyhI4tUSP5zmQ"/>
        </elements>
        <filters xmi:type="process:ActorFilter" xmi:id="_oP5YkhrHEeyhI4tUSP5zmQ" name="initiator" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_oP5YkxrHEeyhI4tUSP5zmQ" definitionId="bonita-actorfilter-initiator" version="1.0">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_oP5YlBrHEeyhI4tUSP5zmQ" key="autoAssign">
              <expression xmi:type="expression:Expression" xmi:id="_oP5YlRrHEeyhI4tUSP5zmQ" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
          </configuration>
        </filters>
      </elements>
      <data xmi:type="process:Data" xmi:id="_oP5YlhrHEeyhI4tUSP5zmQ" name="errorDetected" dataType="_oP5_ZxrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YlxrHEeyhI4tUSP5zmQ" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YmBrHEeyhI4tUSP5zmQ" name="errorMessage" dataType="_oP5_bBrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YmRrHEeyhI4tUSP5zmQ" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YmhrHEeyhI4tUSP5zmQ" name="objectName" dataType="_oP5_bBrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YmxrHEeyhI4tUSP5zmQ" name="contractObjectName" content="contractObjectName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YnBrHEeyhI4tUSP5zmQ" name="contractObjectName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YnRrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YnhrHEeyhI4tUSP5zmQ" name="queryName" dataType="_oP5_bBrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YnxrHEeyhI4tUSP5zmQ" name="contractQueryName" content="contractQueryName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YoBrHEeyhI4tUSP5zmQ" name="contractQueryName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YoRrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YohrHEeyhI4tUSP5zmQ" name="queryCriteria" dataType="_oP5_bBrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YoxrHEeyhI4tUSP5zmQ" name="contractQueryCriteria" content="contractQueryCriteria" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YpBrHEeyhI4tUSP5zmQ" name="contractQueryCriteria">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YpRrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YphrHEeyhI4tUSP5zmQ" name="outputFormat" dataType="_oP5_bBrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YpxrHEeyhI4tUSP5zmQ" name="contractOutputFormat" content="contractOutputFormat" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YqBrHEeyhI4tUSP5zmQ" name="contractOutputFormat">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YqRrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YqhrHEeyhI4tUSP5zmQ" name="pageCount" dataType="_oP5_aRrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YqxrHEeyhI4tUSP5zmQ" name="contractPageCount" content="contractPageCount" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YrBrHEeyhI4tUSP5zmQ" name="contractPageCount" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YrRrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YrhrHEeyhI4tUSP5zmQ" name="pageSize" dataType="_oP5_aRrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YrxrHEeyhI4tUSP5zmQ" name="contractPageSize" content="contractPageSize" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YsBrHEeyhI4tUSP5zmQ" name="contractPageSize" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YsRrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YshrHEeyhI4tUSP5zmQ" name="rowsExported" dataType="_oP5_bBrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YsxrHEeyhI4tUSP5zmQ" name="contractRowsExported" content="contractRowsExported" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YtBrHEeyhI4tUSP5zmQ" name="contractRowsExported">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YtRrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_oP5YthrHEeyhI4tUSP5zmQ" name="fieldsMap" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YtxrHEeyhI4tUSP5zmQ" name="getFieldsMap" content="def proposition_header_fields = [&#xD;&#xA;&#x9;&quot;persistenceId&quot; : &quot;Numéro proposition&quot;,&#xD;&#xA;&#x9;&quot;typeProposition&quot; : &quot;Motif&quot;,&#xD;&#xA;&#x9;&quot;propositionStatus&quot; : &quot;Statut proposition&quot;,&#xD;&#xA;&#x9;&quot;statusMacroEtapes&quot; : &quot;Macro-statut&quot;,&#xD;&#xA;&#x9;&quot;typeWorkflow&quot; : &quot;Type de workflow&quot;,&#xD;&#xA;&#x9;&quot;budgetYear&quot; : &quot;Exercice&quot;,&#xD;&#xA;&#x9;&quot;initialBudgetYear&quot; : &quot;Exercice initial&quot;,&#xD;&#xA;&#x9;&quot;typeAcquisition&quot; : &quot;Type d'acquisition&quot;,&#xD;&#xA;&#x9;&quot;requestSource&quot; : &quot;Source de la proposition&quot;,&#xD;&#xA;&#x9;&quot;propositionAmount&quot; : &quot;Montant proposition initial&quot;,&#xD;&#xA;&#x9;&quot;actualRequestAmount&quot; : &quot;Montant proposition actualisé&quot;,&#xD;&#xA;&#x9;&quot;creationDate&quot;: &quot;Date de création&quot;,&#xD;&#xA;&#x9;&quot;creatorName&quot;: &quot;Nom du créateur&quot;,&#xD;&#xA;&#x9;&quot;agencyCode&quot;: &quot;Code de l'agence&quot;,&#xD;&#xA;&#x9;&quot;agencyName&quot; : &quot;Nom de l'agence&quot;,&#xD;&#xA;&#x9;&quot;siteCode&quot;: &quot;Code du site&quot;,&#xD;&#xA;&#x9;&quot;siteName&quot;: &quot;Nom du site&quot;,&#xD;&#xA;&#x9;&quot;sectorCode&quot;: &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;sectorName&quot; : &quot;Nom du secteur&quot;,&#xD;&#xA;&#x9;&quot;entiteCode&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;entiteName&quot; : &quot;Nom entité&quot;,&#xD;&#xA;&#x9;&quot;territoryCode&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;territoryName&quot; : &quot;Nom territoire&quot;,&#xD;&#xA;&#x9;&quot;existing&quot; : &quot;Matériel existant&quot;,&#xD;&#xA;&#x9;&quot;materialNumber&quot; : &quot;Numéro de matériel&quot;,&#xD;&#xA;&#x9;&quot;typeMaterial&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;typeMaterialName&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterial&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterialName&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;generalStatusMaterial&quot; : &quot;Etat général&quot;,&#xD;&#xA;&#x9;&quot;materialFamily&quot; : &quot;Famille de matériel&quot;,&#xD;&#xA;&#x9;&quot;isBudgetRespected&quot; : &quot;Inclus au budget&quot;,&#xD;&#xA;&#x9;&quot;commentSmart&quot; : &quot;Observation SMARTE&quot;,&#xD;&#xA;&#x9;&quot;nbMonth&quot; : &quot;Nombre de mois&quot;,&#xD;&#xA;&#x9;&quot;monthlyAmount&quot; : &quot;Mensualité&quot;,&#xD;&#xA;&#x9;&quot;monthlyPropositionAmount&quot; : &quot;Mensualité future&quot;,&#xD;&#xA;&#x9;&quot;estimatedDeliveryDate&quot; : &quot;Date de livraison prévue&quot;,&#xD;&#xA;&#x9;&quot;pitchSmart&quot; : &quot;Argumentaire SMARTE&quot;,&#xD;&#xA;&#x9;&quot;percentage&quot; : &quot;Pourcentage&quot;];&#xD;&#xA;&#xD;&#xA;def proposition_all_fields = proposition_header_fields + [&#xD;&#xA;&#x9;&quot;creatorId&quot;: &quot;Identifiant du créateur&quot;,&#xD;&#xA;&#x9;&quot;caseId&quot; : &quot;CaseId Bonita&quot;,&#xD;&#xA;&#x9;&quot;sponsor&quot; : &quot;Sponsor&quot;,&#xD;&#xA;&#x9;&quot;isIsBudgetPropositionApproved&quot;: &quot;Budget approuvé&quot;,&#xD;&#xA;&#x9;&quot;lyrePreOrderCreationStatus&quot; : &quot;Statut de création commande dans Lyre&quot;,&#xD;&#xA;&#x9;&quot;parentPropositionId&quot; : &quot;Proposition parent&quot;,&#xD;&#xA;&#x9;&quot;dddRenewChildPropositionId&quot; : &quot;Proposition DDD Renouvellement fille&quot;,&#xD;&#xA;&#x9;&quot;dddRenewStartDate&quot; : &quot;Date planifiée de DDD Renouvellement&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverName&quot; : &quot;Approbation 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverRole&quot; : &quot;Approbation 1-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].dateAction&quot; : &quot;Approbation 1-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].decision&quot; : &quot;Approbation 1-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].comments&quot; : &quot;Approbation 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverName&quot; : &quot;Approbation 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverRole&quot; : &quot;Approbation 2-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].dateAction&quot; : &quot;Approbation 2-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].decision&quot; : &quot;Approbation 2-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].comments&quot; : &quot;Approbation 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverName&quot; : &quot;Approbation 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverRole&quot; : &quot;Approbation 3-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].dateAction&quot; : &quot;Approbation 3-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].decision&quot; : &quot;Approbation 3-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].comments&quot; : &quot;Approbation 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverName&quot; : &quot;Approbation 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverRole&quot; : &quot;Approbation 4-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].dateAction&quot; : &quot;Approbation 4-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].decision&quot; : &quot;Approbation 4-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].comments&quot; : &quot;Approbation 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverName&quot; : &quot;Approbation 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverRole&quot; : &quot;Approbation 5-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].dateAction&quot; : &quot;Approbation 5-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].decision&quot; : &quot;Approbation 5-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].comments&quot; : &quot;Approbation 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverName&quot; : &quot;Approbation 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverRole&quot; : &quot;Approbation 6-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].dateAction&quot; : &quot;Approbation 6-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].decision&quot; : &quot;Approbation 6-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].comments&quot; : &quot;Approbation 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverName&quot; : &quot;Approbation 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverRole&quot; : &quot;Approbation 7-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].dateAction&quot; : &quot;Approbation 7-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].decision&quot; : &quot;Approbation 7-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].comments&quot; : &quot;Approbation 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverName&quot; : &quot;Approbation 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverRole&quot; : &quot;Approbation 8-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].dateAction&quot; : &quot;Approbation 8-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].decision&quot; : &quot;Approbation 8-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].comments&quot; : &quot;Approbation 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverName&quot; : &quot;Approbation 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverRole&quot; : &quot;Approbation 9-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].dateAction&quot; : &quot;Approbation 9-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].decision&quot; : &quot;Approbation 9-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].comments&quot; : &quot;Approbation 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverName&quot; : &quot;Approbation 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverRole&quot; : &quot;Approbation 10-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].dateAction&quot; : &quot;Approbation 10-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].decision&quot; : &quot;Approbation 10-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].comments&quot; : &quot;Approbation 10-Commentaire&quot;,&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&quot;comments[1].userName&quot;: &quot;Commentaire 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[1].dateAdded&quot;: &quot;Commentaire 1-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[1].userComment&quot;: &quot;Commentaire 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userName&quot;: &quot;Commentaire 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[2].dateAdded&quot;: &quot;Commentaire 2-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userComment&quot;: &quot;Commentaire 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userName&quot;: &quot;Commentaire 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[3].dateAdded&quot;: &quot;Commentaire 3-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userComment&quot;: &quot;Commentaire 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userName&quot;: &quot;Commentaire 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[4].dateAdded&quot;: &quot;Commentaire 4-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userComment&quot;: &quot;Commentaire 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userName&quot;: &quot;Commentaire 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[5].dateAdded&quot;: &quot;Commentaire 5-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userComment&quot;: &quot;Commentaire 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userName&quot;: &quot;Commentaire 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[6].dateAdded&quot;: &quot;Commentaire 6-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userComment&quot;: &quot;Commentaire 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userName&quot;: &quot;Commentaire 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[7].dateAdded&quot;: &quot;Commentaire 7-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userComment&quot;: &quot;Commentaire 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userName&quot;: &quot;Commentaire 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[8].dateAdded&quot;: &quot;Commentaire 8-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userComment&quot;: &quot;Commentaire 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userName&quot;: &quot;Commentaire 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[9].dateAdded&quot;: &quot;Commentaire 9-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userComment&quot;: &quot;Commentaire 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userName&quot;: &quot;Commentaire 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[10].dateAdded&quot;: &quot;Commentaire 10-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userComment&quot;: &quot;Commentaire 10-Commentaire&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;def eligible_materials_all_fields = [&#xD;&#xA;&#x9;&quot;numMat&quot; : &quot;Numéro matériel&quot;,&#xD;&#xA;&#x9;&quot;codeAgence&quot; : &quot;Code agence&quot;,&#xD;&#xA;&#x9;&quot;causeEligibilite&quot;: &quot;Cause éligibilité&quot;,&#xD;&#xA;&#x9;&quot;genre&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;modele&quot; : &quot;Modèle&quot;,&#xD;&#xA;&#x9;&quot;codeTerritoire&quot; : &quot;Code territoire&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;return [&#xD;&#xA;&quot;searchPropositions&quot;:&#xD;&#xA;&#x9;[&quot;ALL_FIELDS&quot;: proposition_header_fields, //FOR ALL: proposition_all_fields,&#xD;&#xA;&#x9; &quot;HEADER_FIELDS&quot; : proposition_header_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;eligibleMaterials&quot;:&#xD;&#xA;&#x9;[&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: eligible_materials_all_fields&#xD;&#xA;&#x9;]&#xD;&#xA;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YuBrHEeyhI4tUSP5zmQ" name="applicationPage" dataType="_oP5_bBrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YuRrHEeyhI4tUSP5zmQ" name="contractApplicationPage" content="contractApplicationPage" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YuhrHEeyhI4tUSP5zmQ" name="contractApplicationPage">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YuxrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_oP5YvBrHEeyhI4tUSP5zmQ" name="bdm_object" multiple="true" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.lang.Object">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YvRrHEeyhI4tUSP5zmQ" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YvhrHEeyhI4tUSP5zmQ" name="documentStorageId" dataType="_oP5_ahrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YvxrHEeyhI4tUSP5zmQ" content="" returnType="java.lang.Long"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YwBrHEeyhI4tUSP5zmQ" name="filepath" dataType="_oP5_bBrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YwRrHEeyhI4tUSP5zmQ" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_oP5YwhrHEeyhI4tUSP5zmQ" name="queryListIds" multiple="true" dataType="_oP5_ahrHEeyhI4tUSP5zmQ">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YwxrHEeyhI4tUSP5zmQ" name="init_queryListIds()" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def List&lt;Long> persistence_ids_list = [];&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;for (int i=0; i&lt;contractQueryListIds.size(); i++) {&#xD;&#xA;&#x9;&#x9;def Long long_value = Long.valueOf(contractQueryListIds[i]);&#xD;&#xA;&#x9;&#x9;persistence_ids_list.add(long_value);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_queryListIds&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return persistence_ids_list;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YxBrHEeyhI4tUSP5zmQ" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YxRrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_oP5YxhrHEeyhI4tUSP5zmQ" name="logClass" typeClassname="java.lang.String"/>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_oP5YxxrHEeyhI4tUSP5zmQ" name="dataRowsToExport" multiple="true" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_oP5YyBrHEeyhI4tUSP5zmQ" name="contractExportDataRows" content="contractExportDataRows" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_oP5YyRrHEeyhI4tUSP5zmQ" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5YyhrHEeyhI4tUSP5zmQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_oP5YyxrHEeyhI4tUSP5zmQ">
        <targetForm xmi:type="expression:Expression" xmi:id="_oP5YzBrHEeyhI4tUSP5zmQ" name="ExportDataForm" content="19410973-849c-4315-a1c1-347402af24b6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_oP5YzRrHEeyhI4tUSP5zmQ" type="NONE">
        <targetForm xmi:type="expression:Expression" xmi:id="_oP5YzhrHEeyhI4tUSP5zmQ" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5YzxrHEeyhI4tUSP5zmQ" target="_oP5XxxrHEeyhI4tUSP5zmQ" source="_oP5XwxrHEeyhI4tUSP5zmQ" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y0BrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y0RrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y0hrHEeyhI4tUSP5zmQ" name="OK" target="_oP5YDhrHEeyhI4tUSP5zmQ" source="_oP5YTxrHEeyhI4tUSP5zmQ" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y0xrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y1BrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y1RrHEeyhI4tUSP5zmQ" target="_oP5YLhrHEeyhI4tUSP5zmQ" source="_oP5YDhrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y1hrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y1xrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y2BrHEeyhI4tUSP5zmQ" target="_oP5YHhrHEeyhI4tUSP5zmQ" source="_oP5YDRrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y2RrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y2hrHEeyhI4tUSP5zmQ" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y2xrHEeyhI4tUSP5zmQ" target="_oP5YRxrHEeyhI4tUSP5zmQ" source="_oP5YHhrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y3BrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y3RrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y3hrHEeyhI4tUSP5zmQ" name="Error" target="_oP5YHhrHEeyhI4tUSP5zmQ" source="_oP5YTxrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y3xrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y4BrHEeyhI4tUSP5zmQ" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_oP5Y4RrHEeyhI4tUSP5zmQ" name="errorDetected" dataType="_oP5_ZxrHEeyhI4tUSP5zmQ"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y4hrHEeyhI4tUSP5zmQ" target="_oP5YSxrHEeyhI4tUSP5zmQ" source="_oP5YLhrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y4xrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y5BrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y5RrHEeyhI4tUSP5zmQ" target="_oP5YLhrHEeyhI4tUSP5zmQ" source="_oP5YFxrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y5hrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y5xrHEeyhI4tUSP5zmQ" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y6BrHEeyhI4tUSP5zmQ" target="_oP5YRxrHEeyhI4tUSP5zmQ" source="_oP5YKBrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y6RrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y6hrHEeyhI4tUSP5zmQ" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y6xrHEeyhI4tUSP5zmQ" target="_oP5YTxrHEeyhI4tUSP5zmQ" source="_oP5XxxrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y7BrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y7RrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y7hrHEeyhI4tUSP5zmQ" target="_oP5YTxrHEeyhI4tUSP5zmQ" source="_oP5YUxrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y7xrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y8BrHEeyhI4tUSP5zmQ" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y8RrHEeyhI4tUSP5zmQ" target="_oP5YHhrHEeyhI4tUSP5zmQ" source="_oP5YkRrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y8hrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y8xrHEeyhI4tUSP5zmQ" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_oP5Y9BrHEeyhI4tUSP5zmQ" name="Has input data" target="_oP5YUxrHEeyhI4tUSP5zmQ" source="_oP5XwxrHEeyhI4tUSP5zmQ">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_oP5Y9RrHEeyhI4tUSP5zmQ"/>
        <condition xmi:type="expression:Expression" xmi:id="_oP5Y9hrHEeyhI4tUSP5zmQ" name="hasRowsToExport" content="return (dataRowsToExport.size() > 0) ? true : false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oP5Y9xrHEeyhI4tUSP5zmQ" name="dataRowsToExport" multiple="true" dataType="_oP5_bRrHEeyhI4tUSP5zmQ" className="java.util.Map"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_oP5Y-BrHEeyhI4tUSP5zmQ" name="ExportUser" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_oP5Y-RrHEeyhI4tUSP5zmQ" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_oP5Y-hrHEeyhI4tUSP5zmQ">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_oP5Y-xrHEeyhI4tUSP5zmQ" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_oP5Y_BrHEeyhI4tUSP5zmQ"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_oP5Y_RrHEeyhI4tUSP5zmQ"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_oP5Y_hrHEeyhI4tUSP5zmQ">
              <role>pop3pAppprover</role>
              <role>pop3pReadOnly</role>
              <role>user</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_oP5Y_xrHEeyhI4tUSP5zmQ"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_oP5ZABrHEeyhI4tUSP5zmQ" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_oP5ZARrHEeyhI4tUSP5zmQ" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5ZAhrHEeyhI4tUSP5zmQ" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_oP5ZAxrHEeyhI4tUSP5zmQ" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZBBrHEeyhI4tUSP5zmQ" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5ZBRrHEeyhI4tUSP5zmQ" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_IvTfQIEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_IwDGIIEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5ZCBrHEeyhI4tUSP5zmQ" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZCRrHEeyhI4tUSP5zmQ" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZChrHEeyhI4tUSP5zmQ" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZCxrHEeyhI4tUSP5zmQ" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZDBrHEeyhI4tUSP5zmQ" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZDRrHEeyhI4tUSP5zmQ" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZDhrHEeyhI4tUSP5zmQ" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZDxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZEBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZERrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZEhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZExrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZFBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZFRrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZFhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZFxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZGBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZGRrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZGhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZGxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZHBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZHRrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZHhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZHxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZIBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5ZIRrHEeyhI4tUSP5zmQ" id="OTHER">
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZIhrHEeyhI4tUSP5zmQ" key="poi-4.0.0.jar" value="poi-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZIxrHEeyhI4tUSP5zmQ" key="poi-ooxml-4.0.0.jar" value="poi-ooxml-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZJBrHEeyhI4tUSP5zmQ" key="poi-scratchpad-4.0.0.jar" value="poi-scratchpad-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZJRrHEeyhI4tUSP5zmQ" key="xmlbeans-2.6.0.jar" value="xmlbeans-2.6.0.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZJhrHEeyhI4tUSP5zmQ" key="commons-collections4-4.2.jar" value="commons-collections4-4.2.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZJxrHEeyhI4tUSP5zmQ" key="commons-compress-1.21.jar" value="commons-compress-1.21.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZKBrHEeyhI4tUSP5zmQ" key="poi-ooxml-schemas-4.0.0.jar" value="poi-ooxml-schemas-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZKRrHEeyhI4tUSP5zmQ" key="commons-codec-1.11.jar" value="commons-codec-1.11.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZKhrHEeyhI4tUSP5zmQ" key="commons-logging-1.2.jar" value="commons-logging-1.2.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZKxrHEeyhI4tUSP5zmQ" key="commons-math3-3.6.1.jar" value="commons-math3-3.6.1.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZLBrHEeyhI4tUSP5zmQ" key="curvesapi-1.05.jar" value="curvesapi-1.05.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZLRrHEeyhI4tUSP5zmQ" key="xmlbeans-3.0.1.jar" value="xmlbeans-3.0.1.jar" type="JAR"/>
        </processDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5ZLhrHEeyhI4tUSP5zmQ" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZLxrHEeyhI4tUSP5zmQ" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZMBrHEeyhI4tUSP5zmQ" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZMRrHEeyhI4tUSP5zmQ" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZMhrHEeyhI4tUSP5zmQ" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZMxrHEeyhI4tUSP5zmQ" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZNBrHEeyhI4tUSP5zmQ" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZNRrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZNhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZNxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZOBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZORrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZOhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZOxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZPBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZPRrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZPhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZPxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5ZQBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-0BrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-0RrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-0hrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-0xrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-1BrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-1RrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5-1hrHEeyhI4tUSP5zmQ" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5-1xrHEeyhI4tUSP5zmQ" name="logClass" value="ExportDataToExcel" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5-2BrHEeyhI4tUSP5zmQ" name="formatAllRowsExported" value="ALL" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5-2RrHEeyhI4tUSP5zmQ" name="queryAllPageSize" value="500" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5-2hrHEeyhI4tUSP5zmQ" name="maximumNumberOfQueriedPages" value="1000" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5-2xrHEeyhI4tUSP5zmQ" name="outputDirectory" value="/tmp" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5-3BrHEeyhI4tUSP5zmQ" name="delayBeforeCaseCompletionInMinutes" value="5" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5-3RrHEeyhI4tUSP5zmQ" name="excelDateFormat" value="dd/mm/yyyy" typeClassname="java.lang.String"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_oP5-3hrHEeyhI4tUSP5zmQ" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_oP5-3xrHEeyhI4tUSP5zmQ">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_oP5-4BrHEeyhI4tUSP5zmQ" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_oP5-4RrHEeyhI4tUSP5zmQ"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_oP5-4hrHEeyhI4tUSP5zmQ"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_oP5-4xrHEeyhI4tUSP5zmQ"/>
            <users xmi:type="actormapping:Users" xmi:id="_oP5-5BrHEeyhI4tUSP5zmQ"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_oP5-5RrHEeyhI4tUSP5zmQ" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_oP5-5hrHEeyhI4tUSP5zmQ" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5-5xrHEeyhI4tUSP5zmQ" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_oP5-6BrHEeyhI4tUSP5zmQ" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-6RrHEeyhI4tUSP5zmQ" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5-6hrHEeyhI4tUSP5zmQ" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_Iw728IEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_IxjiAIEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5-7RrHEeyhI4tUSP5zmQ" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-7hrHEeyhI4tUSP5zmQ" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-7xrHEeyhI4tUSP5zmQ" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-8BrHEeyhI4tUSP5zmQ" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-8RrHEeyhI4tUSP5zmQ" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-8hrHEeyhI4tUSP5zmQ" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-8xrHEeyhI4tUSP5zmQ" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-9BrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-9RrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-9hrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-9xrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5--BrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5--RrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5--hrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5--xrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-_BrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-_RrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-_hrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5-_xrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_ABrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_ARrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_AhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_AxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_BBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_BRrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5_BhrHEeyhI4tUSP5zmQ" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5_BxrHEeyhI4tUSP5zmQ" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_CBrHEeyhI4tUSP5zmQ" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_CRrHEeyhI4tUSP5zmQ" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_ChrHEeyhI4tUSP5zmQ" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_CxrHEeyhI4tUSP5zmQ" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_DBrHEeyhI4tUSP5zmQ" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_DRrHEeyhI4tUSP5zmQ" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_DhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_DxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_EBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_ERrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_EhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_ExrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_FBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_FRrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_FhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_FxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_GBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_GRrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_GhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_GxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_HBrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_HRrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_HhrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oP5_HxrHEeyhI4tUSP5zmQ" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_oP5_IBrHEeyhI4tUSP5zmQ" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_IRrHEeyhI4tUSP5zmQ" name="logClass" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_IhrHEeyhI4tUSP5zmQ" name="formatAllRowsExported" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_IxrHEeyhI4tUSP5zmQ" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_JBrHEeyhI4tUSP5zmQ" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_JRrHEeyhI4tUSP5zmQ" name="outputDirectory" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_JhrHEeyhI4tUSP5zmQ" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_JxrHEeyhI4tUSP5zmQ" name="excelDateFormat" typeClassname="java.lang.String"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_KBrHEeyhI4tUSP5zmQ" name="logClass" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_KRrHEeyhI4tUSP5zmQ" name="formatAllRowsExported" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_KhrHEeyhI4tUSP5zmQ" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_KxrHEeyhI4tUSP5zmQ" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_LBrHEeyhI4tUSP5zmQ" name="outputDirectory" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_LRrHEeyhI4tUSP5zmQ" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_oP5_LhrHEeyhI4tUSP5zmQ" name="excelDateFormat" typeClassname="java.lang.String"/>
      <contract xmi:type="process:Contract" xmi:id="_oP5_LxrHEeyhI4tUSP5zmQ">
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_MBrHEeyhI4tUSP5zmQ" name="contractObjectName" description="BDM Object name for a BDM Query, or name of main object exported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_MRrHEeyhI4tUSP5zmQ"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_MhrHEeyhI4tUSP5zmQ" name="contractQueryName" description="BDM Query name for a BDM Query, empty otherwise">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_MxrHEeyhI4tUSP5zmQ"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_NBrHEeyhI4tUSP5zmQ" name="contractQueryCriteria" description="BDM Query criteria for a BDM Query, empty if contractExportDataRows is provided">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_NRrHEeyhI4tUSP5zmQ"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_NhrHEeyhI4tUSP5zmQ" name="contractOutputFormat">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_NxrHEeyhI4tUSP5zmQ"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_OBrHEeyhI4tUSP5zmQ" name="contractRowsExported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_ORrHEeyhI4tUSP5zmQ"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_OhrHEeyhI4tUSP5zmQ" name="contractPageCount" type="INTEGER" description="Page number for a BDM query, starting at 0">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_OxrHEeyhI4tUSP5zmQ"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_PBrHEeyhI4tUSP5zmQ" name="contractPageSize" type="INTEGER" description="Maximum number of rows">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_PRrHEeyhI4tUSP5zmQ"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_PhrHEeyhI4tUSP5zmQ" name="contractApplicationPage">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_PxrHEeyhI4tUSP5zmQ"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_QBrHEeyhI4tUSP5zmQ" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_QRrHEeyhI4tUSP5zmQ"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_oP5_QhrHEeyhI4tUSP5zmQ" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_QxrHEeyhI4tUSP5zmQ"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_oP5_RBrHEeyhI4tUSP5zmQ" name="fieldNames" description="List of field names" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_RRrHEeyhI4tUSP5zmQ"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_oP5_RhrHEeyhI4tUSP5zmQ" name="name">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_RxrHEeyhI4tUSP5zmQ"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_oP5_SBrHEeyhI4tUSP5zmQ" name="value">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_SRrHEeyhI4tUSP5zmQ"/>
            </inputs>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_oP5_ShrHEeyhI4tUSP5zmQ" name="records" type="COMPLEX" description="List of records" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_SxrHEeyhI4tUSP5zmQ"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_oP5_TBrHEeyhI4tUSP5zmQ" name="values" description="List of values of each record" multiple="true">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_TRrHEeyhI4tUSP5zmQ"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_oP5_ThrHEeyhI4tUSP5zmQ" name="textValue">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_TxrHEeyhI4tUSP5zmQ"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_oP5_UBrHEeyhI4tUSP5zmQ" name="boolValue" type="BOOLEAN">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_URrHEeyhI4tUSP5zmQ"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_oP5_UhrHEeyhI4tUSP5zmQ" name="dateValue" type="LOCALDATE">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_oP5_UxrHEeyhI4tUSP5zmQ"/>
              </inputs>
            </inputs>
          </inputs>
        </inputs>
      </contract>
      <documents xmi:type="process:Document" xmi:id="_oP5_VBrHEeyhI4tUSP5zmQ" name="exportFile">
        <mimeType xmi:type="expression:Expression" xmi:id="_oP5_VRrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_oP5_VhrHEeyhI4tUSP5zmQ" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_oP5_VxrHEeyhI4tUSP5zmQ" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_oP5_WBrHEeyhI4tUSP5zmQ">
        <name xmi:type="expression:Expression" xmi:id="_oP5_WRrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_oP5_WhrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_oP5_WxrHEeyhI4tUSP5zmQ">
        <name xmi:type="expression:Expression" xmi:id="_oP5_XBrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_oP5_XRrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_oP5_XhrHEeyhI4tUSP5zmQ">
        <name xmi:type="expression:Expression" xmi:id="_oP5_XxrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_oP5_YBrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_oP5_YRrHEeyhI4tUSP5zmQ">
        <name xmi:type="expression:Expression" xmi:id="_oP5_YhrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_oP5_YxrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_oP5_ZBrHEeyhI4tUSP5zmQ">
        <name xmi:type="expression:Expression" xmi:id="_oP5_ZRrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_oP5_ZhrHEeyhI4tUSP5zmQ" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_oP5_ZxrHEeyhI4tUSP5zmQ" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_oP5_aBrHEeyhI4tUSP5zmQ" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_oP5_aRrHEeyhI4tUSP5zmQ" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_oP5_ahrHEeyhI4tUSP5zmQ" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_oP5_axrHEeyhI4tUSP5zmQ" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_oP5_bBrHEeyhI4tUSP5zmQ" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_oP5_bRrHEeyhI4tUSP5zmQ" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_oP5_bhrHEeyhI4tUSP5zmQ" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_oP5_bxrHEeyhI4tUSP5zmQ" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_oP5_cBrHEeyhI4tUSP5zmQ" type="Process" element="_oP5XwBrHEeyhI4tUSP5zmQ" name="MonDiagramme1" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_oP5_cRrHEeyhI4tUSP5zmQ" type="2007" element="_oP5XwRrHEeyhI4tUSP5zmQ">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_chrHEeyhI4tUSP5zmQ" type="5008" element="_oP5XwRrHEeyhI4tUSP5zmQ"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_cxrHEeyhI4tUSP5zmQ" type="7001" element="_oP5XwRrHEeyhI4tUSP5zmQ">
        <children xmi:type="notation:Node" xmi:id="_oP5_dBrHEeyhI4tUSP5zmQ" type="3007" element="_oP5XwhrHEeyhI4tUSP5zmQ">
          <children xmi:type="notation:DecorationNode" xmi:id="_oP5_dRrHEeyhI4tUSP5zmQ" type="5007" element="_oP5XwhrHEeyhI4tUSP5zmQ"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_oP5_dhrHEeyhI4tUSP5zmQ" type="7002" element="_oP5XwhrHEeyhI4tUSP5zmQ">
            <children xmi:type="notation:Shape" xmi:id="_oP5_dxrHEeyhI4tUSP5zmQ" type="3002" element="_oP5XwxrHEeyhI4tUSP5zmQ" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_oP5_eBrHEeyhI4tUSP5zmQ" type="5024" element="_oP5XwxrHEeyhI4tUSP5zmQ">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_eRrHEeyhI4tUSP5zmQ" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_ehrHEeyhI4tUSP5zmQ" x="60" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_oP5_exrHEeyhI4tUSP5zmQ" type="3027" element="_oP5XxxrHEeyhI4tUSP5zmQ" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_oP5_fBrHEeyhI4tUSP5zmQ" type="5017" element="_oP5XxxrHEeyhI4tUSP5zmQ"/>
              <children xmi:type="notation:Shape" xmi:id="_oP5_fRrHEeyhI4tUSP5zmQ" type="3032" element="_oP5YDRrHEeyhI4tUSP5zmQ" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_oP5_fhrHEeyhI4tUSP5zmQ" type="5062" element="_oP5YDRrHEeyhI4tUSP5zmQ">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_fxrHEeyhI4tUSP5zmQ" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_gBrHEeyhI4tUSP5zmQ" x="91" y="52"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_gRrHEeyhI4tUSP5zmQ" x="160" y="60" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_oP5_ghrHEeyhI4tUSP5zmQ" type="3005" element="_oP5YDhrHEeyhI4tUSP5zmQ" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_oP5_gxrHEeyhI4tUSP5zmQ" type="5005" element="_oP5YDhrHEeyhI4tUSP5zmQ"/>
              <children xmi:type="notation:Shape" xmi:id="_oP5_hBrHEeyhI4tUSP5zmQ" type="3043" element="_oP5YFxrHEeyhI4tUSP5zmQ" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_oP5_hRrHEeyhI4tUSP5zmQ" type="5055" element="_oP5YFxrHEeyhI4tUSP5zmQ">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_hhrHEeyhI4tUSP5zmQ" x="77" y="-38"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_hxrHEeyhI4tUSP5zmQ" x="44" y="-17"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_iBrHEeyhI4tUSP5zmQ" x="501" y="54" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_oP5_iRrHEeyhI4tUSP5zmQ" type="3005" element="_oP5YHhrHEeyhI4tUSP5zmQ" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_oP5_ihrHEeyhI4tUSP5zmQ" type="5005" element="_oP5YHhrHEeyhI4tUSP5zmQ"/>
              <children xmi:type="notation:Shape" xmi:id="_oP5_ixrHEeyhI4tUSP5zmQ" type="3043" element="_oP5YKBrHEeyhI4tUSP5zmQ" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_oP5_jBrHEeyhI4tUSP5zmQ" type="5055" element="_oP5YKBrHEeyhI4tUSP5zmQ">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_jRrHEeyhI4tUSP5zmQ" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_jhrHEeyhI4tUSP5zmQ"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_jxrHEeyhI4tUSP5zmQ" x="498" y="138" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_oP5_kBrHEeyhI4tUSP5zmQ" type="3027" element="_oP5YLhrHEeyhI4tUSP5zmQ" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_oP5_kRrHEeyhI4tUSP5zmQ" type="5017" element="_oP5YLhrHEeyhI4tUSP5zmQ"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_khrHEeyhI4tUSP5zmQ" x="688" y="56" width="124" height="62"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_oP5_kxrHEeyhI4tUSP5zmQ" type="3062" element="_oP5YRxrHEeyhI4tUSP5zmQ" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_oP5_lBrHEeyhI4tUSP5zmQ" type="5090" element="_oP5YRxrHEeyhI4tUSP5zmQ">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_lRrHEeyhI4tUSP5zmQ" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_lhrHEeyhI4tUSP5zmQ" x="840" y="165" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_oP5_lxrHEeyhI4tUSP5zmQ" type="3062" element="_oP5YSxrHEeyhI4tUSP5zmQ" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_oP5_mBrHEeyhI4tUSP5zmQ" type="5090" element="_oP5YSxrHEeyhI4tUSP5zmQ">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_mRrHEeyhI4tUSP5zmQ" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_mhrHEeyhI4tUSP5zmQ" x="855" y="72" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_oP5_mxrHEeyhI4tUSP5zmQ" type="3008" element="_oP5YTxrHEeyhI4tUSP5zmQ" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_oP5_nBrHEeyhI4tUSP5zmQ" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_nRrHEeyhI4tUSP5zmQ" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_nhrHEeyhI4tUSP5zmQ" x="327" y="103"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_oP5_nxrHEeyhI4tUSP5zmQ" type="3027" element="_oP5YUxrHEeyhI4tUSP5zmQ" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_oP5_oBrHEeyhI4tUSP5zmQ" type="5017" element="_oP5YUxrHEeyhI4tUSP5zmQ"/>
              <children xmi:type="notation:Shape" xmi:id="_oP5_oRrHEeyhI4tUSP5zmQ" type="3032" element="_oP5YkRrHEeyhI4tUSP5zmQ" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_oP5_ohrHEeyhI4tUSP5zmQ" type="5062" element="_oP5YkRrHEeyhI4tUSP5zmQ">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_oxrHEeyhI4tUSP5zmQ" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_pBrHEeyhI4tUSP5zmQ" x="250" y="215"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_pRrHEeyhI4tUSP5zmQ" x="160" y="198" width="120" height="60"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_oP5_phrHEeyhI4tUSP5zmQ"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_oP5_pxrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_oP5_qBrHEeyhI4tUSP5zmQ"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_oP5_qRrHEeyhI4tUSP5zmQ"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_qhrHEeyhI4tUSP5zmQ" x="23" y="10" width="1657" height="343"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_oP5_qxrHEeyhI4tUSP5zmQ"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_rBrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_oP5_rRrHEeyhI4tUSP5zmQ"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_oP5_rhrHEeyhI4tUSP5zmQ"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_oP5_rxrHEeyhI4tUSP5zmQ" width="1680" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_oP5_sBrHEeyhI4tUSP5zmQ"/>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_sRrHEeyhI4tUSP5zmQ" type="4001" element="_oP5YzxrHEeyhI4tUSP5zmQ" source="_oP5_dxrHEeyhI4tUSP5zmQ" target="_oP5_exrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_shrHEeyhI4tUSP5zmQ" type="6001" element="_oP5YzxrHEeyhI4tUSP5zmQ">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_sxrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_tBrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_tRrHEeyhI4tUSP5zmQ" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_thrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y0hrHEeyhI4tUSP5zmQ" source="_oP5_mxrHEeyhI4tUSP5zmQ" target="_oP5_ghrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_txrHEeyhI4tUSP5zmQ" type="6001" element="_oP5Y0hrHEeyhI4tUSP5zmQ">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_uBrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_uRrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_uhrHEeyhI4tUSP5zmQ" points="[-12, -26, -174, 24]$[-12, -44, -174, 6]$[141, -44, -21, 6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_uxrHEeyhI4tUSP5zmQ" id="(0.7674418604651163,0.6046511627906976)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_vBrHEeyhI4tUSP5zmQ" id="(0.18421052631578946,0.43859649122807015)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_vRrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y1RrHEeyhI4tUSP5zmQ" source="_oP5_ghrHEeyhI4tUSP5zmQ" target="_oP5_kBrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_vhrHEeyhI4tUSP5zmQ" type="6001" element="_oP5Y1RrHEeyhI4tUSP5zmQ">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_vxrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_wBrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_wRrHEeyhI4tUSP5zmQ" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_whrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y2BrHEeyhI4tUSP5zmQ" source="_oP5_fRrHEeyhI4tUSP5zmQ" target="_oP5_iRrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_wxrHEeyhI4tUSP5zmQ" type="6001" element="_oP5Y2BrHEeyhI4tUSP5zmQ">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_xBrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_xRrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_xhrHEeyhI4tUSP5zmQ" points="[0, 0, -157, -40]$[147, 41, -10, 1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_xxrHEeyhI4tUSP5zmQ" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_yBrHEeyhI4tUSP5zmQ" id="(0.08771929824561403,0.631578947368421)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_yRrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y2xrHEeyhI4tUSP5zmQ" source="_oP5_iRrHEeyhI4tUSP5zmQ" target="_oP5_kxrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_yhrHEeyhI4tUSP5zmQ" type="6001" element="_oP5Y2xrHEeyhI4tUSP5zmQ">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_yxrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_zBrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_zRrHEeyhI4tUSP5zmQ" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_zhrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y3hrHEeyhI4tUSP5zmQ" source="_oP5_mxrHEeyhI4tUSP5zmQ" target="_oP5_iRrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_zxrHEeyhI4tUSP5zmQ" type="6001" element="_oP5Y3hrHEeyhI4tUSP5zmQ">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_0BrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_0RrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_0hrHEeyhI4tUSP5zmQ" points="[0, 4, -120, -35]$[0, 39, -120, 0]$[120, 39, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_0xrHEeyhI4tUSP5zmQ" id="(0.7674418604651163,0.20930232558139536)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_1BrHEeyhI4tUSP5zmQ" id="(0.0,0.24561403508771928)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_1RrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y4hrHEeyhI4tUSP5zmQ" source="_oP5_kBrHEeyhI4tUSP5zmQ" target="_oP5_lxrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_1hrHEeyhI4tUSP5zmQ" type="6001" element="_oP5Y4hrHEeyhI4tUSP5zmQ">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_1xrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_2BrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_2RrHEeyhI4tUSP5zmQ" points="[0, -3, -98, 0]$[92, -5, -6, -2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_2hrHEeyhI4tUSP5zmQ" id="(1.0,0.4838709677419355)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_2xrHEeyhI4tUSP5zmQ" id="(0.2,0.43333333333333335)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_3BrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y5RrHEeyhI4tUSP5zmQ" source="_oP5_hBrHEeyhI4tUSP5zmQ" target="_oP5_kBrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_3RrHEeyhI4tUSP5zmQ" type="6001" element="_oP5Y5RrHEeyhI4tUSP5zmQ">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_3hrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_3xrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_4BrHEeyhI4tUSP5zmQ" points="[0, -25, -213, -49]$[0, -48, -213, -72]$[257, -48, 44, -72]$[257, -8, 44, -32]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_4RrHEeyhI4tUSP5zmQ" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_4hrHEeyhI4tUSP5zmQ" id="(0.14516129032258066,0.5161290322580645)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_4xrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y6BrHEeyhI4tUSP5zmQ" source="_oP5_ixrHEeyhI4tUSP5zmQ" target="_oP5_kxrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_5BrHEeyhI4tUSP5zmQ" type="6001" element="_oP5Y6BrHEeyhI4tUSP5zmQ">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_5RrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_5hrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_5xrHEeyhI4tUSP5zmQ" points="[0, -2, -163, 43]$[163, -2, 0, 43]$[163, -31, 0, 14]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_6BrHEeyhI4tUSP5zmQ" id="(1.0,1.0)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_6RrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y6xrHEeyhI4tUSP5zmQ" source="_oP5_exrHEeyhI4tUSP5zmQ" target="_oP5_mxrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_6hrHEeyhI4tUSP5zmQ" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_6xrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_7BrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_7RrHEeyhI4tUSP5zmQ" points="[0, 6, -52, -33]$[28, 6, -24, -33]$[28, 33, -24, -6]$[47, 33, -5, -6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_7hrHEeyhI4tUSP5zmQ" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_7xrHEeyhI4tUSP5zmQ" id="(0.11627906976744186,0.627906976744186)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_8BrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y7hrHEeyhI4tUSP5zmQ" source="_oP5_nxrHEeyhI4tUSP5zmQ" target="_oP5_mxrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_8RrHEeyhI4tUSP5zmQ" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_8hrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_8xrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_9BrHEeyhI4tUSP5zmQ" points="[0, -2, -56, 94]$[28, -2, -28, 94]$[28, -96, -28, 0]$[55, -96, -1, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_9RrHEeyhI4tUSP5zmQ" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5_9hrHEeyhI4tUSP5zmQ" id="(0.20930232558139536,0.6976744186046512)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5_9xrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y8RrHEeyhI4tUSP5zmQ" source="_oP5_oRrHEeyhI4tUSP5zmQ" target="_oP5_iRrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5_-BrHEeyhI4tUSP5zmQ" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP5_-RrHEeyhI4tUSP5zmQ" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP5_-hrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP5_-xrHEeyhI4tUSP5zmQ" points="[0, -13, -230, 75]$[97, -13, -133, 75]$[97, -96, -133, -8]$[226, -96, -4, -8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5__BrHEeyhI4tUSP5zmQ" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP5__RrHEeyhI4tUSP5zmQ" id="(0.03508771929824561,0.8596491228070176)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_oP5__hrHEeyhI4tUSP5zmQ" type="4001" element="_oP5Y9BrHEeyhI4tUSP5zmQ" source="_oP5_dxrHEeyhI4tUSP5zmQ" target="_oP5_nxrHEeyhI4tUSP5zmQ" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_oP5__xrHEeyhI4tUSP5zmQ" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_oP6AABrHEeyhI4tUSP5zmQ" x="14" y="-44"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_oP6AARrHEeyhI4tUSP5zmQ" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_oP6AAhrHEeyhI4tUSP5zmQ" points="[-15, -1, -89, -139]$[-15, 129, -89, -9]$[70, 129, -4, -9]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP6AAxrHEeyhI4tUSP5zmQ" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_oP6ABBrHEeyhI4tUSP5zmQ" id="(0.03333333333333333,0.6333333333333333)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
