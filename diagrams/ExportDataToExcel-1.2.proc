<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_jXKokCXbEeyM1pVz1DWtJA" name="ExportDataToExcel" version="1.2" author="C6754557" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004" configId="ACED0005740010372E31312E312D303031372E31312E34">
    <elements xmi:type="process:Pool" xmi:id="_jXL2sCXbEeyM1pVz1DWtJA" name="ExportDataToExcel" version="1.2">
      <elements xmi:type="process:Lane" xmi:id="_jXL2sSXbEeyM1pVz1DWtJA" name="Export User" actor="_jXMeeSXbEeyM1pVz1DWtJA">
        <elements xmi:type="process:StartEvent" xmi:id="_jXL2siXbEeyM1pVz1DWtJA" name="Start Export" outgoing="_jXMeUCXbEeyM1pVz1DWtJA _jXMedSXbEeyM1pVz1DWtJA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jXL2syXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jXL2tCXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jXL2tSXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_jXL2tiXbEeyM1pVz1DWtJA" name="Export Data from BDM Query" outgoing="_jXMebCXbEeyM1pVz1DWtJA" incoming="_jXMeUCXbEeyM1pVz1DWtJA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jXL2tyXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jXL2uCXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jXL2uSXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_jXL2uiXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_jXL2uyXbEeyM1pVz1DWtJA" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_jXL2vCXbEeyM1pVz1DWtJA" name="exportDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_jXL2vSXbEeyM1pVz1DWtJA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXL2viXbEeyM1pVz1DWtJA" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_jXL2vyXbEeyM1pVz1DWtJA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXL2wCXbEeyM1pVz1DWtJA" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXL2wSXbEeyM1pVz1DWtJA" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_jXL2wiXbEeyM1pVz1DWtJA" name="exportDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def BusinessObjectDAO dao_instance = null;&#xD;&#xA;def java.lang.reflect.Method find_method = null;&#xD;&#xA;def Object[] method_parameters = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def int page_count=0;&#xD;&#xA;def int page_limit=0;&#x9;// To avoid infinite loop&#xD;&#xA;def int page_size=0;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;// Map objectName (lowercase) -> DAO object&#xD;&#xA;def Map dao_objects_map = [&quot;proposition&quot;: propositionDAO];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Data Export&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get find method parameters&#xD;&#xA;&#x9;def Map find_method_profile = BDMUtility.getFindQuery(objectName,queryName, queryCriteria, dao_objects_map, queryListIds);&#xD;&#xA;&#x9;error_message = find_method_profile['errorMessage'];&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error while retrieving find method: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;dao_instance = find_method_profile['daoInstance'];&#xD;&#xA;&#x9;&#x9;find_method = find_method_profile['findMethod'];&#xD;&#xA;&#x9;&#x9;method_parameters = find_method_profile['parameters'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get Page count / page size values according to the type of query&#xD;&#xA;&#x9;&#x9;if (! formatAllRowsExported.equalsIgnoreCase(rowsExported)) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting only current page according to selected format : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = pageCount;&#xD;&#xA;&#x9;&#x9;&#x9;page_size = pageSize;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit = page_count+1;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting all rows : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = 0;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit=maximumNumberOfQueriedPages;&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;&#x9;&#x9;page_size=queryAllPageSize;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get fields map&#xD;&#xA;&#x9;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, dao_instance: dao_instance, find_method: find_method, method_parameters: method_parameters, page_count: page_count, page_size: page_size, page_limit: page_limit, field_names_list: field_names_list, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL2wyXbEeyM1pVz1DWtJA" name="queryCriteria" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_jXL2xCXbEeyM1pVz1DWtJA" name="propositionDAO" content="propositionDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.PropositionDAO" returnTypeFixed="true"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXL2xSXbEeyM1pVz1DWtJA" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL2xiXbEeyM1pVz1DWtJA" name="objectName" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL2xyXbEeyM1pVz1DWtJA" name="queryName" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_jXL2yCXbEeyM1pVz1DWtJA" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL2ySXbEeyM1pVz1DWtJA" name="pageCount" dataType="_jXNFaSXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_jXL2yiXbEeyM1pVz1DWtJA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL2yyXbEeyM1pVz1DWtJA" name="pageSize" dataType="_jXNFaSXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXL2zCXbEeyM1pVz1DWtJA" name="formatAllRowsExported" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXL2zSXbEeyM1pVz1DWtJA" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXL2ziXbEeyM1pVz1DWtJA" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXL2zyXbEeyM1pVz1DWtJA" name="fieldsMap" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL20CXbEeyM1pVz1DWtJA" name="rowsExported" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL20SXbEeyM1pVz1DWtJA" name="applicationPage" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL20iXbEeyM1pVz1DWtJA" name="outputFormat" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXL20yXbEeyM1pVz1DWtJA" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL21CXbEeyM1pVz1DWtJA" name="queryListIds" multiple="true" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_jXL21SXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXL21iXbEeyM1pVz1DWtJA" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXL21yXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXL22CXbEeyM1pVz1DWtJA" name="executeExport" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def find_method = result['find_method'];&#xD;&#xA;&#x9;def dao_instance = result['dao_instance'];&#xD;&#xA;&#x9;def method_parameters = result['method_parameters'];&#xD;&#xA;&#x9;def int page_count =  result['page_count'];&#xD;&#xA;&#x9;def int page_limit = result['page_limit'];&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;def int page_size = result['page_size'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;while ((has_more) &amp;&amp; (page_count&lt;page_limit) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Executing query with &quot; + String.valueOf(method_parameters.size()) + &quot; parameters for page &quot; + String.valueOf(page_count) + &quot; and page size=&quot; + String.valueOf(page_size));&#xD;&#xA;&#x9;&#x9;def Map find_result = BDMUtility.executeFindMethod(dao_instance, find_method, method_parameters, page_count, page_size);&#xD;&#xA;&#x9;&#x9;error_message = find_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;def records_list = find_result['records'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Error detected on query page &quot; + String.valueOf(page_count) + &quot; : &quot; + error_message);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (records_list == null) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : records list is null&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def nb_records = records_list.size();&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : found &quot;  + String.valueOf(nb_records) + &quot; records&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Export list to Excel&#xD;&#xA;&#x9;&#x9;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ExcelFile.addExcelDataRow(worksheet, records_list[i], field_names_list, row_index, dateStyle);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;if (nb_records&lt;page_size) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Next page&#xD;&#xA;&#x9;&#x9;page_count = page_count +1;&#xD;&#xA;&#x9;} // end while&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_jXL22SXbEeyM1pVz1DWtJA" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_jXL22iXbEeyM1pVz1DWtJA" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_jXL22yXbEeyM1pVz1DWtJA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXL23CXbEeyM1pVz1DWtJA" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXL23SXbEeyM1pVz1DWtJA" name="logClass" typeClassname="java.lang.String"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXL23iXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_jXL23yXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXL24CXbEeyM1pVz1DWtJA" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_jXL24SXbEeyM1pVz1DWtJA" name="errorMessage" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXL24iXbEeyM1pVz1DWtJA" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXL24yXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXL25CXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_jXL25SXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXL25iXbEeyM1pVz1DWtJA" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_jXL25yXbEeyM1pVz1DWtJA" name="documentStorageId" dataType="_jXNFaiXbEeyM1pVz1DWtJA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXL26CXbEeyM1pVz1DWtJA" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXL26SXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXL26iXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_jXL26yXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXL27CXbEeyM1pVz1DWtJA" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_jXL27SXbEeyM1pVz1DWtJA" name="filepath" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXL27iXbEeyM1pVz1DWtJA" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXL27yXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXL28CXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_jXL28SXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXL28iXbEeyM1pVz1DWtJA" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_jXL28yXbEeyM1pVz1DWtJA" name="errorDetected" dataType="_jXNFZyXbEeyM1pVz1DWtJA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXL29CXbEeyM1pVz1DWtJA" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_jXL29SXbEeyM1pVz1DWtJA" name="errorMessage" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXL29iXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_jXL29yXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_jXL2-CXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_jXL2-SXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_jXL2-iXbEeyM1pVz1DWtJA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_jXL2-yXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_jXL2_CXbEeyM1pVz1DWtJA" name="ExportError" outgoing="_jXMeWSXbEeyM1pVz1DWtJA"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_jXL2_SXbEeyM1pVz1DWtJA" name="Display Output File" outgoing="_jXMeViXbEeyM1pVz1DWtJA" incoming="_jXMeUyXbEeyM1pVz1DWtJA" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jXL2_iXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jXL2_yXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jXL3ACXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_jXL3ASXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_jXL3AiXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_jXL3AyXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_jXL3BCXbEeyM1pVz1DWtJA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_jXL3BSXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_jXL3BiXbEeyM1pVz1DWtJA" name="TimerTermination" outgoing="_jXMeZiXbEeyM1pVz1DWtJA">
            <condition xmi:type="expression:Expression" xmi:id="_jXL3ByXbEeyM1pVz1DWtJA" name="delayBeforeCaseCompletionInMinutes" content="return 60000L * delayBeforeCaseCompletionInMinutes;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXL3CCXbEeyM1pVz1DWtJA" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
            </condition>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_jXL3CSXbEeyM1pVz1DWtJA">
            <targetForm xmi:type="expression:Expression" xmi:id="_jXL3CiXbEeyM1pVz1DWtJA" name="DisplayExportFile" content="8d9a9132-635d-4604-b63e-711933a32b41" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_jXL3CyXbEeyM1pVz1DWtJA"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_jXL3DCXbEeyM1pVz1DWtJA" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_jXL3DSXbEeyM1pVz1DWtJA" name="Display Error" outgoing="_jXMeXCXbEeyM1pVz1DWtJA" incoming="_jXMeWSXbEeyM1pVz1DWtJA _jXMeXyXbEeyM1pVz1DWtJA _jXMeciXbEeyM1pVz1DWtJA" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jXL3DiXbEeyM1pVz1DWtJA" name="displayName()" content="return &quot;Echec de l'export de données&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jXL3DyXbEeyM1pVz1DWtJA" name="dynamicDescription()" content="return errorMessage.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_jXL3ECXbEeyM1pVz1DWtJA" name="errorMessage" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jXL3ESXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_jXL3EiXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_jXL3EyXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_jXL3FCXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_jXL3FSXbEeyM1pVz1DWtJA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_jXL3FiXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_jXL3FyXbEeyM1pVz1DWtJA" name="Error Expiry" outgoing="_jXMeaSXbEeyM1pVz1DWtJA">
            <condition xmi:type="expression:Expression" xmi:id="_jXL3GCXbEeyM1pVz1DWtJA" name="00:05:00" content="300000L" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long"/>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_jXL3GSXbEeyM1pVz1DWtJA">
            <targetForm xmi:type="expression:Expression" xmi:id="_jXL3GiXbEeyM1pVz1DWtJA" name="DisplayExportError" content="591192bc-c8ec-41e5-b987-f74165738cb6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_jXL3GyXbEeyM1pVz1DWtJA"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_jXL3HCXbEeyM1pVz1DWtJA" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_jXL3HSXbEeyM1pVz1DWtJA" name="Purge Document" outgoing="_jXMeYyXbEeyM1pVz1DWtJA" incoming="_jXMeViXbEeyM1pVz1DWtJA _jXMeZiXbEeyM1pVz1DWtJA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jXL3HiXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jXL3HyXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jXL3ICXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_jXL3ISXbEeyM1pVz1DWtJA" name="purgeDocumentAndFile" definitionId="scripting-groovy-script" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_jXL3IiXbEeyM1pVz1DWtJA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXL3IyXbEeyM1pVz1DWtJA" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_jXL3JCXbEeyM1pVz1DWtJA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXL3JSXbEeyM1pVz1DWtJA" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXL3JiXbEeyM1pVz1DWtJA" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_jXL3JyXbEeyM1pVz1DWtJA" name="purgeDocumentAndFile" content="import org.bonitasoft.engine.api.APIAccessor;&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Delete temporary file&#xD;&#xA;&#x9;if (! filepath.isEmpty()) {&#xD;&#xA;&#x9;&#x9;FileUtility.deleteFile(filepath);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Remove document&#xD;&#xA;&#x9;if (documentStorageId != null) {&#xD;&#xA;&#x9;&#x9;FileUtility.removeDocument(documentStorageId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;logError(log_file, &quot;Failed to purge document: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL3KCXbEeyM1pVz1DWtJA" name="documentStorageId" dataType="_jXNFaiXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXL3KSXbEeyM1pVz1DWtJA" name="filepath" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_jXL3KiXbEeyM1pVz1DWtJA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXL3KyXbEeyM1pVz1DWtJA" name="logClass" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_jXL3LCXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXL3LSXbEeyM1pVz1DWtJA" content=""/>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXMdwCXbEeyM1pVz1DWtJA" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_jXMdwSXbEeyM1pVz1DWtJA" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXMdwiXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_jXMdwyXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_jXMdxCXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_jXMdxSXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_jXMdxiXbEeyM1pVz1DWtJA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_jXMdxyXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_jXMdyCXbEeyM1pVz1DWtJA" name="End Error" incoming="_jXMeXCXbEeyM1pVz1DWtJA _jXMeaSXbEeyM1pVz1DWtJA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jXMdySXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jXMdyiXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jXMdyyXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_jXMdzCXbEeyM1pVz1DWtJA" name="End Export" incoming="_jXMeYyXbEeyM1pVz1DWtJA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jXMdzSXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jXMdziXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jXMdzyXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_jXMd0CXbEeyM1pVz1DWtJA" name="is OK?" outgoing="_jXMeUyXbEeyM1pVz1DWtJA _jXMeXyXbEeyM1pVz1DWtJA" incoming="_jXMebCXbEeyM1pVz1DWtJA _jXMebyXbEeyM1pVz1DWtJA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jXMd0SXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jXMd0iXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jXMd0yXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_jXMd1CXbEeyM1pVz1DWtJA" name="Export Data from Input" outgoing="_jXMebyXbEeyM1pVz1DWtJA" incoming="_jXMedSXbEeyM1pVz1DWtJA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_jXMd1SXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_jXMd1iXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_jXMd1yXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_jXMd2CXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_jXMd2SXbEeyM1pVz1DWtJA" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_jXMd2iXbEeyM1pVz1DWtJA" name="exportInputDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_jXMd2yXbEeyM1pVz1DWtJA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXMd3CXbEeyM1pVz1DWtJA" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_jXMd3SXbEeyM1pVz1DWtJA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXMd3iXbEeyM1pVz1DWtJA" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXMd3yXbEeyM1pVz1DWtJA" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_jXMd4CXbEeyM1pVz1DWtJA" name="exportInputDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def List&lt;Integer> field_values_index = null;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Export from data provided in contract&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get fields map&#xD;&#xA;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// For each field name, get the corresponding index of fields values&#xD;&#xA;&#x9;&#x9;field_values_index = buildFieldValuesIndex(dataRowsToExport[0].get('fieldNames'), field_names_list);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, field_names_list: field_names_list, field_values_index: field_values_index, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;Integer> buildFieldValuesIndex(List&lt;String> dataRowsFieldNames, List&lt;String> field_names_list) {&#xD;&#xA;&#x9;def List&lt;Integer> list_fields_values_index = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// We need at list one record of data&#xD;&#xA;&#x9;if (dataRowsFieldNames != null) {&#xD;&#xA;&#x9;&#x9;def int nb_fields_values = dataRowsFieldNames.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Loop through each field from field_names_list&#xD;&#xA;&#x9;&#x9;def int nb_fields_names = field_names_list.size();&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields_names; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;// Search the field name in the record values&#xD;&#xA;&#x9;&#x9;&#x9;def String one_field_name = field_names_list[i];&#xD;&#xA;&#x9;&#x9;&#x9;def Integer field_value_index = null;&#xD;&#xA;&#x9;&#x9;&#x9;for (int j=0; j&lt;nb_fields_values; j++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def value_field_name = dataRowsFieldNames[j];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (one_field_name.equalsIgnoreCase(value_field_name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Field has been found in record values&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;field_value_index = Integer.valueOf(j);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Store the field index found, or null if not found&#xD;&#xA;&#x9;&#x9;&#x9;list_fields_values_index.push(field_value_index);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return list_fields_values_index;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXMd4SXbEeyM1pVz1DWtJA" name="fieldsMap" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXMd4iXbEeyM1pVz1DWtJA" name="applicationPage" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXMd4yXbEeyM1pVz1DWtJA" name="objectName" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXMd5CXbEeyM1pVz1DWtJA" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_jXMd5SXbEeyM1pVz1DWtJA" name="outputFormat" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_jXMd5iXbEeyM1pVz1DWtJA" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_jXMd5yXbEeyM1pVz1DWtJA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXMd6CXbEeyM1pVz1DWtJA" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXMd6SXbEeyM1pVz1DWtJA" name="dataRowsToExport" multiple="true" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_jXMd6iXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXMd6yXbEeyM1pVz1DWtJA" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXMd7CXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXMd7SXbEeyM1pVz1DWtJA" name="executeExportOfInputData" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def List&lt;Integer> field_values_index = result['field_values_index'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Export list to Excel&#xD;&#xA;&#x9;List&lt;Map> data_records = dataRowsToExport[0].get('records');&#xD;&#xA;&#x9;def int nb_records = data_records.size();&#xD;&#xA;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get the record values and add the row to the speadsheet&#xD;&#xA;&#x9;&#x9;def List&lt;Object> one_record_values = data_records[i].get(&quot;values&quot;);&#xD;&#xA;&#x9;&#x9;def List&lt;Object> record_values = getRecordValues(one_record_values, field_values_index, log_file);&#xD;&#xA;&#x9;&#x9;ExcelFile.addExcelFieldValuesRow(worksheet, record_values, field_names_list, row_index, dateStyle)&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;def List&lt;Object> getRecordValues(List&lt;Object> one_row_to_export, List&lt;Integer> field_values_index, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;Object> record_values = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def int nb_fields = field_values_index.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;def Integer value_index = field_values_index[i];&#xD;&#xA;&#x9;&#x9;&#x9;if ((value_index == null) || (value_index >= one_row_to_export.size())) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Field not found&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(null);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Get the field value&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def Object field_value = one_row_to_export[value_index];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(field_value);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getRecordValues: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return record_values;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_yr7L0CZ6EeyM1pVz1DWtJA" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_yr7L0SZ6EeyM1pVz1DWtJA" name="logClass" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_yr7L0iZ6EeyM1pVz1DWtJA" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_yr7L0yZ6EeyM1pVz1DWtJA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_yr7L1CZ6EeyM1pVz1DWtJA" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_yr7L1SZ6EeyM1pVz1DWtJA" name="dataRowsToExport" multiple="true" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXMd9CXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_jXMd9SXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXMd9iXbEeyM1pVz1DWtJA" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_jXMd9yXbEeyM1pVz1DWtJA" name="errorMessage" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXMd-CXbEeyM1pVz1DWtJA" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXMd-SXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXMd-iXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_jXMd-yXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXMd_CXbEeyM1pVz1DWtJA" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_jXMd_SXbEeyM1pVz1DWtJA" name="documentStorageId" dataType="_jXNFaiXbEeyM1pVz1DWtJA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXMd_iXbEeyM1pVz1DWtJA" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXMd_yXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXMeACXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_jXMeASXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXMeAiXbEeyM1pVz1DWtJA" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_jXMeAyXbEeyM1pVz1DWtJA" name="filepath" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXMeBCXbEeyM1pVz1DWtJA" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXMeBSXbEeyM1pVz1DWtJA" name="exportResult" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXMeBiXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_jXMeByXbEeyM1pVz1DWtJA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jXMeCCXbEeyM1pVz1DWtJA" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_jXMeCSXbEeyM1pVz1DWtJA" name="errorDetected" dataType="_jXNFZyXbEeyM1pVz1DWtJA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jXMeCiXbEeyM1pVz1DWtJA" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_jXMeCyXbEeyM1pVz1DWtJA" name="errorMessage" dataType="_jXNFbCXbEeyM1pVz1DWtJA"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jXMeDCXbEeyM1pVz1DWtJA" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_jXMeDSXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_jXMeDiXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_jXMeDyXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_jXMeECXbEeyM1pVz1DWtJA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_jXMeESXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_jXMeEiXbEeyM1pVz1DWtJA" name="ExportFromInputError" outgoing="_jXMeciXbEeyM1pVz1DWtJA"/>
        </elements>
        <filters xmi:type="process:ActorFilter" xmi:id="_jXMeEyXbEeyM1pVz1DWtJA" name="initiator" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_jXMeFCXbEeyM1pVz1DWtJA" definitionId="bonita-actorfilter-initiator" version="1.0">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jXMeFSXbEeyM1pVz1DWtJA" key="autoAssign">
              <expression xmi:type="expression:Expression" xmi:id="_jXMeFiXbEeyM1pVz1DWtJA" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
          </configuration>
        </filters>
      </elements>
      <data xmi:type="process:Data" xmi:id="_jXMeFyXbEeyM1pVz1DWtJA" name="errorDetected" dataType="_jXNFZyXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeGCXbEeyM1pVz1DWtJA" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeGSXbEeyM1pVz1DWtJA" name="errorMessage" dataType="_jXNFbCXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeGiXbEeyM1pVz1DWtJA" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeGyXbEeyM1pVz1DWtJA" name="objectName" dataType="_jXNFbCXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeHCXbEeyM1pVz1DWtJA" name="contractObjectName" content="contractObjectName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeHSXbEeyM1pVz1DWtJA" name="contractObjectName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMeHiXbEeyM1pVz1DWtJA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeHyXbEeyM1pVz1DWtJA" name="queryName" dataType="_jXNFbCXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeICXbEeyM1pVz1DWtJA" name="contractQueryName" content="contractQueryName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeISXbEeyM1pVz1DWtJA" name="contractQueryName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMeIiXbEeyM1pVz1DWtJA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeIyXbEeyM1pVz1DWtJA" name="queryCriteria" dataType="_jXNFbCXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeJCXbEeyM1pVz1DWtJA" name="contractQueryCriteria" content="contractQueryCriteria" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeJSXbEeyM1pVz1DWtJA" name="contractQueryCriteria">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMeJiXbEeyM1pVz1DWtJA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeJyXbEeyM1pVz1DWtJA" name="outputFormat" dataType="_jXNFbCXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeKCXbEeyM1pVz1DWtJA" name="contractOutputFormat" content="contractOutputFormat" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeKSXbEeyM1pVz1DWtJA" name="contractOutputFormat">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMeKiXbEeyM1pVz1DWtJA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeKyXbEeyM1pVz1DWtJA" name="pageCount" dataType="_jXNFaSXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeLCXbEeyM1pVz1DWtJA" name="contractPageCount" content="contractPageCount" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeLSXbEeyM1pVz1DWtJA" name="contractPageCount" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMeLiXbEeyM1pVz1DWtJA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeLyXbEeyM1pVz1DWtJA" name="pageSize" dataType="_jXNFaSXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeMCXbEeyM1pVz1DWtJA" name="contractPageSize" content="contractPageSize" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeMSXbEeyM1pVz1DWtJA" name="contractPageSize" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMeMiXbEeyM1pVz1DWtJA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeMyXbEeyM1pVz1DWtJA" name="rowsExported" dataType="_jXNFbCXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeNCXbEeyM1pVz1DWtJA" name="contractRowsExported" content="contractRowsExported" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeNSXbEeyM1pVz1DWtJA" name="contractRowsExported">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMeNiXbEeyM1pVz1DWtJA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_jXMeNyXbEeyM1pVz1DWtJA" name="fieldsMap" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeOCXbEeyM1pVz1DWtJA" name="getFieldsMap" content="def proposition_header_fields = [&#xD;&#xA;&#x9;&quot;persistenceId&quot; : &quot;Numéro proposition&quot;,&#xD;&#xA;&#x9;&quot;typeProposition&quot; : &quot;Motif&quot;,&#xD;&#xA;&#x9;&quot;propositionStatus&quot; : &quot;Statut proposition&quot;,&#xD;&#xA;&#x9;&quot;statusMacroEtapes&quot; : &quot;Macro-statut&quot;,&#xD;&#xA;&#x9;&quot;typeWorkflow&quot; : &quot;Type de workflow&quot;,&#xD;&#xA;&#x9;&quot;budgetYear&quot; : &quot;Exercice&quot;,&#xD;&#xA;&#x9;&quot;initialBudgetYear&quot; : &quot;Exercice initial&quot;,&#xD;&#xA;&#x9;&quot;typeAcquisition&quot; : &quot;Type d'acquisition&quot;,&#xD;&#xA;&#x9;&quot;requestSource&quot; : &quot;Source de la proposition&quot;,&#xD;&#xA;&#x9;&quot;propositionAmount&quot; : &quot;Montant proposition initial&quot;,&#xD;&#xA;&#x9;&quot;actualRequestAmount&quot; : &quot;Montant proposition actualisé&quot;,&#xD;&#xA;&#x9;&quot;creationDate&quot;: &quot;Date de création&quot;,&#xD;&#xA;&#x9;&quot;creatorName&quot;: &quot;Nom du créateur&quot;,&#xD;&#xA;&#x9;&quot;agencyCode&quot;: &quot;Code de l'agence&quot;,&#xD;&#xA;&#x9;&quot;agencyName&quot; : &quot;Nom de l'agence&quot;,&#xD;&#xA;&#x9;&quot;siteCode&quot;: &quot;Code du site&quot;,&#xD;&#xA;&#x9;&quot;siteName&quot;: &quot;Nom du site&quot;,&#xD;&#xA;&#x9;&quot;sectorCode&quot;: &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;sectorName&quot; : &quot;Nom du secteur&quot;,&#xD;&#xA;&#x9;&quot;entiteCode&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;entiteName&quot; : &quot;Nom entité&quot;,&#xD;&#xA;&#x9;&quot;territoryCode&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;territoryName&quot; : &quot;Nom territoire&quot;,&#xD;&#xA;&#x9;&quot;existing&quot; : &quot;Matériel existant&quot;,&#xD;&#xA;&#x9;&quot;materialNumber&quot; : &quot;Numéro de matériel&quot;,&#xD;&#xA;&#x9;&quot;typeMaterial&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;typeMaterialName&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterial&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterialName&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;generalStatusMaterial&quot; : &quot;Etat général&quot;,&#xD;&#xA;&#x9;&quot;materialFamily&quot; : &quot;Famille de matériel&quot;,&#xD;&#xA;&#x9;&quot;isBudgetRespected&quot; : &quot;Inclus au budget&quot;,&#xD;&#xA;&#x9;&quot;commentSmart&quot; : &quot;Observation SMARTE&quot;,&#xD;&#xA;&#x9;&quot;nbMonth&quot; : &quot;Nombre de mois&quot;,&#xD;&#xA;&#x9;&quot;monthlyAmount&quot; : &quot;Mensualité&quot;,&#xD;&#xA;&#x9;&quot;monthlyPropositionAmount&quot; : &quot;Mensualité future&quot;,&#xD;&#xA;&#x9;&quot;estimatedDeliveryDate&quot; : &quot;Date de livraison prévue&quot;,&#xD;&#xA;&#x9;&quot;pitchSmart&quot; : &quot;Argumentaire SMARTE&quot;,&#xD;&#xA;&#x9;&quot;percentage&quot; : &quot;Pourcentage&quot;];&#xD;&#xA;&#xD;&#xA;def proposition_all_fields = proposition_header_fields + [&#xD;&#xA;&#x9;&quot;creatorId&quot;: &quot;Identifiant du créateur&quot;,&#xD;&#xA;&#x9;&quot;caseId&quot; : &quot;CaseId Bonita&quot;,&#xD;&#xA;&#x9;&quot;sponsor&quot; : &quot;Sponsor&quot;,&#xD;&#xA;&#x9;&quot;isIsBudgetPropositionApproved&quot;: &quot;Budget approuvé&quot;,&#xD;&#xA;&#x9;&quot;lyrePreOrderCreationStatus&quot; : &quot;Statut de création commande dans Lyre&quot;,&#xD;&#xA;&#x9;&quot;parentPropositionId&quot; : &quot;Proposition parent&quot;,&#xD;&#xA;&#x9;&quot;dddRenewChildPropositionId&quot; : &quot;Proposition DDD Renouvellement fille&quot;,&#xD;&#xA;&#x9;&quot;dddRenewStartDate&quot; : &quot;Date planifiée de DDD Renouvellement&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverName&quot; : &quot;Approbation 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverRole&quot; : &quot;Approbation 1-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].dateAction&quot; : &quot;Approbation 1-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].decision&quot; : &quot;Approbation 1-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].comments&quot; : &quot;Approbation 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverName&quot; : &quot;Approbation 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverRole&quot; : &quot;Approbation 2-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].dateAction&quot; : &quot;Approbation 2-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].decision&quot; : &quot;Approbation 2-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].comments&quot; : &quot;Approbation 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverName&quot; : &quot;Approbation 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverRole&quot; : &quot;Approbation 3-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].dateAction&quot; : &quot;Approbation 3-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].decision&quot; : &quot;Approbation 3-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].comments&quot; : &quot;Approbation 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverName&quot; : &quot;Approbation 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverRole&quot; : &quot;Approbation 4-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].dateAction&quot; : &quot;Approbation 4-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].decision&quot; : &quot;Approbation 4-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].comments&quot; : &quot;Approbation 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverName&quot; : &quot;Approbation 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverRole&quot; : &quot;Approbation 5-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].dateAction&quot; : &quot;Approbation 5-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].decision&quot; : &quot;Approbation 5-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].comments&quot; : &quot;Approbation 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverName&quot; : &quot;Approbation 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverRole&quot; : &quot;Approbation 6-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].dateAction&quot; : &quot;Approbation 6-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].decision&quot; : &quot;Approbation 6-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].comments&quot; : &quot;Approbation 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverName&quot; : &quot;Approbation 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverRole&quot; : &quot;Approbation 7-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].dateAction&quot; : &quot;Approbation 7-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].decision&quot; : &quot;Approbation 7-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].comments&quot; : &quot;Approbation 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverName&quot; : &quot;Approbation 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverRole&quot; : &quot;Approbation 8-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].dateAction&quot; : &quot;Approbation 8-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].decision&quot; : &quot;Approbation 8-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].comments&quot; : &quot;Approbation 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverName&quot; : &quot;Approbation 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverRole&quot; : &quot;Approbation 9-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].dateAction&quot; : &quot;Approbation 9-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].decision&quot; : &quot;Approbation 9-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].comments&quot; : &quot;Approbation 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverName&quot; : &quot;Approbation 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverRole&quot; : &quot;Approbation 10-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].dateAction&quot; : &quot;Approbation 10-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].decision&quot; : &quot;Approbation 10-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].comments&quot; : &quot;Approbation 10-Commentaire&quot;,&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&quot;comments[1].userName&quot;: &quot;Commentaire 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[1].dateAdded&quot;: &quot;Commentaire 1-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[1].userComment&quot;: &quot;Commentaire 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userName&quot;: &quot;Commentaire 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[2].dateAdded&quot;: &quot;Commentaire 2-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userComment&quot;: &quot;Commentaire 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userName&quot;: &quot;Commentaire 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[3].dateAdded&quot;: &quot;Commentaire 3-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userComment&quot;: &quot;Commentaire 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userName&quot;: &quot;Commentaire 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[4].dateAdded&quot;: &quot;Commentaire 4-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userComment&quot;: &quot;Commentaire 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userName&quot;: &quot;Commentaire 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[5].dateAdded&quot;: &quot;Commentaire 5-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userComment&quot;: &quot;Commentaire 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userName&quot;: &quot;Commentaire 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[6].dateAdded&quot;: &quot;Commentaire 6-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userComment&quot;: &quot;Commentaire 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userName&quot;: &quot;Commentaire 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[7].dateAdded&quot;: &quot;Commentaire 7-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userComment&quot;: &quot;Commentaire 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userName&quot;: &quot;Commentaire 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[8].dateAdded&quot;: &quot;Commentaire 8-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userComment&quot;: &quot;Commentaire 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userName&quot;: &quot;Commentaire 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[9].dateAdded&quot;: &quot;Commentaire 9-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userComment&quot;: &quot;Commentaire 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userName&quot;: &quot;Commentaire 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[10].dateAdded&quot;: &quot;Commentaire 10-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userComment&quot;: &quot;Commentaire 10-Commentaire&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;def eligible_materials_all_fields = [&#xD;&#xA;&#x9;&quot;numMat&quot; : &quot;Numéro matériel&quot;,&#xD;&#xA;&#x9;&quot;codeAgence&quot; : &quot;Code agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceAffectation&quot; : &quot;Agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;causeEligibilite&quot;: &quot;Cause éligibilité&quot;,&#xD;&#xA;&#x9;&quot;genre&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;libelleGenre&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;codeSousGenre&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;libelleSousGenre&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;marque&quot; : &quot;Marque&quot;,&#xD;&#xA;&#x9;&quot;modele&quot; : &quot;Modèle&quot;,&#xD;&#xA;&#x9;&quot;typeAchat&quot; : &quot;Type achat&quot;,&#xD;&#xA;&#x9;&quot;codeEnergie&quot; : &quot;Code énergie&quot;,&#xD;&#xA;&#x9;&quot;dateEntree&quot; : &quot;Date entrée&quot;,&#xD;&#xA;&#x9;&quot;dateCirculation&quot; : &quot;Date circulation&quot;,&#xD;&#xA;&#x9;&quot;compteur&quot; : &quot;Compteur&quot;,&#xD;&#xA;&#x9;&quot;dateDbtContratLoc&quot; : &quot;Date début contrat loc&quot;,&#xD;&#xA;&#x9;&quot;dateFinContratLoc&quot; : &quot;Date fin contrat loc&quot;,&#xD;&#xA;&#x9;&quot;valeurAchat&quot; : &quot;Valeur d'achat&quot;,&#xD;&#xA;&#x9;&quot;coutsSAVTotal&quot; : &quot;Coût SAV total&quot;,&#xD;&#xA;&#x9;&quot;engagementReprise&quot; : &quot;Engagement reprise&quot;,&#xD;&#xA;&#x9;&quot;loyerFinancementMensuel&quot; : &quot;Loyer financement mensuel&quot;,&#xD;&#xA;&#x9;&quot;codeTerritoire&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;libelleTerritoire&quot; : &quot;Territoire&quot;,&#xD;&#xA;&#x9;&quot;codeEntite&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;libelleEntite&quot; : &quot;Entité&quot;,&#xD;&#xA;&#x9;&quot;codeRegion&quot; : &quot;Code région&quot;,&#xD;&#xA;&#x9;&quot;libelleRegion&quot; : &quot;Région&quot;,&#xD;&#xA;&#x9;&quot;codeSecteur&quot; : &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;libelleSecteur&quot; : &quot;Secteur&quot;,&#xD;&#xA;&#x9;&quot;codeSite&quot; : &quot;Code site&quot;,&#xD;&#xA;&#x9;&quot;libelleSite&quot; : &quot;Site&quot;,&#xD;&#xA;&#x9;&quot;codeAgenceLoc&quot; : &quot;Code agence de localisation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceLoc&quot; : &quot;Agence de localisation&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;return [&#xD;&#xA;&quot;searchPropositions&quot;:&#xD;&#xA;&#x9;[&quot;ALL_FIELDS&quot;: proposition_header_fields, //FOR ALL: proposition_all_fields,&#xD;&#xA;&#x9; &quot;HEADER_FIELDS&quot; : proposition_header_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;eligibleMaterials&quot;:&#xD;&#xA;&#x9;[&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: eligible_materials_all_fields&#xD;&#xA;&#x9;]&#xD;&#xA;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeOSXbEeyM1pVz1DWtJA" name="applicationPage" dataType="_jXNFbCXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeOiXbEeyM1pVz1DWtJA" name="contractApplicationPage" content="contractApplicationPage" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeOyXbEeyM1pVz1DWtJA" name="contractApplicationPage">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMePCXbEeyM1pVz1DWtJA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_jXMePSXbEeyM1pVz1DWtJA" name="bdm_object" multiple="true" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.lang.Object">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMePiXbEeyM1pVz1DWtJA" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMePyXbEeyM1pVz1DWtJA" name="documentStorageId" dataType="_jXNFaiXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeQCXbEeyM1pVz1DWtJA" content="" returnType="java.lang.Long"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeQSXbEeyM1pVz1DWtJA" name="filepath" dataType="_jXNFbCXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeQiXbEeyM1pVz1DWtJA" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_jXMeQyXbEeyM1pVz1DWtJA" name="queryListIds" multiple="true" dataType="_jXNFaiXbEeyM1pVz1DWtJA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeRCXbEeyM1pVz1DWtJA" name="init_queryListIds()" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def List&lt;Long> persistence_ids_list = [];&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;for (int i=0; i&lt;contractQueryListIds.size(); i++) {&#xD;&#xA;&#x9;&#x9;def Long long_value = Long.valueOf(contractQueryListIds[i]);&#xD;&#xA;&#x9;&#x9;persistence_ids_list.add(long_value);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_queryListIds&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return persistence_ids_list;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeRSXbEeyM1pVz1DWtJA" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMeRiXbEeyM1pVz1DWtJA"/>
          </referencedElements>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_jXMeRyXbEeyM1pVz1DWtJA" name="logClass" typeClassname="java.lang.String"/>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_jXMeSCXbEeyM1pVz1DWtJA" name="dataRowsToExport" multiple="true" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jXMeSSXbEeyM1pVz1DWtJA" name="contractExportDataRows" content="contractExportDataRows" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_jXMeSiXbEeyM1pVz1DWtJA" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXMeSyXbEeyM1pVz1DWtJA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_jXMeTCXbEeyM1pVz1DWtJA">
        <targetForm xmi:type="expression:Expression" xmi:id="_jXMeTSXbEeyM1pVz1DWtJA" name="ExportDataForm" content="19410973-849c-4315-a1c1-347402af24b6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_jXMeTiXbEeyM1pVz1DWtJA" type="NONE">
        <targetForm xmi:type="expression:Expression" xmi:id="_jXMeTyXbEeyM1pVz1DWtJA" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeUCXbEeyM1pVz1DWtJA" target="_jXL2tiXbEeyM1pVz1DWtJA" source="_jXL2siXbEeyM1pVz1DWtJA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMeUSXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMeUiXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeUyXbEeyM1pVz1DWtJA" name="OK" target="_jXL2_SXbEeyM1pVz1DWtJA" source="_jXMd0CXbEeyM1pVz1DWtJA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMeVCXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMeVSXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeViXbEeyM1pVz1DWtJA" target="_jXL3HSXbEeyM1pVz1DWtJA" source="_jXL2_SXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMeVyXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMeWCXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeWSXbEeyM1pVz1DWtJA" target="_jXL3DSXbEeyM1pVz1DWtJA" source="_jXL2_CXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMeWiXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMeWyXbEeyM1pVz1DWtJA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeXCXbEeyM1pVz1DWtJA" target="_jXMdyCXbEeyM1pVz1DWtJA" source="_jXL3DSXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMeXSXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMeXiXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeXyXbEeyM1pVz1DWtJA" name="Error" target="_jXL3DSXbEeyM1pVz1DWtJA" source="_jXMd0CXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMeYCXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMeYSXbEeyM1pVz1DWtJA" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_jXMeYiXbEeyM1pVz1DWtJA" name="errorDetected" dataType="_jXNFZyXbEeyM1pVz1DWtJA"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeYyXbEeyM1pVz1DWtJA" target="_jXMdzCXbEeyM1pVz1DWtJA" source="_jXL3HSXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMeZCXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMeZSXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeZiXbEeyM1pVz1DWtJA" target="_jXL3HSXbEeyM1pVz1DWtJA" source="_jXL3BiXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMeZyXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMeaCXbEeyM1pVz1DWtJA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeaSXbEeyM1pVz1DWtJA" target="_jXMdyCXbEeyM1pVz1DWtJA" source="_jXL3FyXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMeaiXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMeayXbEeyM1pVz1DWtJA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMebCXbEeyM1pVz1DWtJA" target="_jXMd0CXbEeyM1pVz1DWtJA" source="_jXL2tiXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMebSXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMebiXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMebyXbEeyM1pVz1DWtJA" target="_jXMd0CXbEeyM1pVz1DWtJA" source="_jXMd1CXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMecCXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMecSXbEeyM1pVz1DWtJA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMeciXbEeyM1pVz1DWtJA" target="_jXL3DSXbEeyM1pVz1DWtJA" source="_jXMeEiXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMecyXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMedCXbEeyM1pVz1DWtJA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_jXMedSXbEeyM1pVz1DWtJA" name="Has input data" target="_jXMd1CXbEeyM1pVz1DWtJA" source="_jXL2siXbEeyM1pVz1DWtJA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_jXMediXbEeyM1pVz1DWtJA"/>
        <condition xmi:type="expression:Expression" xmi:id="_jXMedyXbEeyM1pVz1DWtJA" name="hasRowsToExport" content="return (dataRowsToExport.size() > 0) ? true : false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:JavaObjectData" xmi:id="_jXMeeCXbEeyM1pVz1DWtJA" name="dataRowsToExport" multiple="true" dataType="_jXNFbSXbEeyM1pVz1DWtJA" className="java.util.Map"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_jXMeeSXbEeyM1pVz1DWtJA" name="ExportUser" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_jXMeeiXbEeyM1pVz1DWtJA" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_jXMeeyXbEeyM1pVz1DWtJA">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_jXMefCXbEeyM1pVz1DWtJA" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_jXMefSXbEeyM1pVz1DWtJA"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_jXMefiXbEeyM1pVz1DWtJA"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_jXMefyXbEeyM1pVz1DWtJA">
              <role>pop3pAppprover</role>
              <role>pop3pReadOnly</role>
              <role>user</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_jXMegCXbEeyM1pVz1DWtJA"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_jXMegSXbEeyM1pVz1DWtJA" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_jXMegiXbEeyM1pVz1DWtJA" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXMegyXbEeyM1pVz1DWtJA" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_jXMehCXbEeyM1pVz1DWtJA" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_jXMehSXbEeyM1pVz1DWtJA" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXMehiXbEeyM1pVz1DWtJA" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_Izn-kIEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_I0LYMIEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXMeiSXbEeyM1pVz1DWtJA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeiiXbEeyM1pVz1DWtJA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeiyXbEeyM1pVz1DWtJA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMejCXbEeyM1pVz1DWtJA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMejSXbEeyM1pVz1DWtJA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMejiXbEeyM1pVz1DWtJA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMejyXbEeyM1pVz1DWtJA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMekCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMekSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMekiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMekyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMelCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMelSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeliXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMelyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMemCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMemSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMemiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMemyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMenCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMenSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeniXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMenyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeoCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeoSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXMeoiXbEeyM1pVz1DWtJA" id="OTHER">
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeoyXbEeyM1pVz1DWtJA" key="poi-4.0.0.jar" value="poi-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMepCXbEeyM1pVz1DWtJA" key="poi-ooxml-4.0.0.jar" value="poi-ooxml-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMepSXbEeyM1pVz1DWtJA" key="poi-scratchpad-4.0.0.jar" value="poi-scratchpad-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMepiXbEeyM1pVz1DWtJA" key="xmlbeans-2.6.0.jar" value="xmlbeans-2.6.0.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMepyXbEeyM1pVz1DWtJA" key="commons-collections4-4.2.jar" value="commons-collections4-4.2.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeqCXbEeyM1pVz1DWtJA" key="commons-compress-1.21.jar" value="commons-compress-1.21.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeqSXbEeyM1pVz1DWtJA" key="poi-ooxml-schemas-4.0.0.jar" value="poi-ooxml-schemas-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeqiXbEeyM1pVz1DWtJA" key="commons-codec-1.11.jar" value="commons-codec-1.11.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeqyXbEeyM1pVz1DWtJA" key="commons-logging-1.2.jar" value="commons-logging-1.2.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMerCXbEeyM1pVz1DWtJA" key="commons-math3-3.6.1.jar" value="commons-math3-3.6.1.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMerSXbEeyM1pVz1DWtJA" key="curvesapi-1.05.jar" value="curvesapi-1.05.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeriXbEeyM1pVz1DWtJA" key="xmlbeans-3.0.1.jar" value="xmlbeans-3.0.1.jar" type="JAR"/>
        </processDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXMeryXbEeyM1pVz1DWtJA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMesCXbEeyM1pVz1DWtJA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMesSXbEeyM1pVz1DWtJA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMesiXbEeyM1pVz1DWtJA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMesyXbEeyM1pVz1DWtJA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMetCXbEeyM1pVz1DWtJA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMetSXbEeyM1pVz1DWtJA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMetiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMetyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeuCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeuSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeuiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeuyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMevCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMevSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMeviXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMevyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMewCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXMewSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE0CXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE0SXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE0iXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE0yXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE1CXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE1SXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXNE1iXbEeyM1pVz1DWtJA" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNE1yXbEeyM1pVz1DWtJA" name="logClass" value="ExportDataToExcel" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNE2CXbEeyM1pVz1DWtJA" name="formatAllRowsExported" value="ALL" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNE2SXbEeyM1pVz1DWtJA" name="queryAllPageSize" value="500" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNE2iXbEeyM1pVz1DWtJA" name="maximumNumberOfQueriedPages" value="1000" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNE2yXbEeyM1pVz1DWtJA" name="outputDirectory" value="/tmp" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNE3CXbEeyM1pVz1DWtJA" name="delayBeforeCaseCompletionInMinutes" value="5" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNE3SXbEeyM1pVz1DWtJA" name="excelDateFormat" value="dd/mm/yyyy" typeClassname="java.lang.String"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_jXNE3iXbEeyM1pVz1DWtJA" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_jXNE3yXbEeyM1pVz1DWtJA">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_jXNE4CXbEeyM1pVz1DWtJA" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_jXNE4SXbEeyM1pVz1DWtJA"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_jXNE4iXbEeyM1pVz1DWtJA"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_jXNE4yXbEeyM1pVz1DWtJA"/>
            <users xmi:type="actormapping:Users" xmi:id="_jXNE5CXbEeyM1pVz1DWtJA"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_jXNE5SXbEeyM1pVz1DWtJA" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_jXNE5iXbEeyM1pVz1DWtJA" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXNE5yXbEeyM1pVz1DWtJA" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_jXNE6CXbEeyM1pVz1DWtJA" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE6SXbEeyM1pVz1DWtJA" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXNE6iXbEeyM1pVz1DWtJA" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_I1HMUIEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_I10-AIEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXNE7SXbEeyM1pVz1DWtJA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE7iXbEeyM1pVz1DWtJA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE7yXbEeyM1pVz1DWtJA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE8CXbEeyM1pVz1DWtJA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE8SXbEeyM1pVz1DWtJA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE8iXbEeyM1pVz1DWtJA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE8yXbEeyM1pVz1DWtJA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE9CXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE9SXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE9iXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE9yXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE-CXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE-SXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE-iXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE-yXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE_CXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE_SXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE_iXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNE_yXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFACXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFASXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFAiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFAyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFBCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFBSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXNFBiXbEeyM1pVz1DWtJA" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXNFByXbEeyM1pVz1DWtJA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFCCXbEeyM1pVz1DWtJA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFCSXbEeyM1pVz1DWtJA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFCiXbEeyM1pVz1DWtJA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFCyXbEeyM1pVz1DWtJA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFDCXbEeyM1pVz1DWtJA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFDSXbEeyM1pVz1DWtJA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFDiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFDyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFECXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFESXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFEiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFEyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFFCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFFSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFFiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFFyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFGCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFGSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFGiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFGyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFHCXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFHSXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFHiXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_jXNFHyXbEeyM1pVz1DWtJA" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_jXNFICXbEeyM1pVz1DWtJA" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFISXbEeyM1pVz1DWtJA" name="logClass" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFIiXbEeyM1pVz1DWtJA" name="formatAllRowsExported" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFIyXbEeyM1pVz1DWtJA" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFJCXbEeyM1pVz1DWtJA" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFJSXbEeyM1pVz1DWtJA" name="outputDirectory" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFJiXbEeyM1pVz1DWtJA" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFJyXbEeyM1pVz1DWtJA" name="excelDateFormat" typeClassname="java.lang.String"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFKCXbEeyM1pVz1DWtJA" name="logClass" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFKSXbEeyM1pVz1DWtJA" name="formatAllRowsExported" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFKiXbEeyM1pVz1DWtJA" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFKyXbEeyM1pVz1DWtJA" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFLCXbEeyM1pVz1DWtJA" name="outputDirectory" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFLSXbEeyM1pVz1DWtJA" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_jXNFLiXbEeyM1pVz1DWtJA" name="excelDateFormat" typeClassname="java.lang.String"/>
      <contract xmi:type="process:Contract" xmi:id="_jXNFLyXbEeyM1pVz1DWtJA">
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFMCXbEeyM1pVz1DWtJA" name="contractObjectName" description="BDM Object name for a BDM Query, or name of main object exported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFMSXbEeyM1pVz1DWtJA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFMiXbEeyM1pVz1DWtJA" name="contractQueryName" description="BDM Query name for a BDM Query, empty otherwise">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFMyXbEeyM1pVz1DWtJA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFNCXbEeyM1pVz1DWtJA" name="contractQueryCriteria" description="BDM Query criteria for a BDM Query, empty if contractExportDataRows is provided">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFNSXbEeyM1pVz1DWtJA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFNiXbEeyM1pVz1DWtJA" name="contractOutputFormat">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFNyXbEeyM1pVz1DWtJA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFOCXbEeyM1pVz1DWtJA" name="contractRowsExported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFOSXbEeyM1pVz1DWtJA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFOiXbEeyM1pVz1DWtJA" name="contractPageCount" type="INTEGER" description="Page number for a BDM query, starting at 0">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFOyXbEeyM1pVz1DWtJA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFPCXbEeyM1pVz1DWtJA" name="contractPageSize" type="INTEGER" description="Maximum number of rows">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFPSXbEeyM1pVz1DWtJA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFPiXbEeyM1pVz1DWtJA" name="contractApplicationPage">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFPyXbEeyM1pVz1DWtJA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFQCXbEeyM1pVz1DWtJA" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFQSXbEeyM1pVz1DWtJA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_jXNFQiXbEeyM1pVz1DWtJA" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFQyXbEeyM1pVz1DWtJA"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_jXNFRCXbEeyM1pVz1DWtJA" name="fieldNames" description="List of field names" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFRSXbEeyM1pVz1DWtJA"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_jXNFRiXbEeyM1pVz1DWtJA" name="name">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFRyXbEeyM1pVz1DWtJA"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_jXNFSCXbEeyM1pVz1DWtJA" name="value">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFSSXbEeyM1pVz1DWtJA"/>
            </inputs>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_jXNFSiXbEeyM1pVz1DWtJA" name="records" type="COMPLEX" description="List of records" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFSyXbEeyM1pVz1DWtJA"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_jXNFTCXbEeyM1pVz1DWtJA" name="values" description="List of values of each record" multiple="true">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFTSXbEeyM1pVz1DWtJA"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_jXNFTiXbEeyM1pVz1DWtJA" name="textValue">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFTyXbEeyM1pVz1DWtJA"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_jXNFUCXbEeyM1pVz1DWtJA" name="boolValue" type="BOOLEAN">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFUSXbEeyM1pVz1DWtJA"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_jXNFUiXbEeyM1pVz1DWtJA" name="dateValue" type="LOCALDATE">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_jXNFUyXbEeyM1pVz1DWtJA"/>
              </inputs>
            </inputs>
          </inputs>
        </inputs>
      </contract>
      <documents xmi:type="process:Document" xmi:id="_jXNFVCXbEeyM1pVz1DWtJA" name="exportFile">
        <mimeType xmi:type="expression:Expression" xmi:id="_jXNFVSXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_jXNFViXbEeyM1pVz1DWtJA" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_jXNFVyXbEeyM1pVz1DWtJA" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_jXNFWCXbEeyM1pVz1DWtJA">
        <name xmi:type="expression:Expression" xmi:id="_jXNFWSXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_jXNFWiXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_jXNFWyXbEeyM1pVz1DWtJA">
        <name xmi:type="expression:Expression" xmi:id="_jXNFXCXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_jXNFXSXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_jXNFXiXbEeyM1pVz1DWtJA">
        <name xmi:type="expression:Expression" xmi:id="_jXNFXyXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_jXNFYCXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_jXNFYSXbEeyM1pVz1DWtJA">
        <name xmi:type="expression:Expression" xmi:id="_jXNFYiXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_jXNFYyXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_jXNFZCXbEeyM1pVz1DWtJA">
        <name xmi:type="expression:Expression" xmi:id="_jXNFZSXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_jXNFZiXbEeyM1pVz1DWtJA" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_jXNFZyXbEeyM1pVz1DWtJA" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_jXNFaCXbEeyM1pVz1DWtJA" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_jXNFaSXbEeyM1pVz1DWtJA" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_jXNFaiXbEeyM1pVz1DWtJA" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_jXNFayXbEeyM1pVz1DWtJA" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_jXNFbCXbEeyM1pVz1DWtJA" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_jXNFbSXbEeyM1pVz1DWtJA" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_jXNFbiXbEeyM1pVz1DWtJA" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_jXNFbyXbEeyM1pVz1DWtJA" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_jXNr4CXbEeyM1pVz1DWtJA" type="Process" element="_jXKokCXbEeyM1pVz1DWtJA" name="MonDiagramme1" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_jXNr4SXbEeyM1pVz1DWtJA" type="2007" element="_jXL2sCXbEeyM1pVz1DWtJA">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNr4iXbEeyM1pVz1DWtJA" type="5008" element="_jXL2sCXbEeyM1pVz1DWtJA"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNr4yXbEeyM1pVz1DWtJA" type="7001" element="_jXL2sCXbEeyM1pVz1DWtJA">
        <children xmi:type="notation:Node" xmi:id="_jXNr5CXbEeyM1pVz1DWtJA" type="3007" element="_jXL2sSXbEeyM1pVz1DWtJA">
          <children xmi:type="notation:DecorationNode" xmi:id="_jXNr5SXbEeyM1pVz1DWtJA" type="5007" element="_jXL2sSXbEeyM1pVz1DWtJA"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_jXNr5iXbEeyM1pVz1DWtJA" type="7002" element="_jXL2sSXbEeyM1pVz1DWtJA">
            <children xmi:type="notation:Shape" xmi:id="_jXNr5yXbEeyM1pVz1DWtJA" type="3002" element="_jXL2siXbEeyM1pVz1DWtJA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_jXNr6CXbEeyM1pVz1DWtJA" type="5024" element="_jXL2siXbEeyM1pVz1DWtJA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNr6SXbEeyM1pVz1DWtJA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNr6iXbEeyM1pVz1DWtJA" x="60" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_jXNr6yXbEeyM1pVz1DWtJA" type="3027" element="_jXL2tiXbEeyM1pVz1DWtJA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_jXNr7CXbEeyM1pVz1DWtJA" type="5017" element="_jXL2tiXbEeyM1pVz1DWtJA"/>
              <children xmi:type="notation:Shape" xmi:id="_jXNr7SXbEeyM1pVz1DWtJA" type="3032" element="_jXL2_CXbEeyM1pVz1DWtJA" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_jXNr7iXbEeyM1pVz1DWtJA" type="5062" element="_jXL2_CXbEeyM1pVz1DWtJA">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNr7yXbEeyM1pVz1DWtJA" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNr8CXbEeyM1pVz1DWtJA" x="91" y="52"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNr8SXbEeyM1pVz1DWtJA" x="160" y="60" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_jXNr8iXbEeyM1pVz1DWtJA" type="3005" element="_jXL2_SXbEeyM1pVz1DWtJA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_jXNr8yXbEeyM1pVz1DWtJA" type="5005" element="_jXL2_SXbEeyM1pVz1DWtJA"/>
              <children xmi:type="notation:Shape" xmi:id="_jXNr9CXbEeyM1pVz1DWtJA" type="3043" element="_jXL3BiXbEeyM1pVz1DWtJA" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_jXNr9SXbEeyM1pVz1DWtJA" type="5055" element="_jXL3BiXbEeyM1pVz1DWtJA">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNr9iXbEeyM1pVz1DWtJA" x="77" y="-38"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNr9yXbEeyM1pVz1DWtJA" x="44" y="-17"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNr-CXbEeyM1pVz1DWtJA" x="501" y="54" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_jXNr-SXbEeyM1pVz1DWtJA" type="3005" element="_jXL3DSXbEeyM1pVz1DWtJA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_jXNr-iXbEeyM1pVz1DWtJA" type="5005" element="_jXL3DSXbEeyM1pVz1DWtJA"/>
              <children xmi:type="notation:Shape" xmi:id="_jXNr-yXbEeyM1pVz1DWtJA" type="3043" element="_jXL3FyXbEeyM1pVz1DWtJA" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_jXNr_CXbEeyM1pVz1DWtJA" type="5055" element="_jXL3FyXbEeyM1pVz1DWtJA">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNr_SXbEeyM1pVz1DWtJA" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNr_iXbEeyM1pVz1DWtJA"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNr_yXbEeyM1pVz1DWtJA" x="498" y="138" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_jXNsACXbEeyM1pVz1DWtJA" type="3027" element="_jXL3HSXbEeyM1pVz1DWtJA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_jXNsASXbEeyM1pVz1DWtJA" type="5017" element="_jXL3HSXbEeyM1pVz1DWtJA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNsAiXbEeyM1pVz1DWtJA" x="688" y="56" width="124" height="62"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_jXNsAyXbEeyM1pVz1DWtJA" type="3062" element="_jXMdyCXbEeyM1pVz1DWtJA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_jXNsBCXbEeyM1pVz1DWtJA" type="5090" element="_jXMdyCXbEeyM1pVz1DWtJA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsBSXbEeyM1pVz1DWtJA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNsBiXbEeyM1pVz1DWtJA" x="840" y="165" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_jXNsByXbEeyM1pVz1DWtJA" type="3062" element="_jXMdzCXbEeyM1pVz1DWtJA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_jXNsCCXbEeyM1pVz1DWtJA" type="5090" element="_jXMdzCXbEeyM1pVz1DWtJA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsCSXbEeyM1pVz1DWtJA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNsCiXbEeyM1pVz1DWtJA" x="855" y="72" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_jXNsCyXbEeyM1pVz1DWtJA" type="3008" element="_jXMd0CXbEeyM1pVz1DWtJA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_jXNsDCXbEeyM1pVz1DWtJA" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsDSXbEeyM1pVz1DWtJA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNsDiXbEeyM1pVz1DWtJA" x="327" y="103"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_jXNsDyXbEeyM1pVz1DWtJA" type="3027" element="_jXMd1CXbEeyM1pVz1DWtJA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_jXNsECXbEeyM1pVz1DWtJA" type="5017" element="_jXMd1CXbEeyM1pVz1DWtJA"/>
              <children xmi:type="notation:Shape" xmi:id="_jXNsESXbEeyM1pVz1DWtJA" type="3032" element="_jXMeEiXbEeyM1pVz1DWtJA" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_jXNsEiXbEeyM1pVz1DWtJA" type="5062" element="_jXMeEiXbEeyM1pVz1DWtJA">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsEyXbEeyM1pVz1DWtJA" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNsFCXbEeyM1pVz1DWtJA" x="250" y="215"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNsFSXbEeyM1pVz1DWtJA" x="160" y="198" width="120" height="60"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_jXNsFiXbEeyM1pVz1DWtJA"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_jXNsFyXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_jXNsGCXbEeyM1pVz1DWtJA"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_jXNsGSXbEeyM1pVz1DWtJA"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNsGiXbEeyM1pVz1DWtJA" x="23" y="10" width="1657" height="343"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_jXNsGyXbEeyM1pVz1DWtJA"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsHCXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_jXNsHSXbEeyM1pVz1DWtJA"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_jXNsHiXbEeyM1pVz1DWtJA"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_jXNsHyXbEeyM1pVz1DWtJA" width="1680" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_jXNsICXbEeyM1pVz1DWtJA"/>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsISXbEeyM1pVz1DWtJA" type="4001" element="_jXMeUCXbEeyM1pVz1DWtJA" source="_jXNr5yXbEeyM1pVz1DWtJA" target="_jXNr6yXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsIiXbEeyM1pVz1DWtJA" type="6001" element="_jXMeUCXbEeyM1pVz1DWtJA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsIyXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsJCXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsJSXbEeyM1pVz1DWtJA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsJiXbEeyM1pVz1DWtJA" type="4001" element="_jXMeUyXbEeyM1pVz1DWtJA" source="_jXNsCyXbEeyM1pVz1DWtJA" target="_jXNr8iXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsJyXbEeyM1pVz1DWtJA" type="6001" element="_jXMeUyXbEeyM1pVz1DWtJA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsKCXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsKSXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsKiXbEeyM1pVz1DWtJA" points="[-12, -26, -174, 24]$[-12, -44, -174, 6]$[141, -44, -21, 6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsKyXbEeyM1pVz1DWtJA" id="(0.7674418604651163,0.6046511627906976)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsLCXbEeyM1pVz1DWtJA" id="(0.18421052631578946,0.43859649122807015)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsLSXbEeyM1pVz1DWtJA" type="4001" element="_jXMeViXbEeyM1pVz1DWtJA" source="_jXNr8iXbEeyM1pVz1DWtJA" target="_jXNsACXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsLiXbEeyM1pVz1DWtJA" type="6001" element="_jXMeViXbEeyM1pVz1DWtJA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsLyXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsMCXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsMSXbEeyM1pVz1DWtJA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsMiXbEeyM1pVz1DWtJA" type="4001" element="_jXMeWSXbEeyM1pVz1DWtJA" source="_jXNr7SXbEeyM1pVz1DWtJA" target="_jXNr-SXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsMyXbEeyM1pVz1DWtJA" type="6001" element="_jXMeWSXbEeyM1pVz1DWtJA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsNCXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsNSXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsNiXbEeyM1pVz1DWtJA" points="[0, 0, -157, -40]$[147, 41, -10, 1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsNyXbEeyM1pVz1DWtJA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsOCXbEeyM1pVz1DWtJA" id="(0.08771929824561403,0.631578947368421)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsOSXbEeyM1pVz1DWtJA" type="4001" element="_jXMeXCXbEeyM1pVz1DWtJA" source="_jXNr-SXbEeyM1pVz1DWtJA" target="_jXNsAyXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsOiXbEeyM1pVz1DWtJA" type="6001" element="_jXMeXCXbEeyM1pVz1DWtJA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsOyXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsPCXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsPSXbEeyM1pVz1DWtJA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsPiXbEeyM1pVz1DWtJA" type="4001" element="_jXMeXyXbEeyM1pVz1DWtJA" source="_jXNsCyXbEeyM1pVz1DWtJA" target="_jXNr-SXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsPyXbEeyM1pVz1DWtJA" type="6001" element="_jXMeXyXbEeyM1pVz1DWtJA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsQCXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsQSXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsQiXbEeyM1pVz1DWtJA" points="[0, 4, -120, -35]$[0, 39, -120, 0]$[120, 39, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsQyXbEeyM1pVz1DWtJA" id="(0.7674418604651163,0.20930232558139536)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsRCXbEeyM1pVz1DWtJA" id="(0.0,0.24561403508771928)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsRSXbEeyM1pVz1DWtJA" type="4001" element="_jXMeYyXbEeyM1pVz1DWtJA" source="_jXNsACXbEeyM1pVz1DWtJA" target="_jXNsByXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsRiXbEeyM1pVz1DWtJA" type="6001" element="_jXMeYyXbEeyM1pVz1DWtJA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsRyXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsSCXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsSSXbEeyM1pVz1DWtJA" points="[0, -3, -98, 0]$[92, -5, -6, -2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsSiXbEeyM1pVz1DWtJA" id="(1.0,0.4838709677419355)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsSyXbEeyM1pVz1DWtJA" id="(0.2,0.43333333333333335)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsTCXbEeyM1pVz1DWtJA" type="4001" element="_jXMeZiXbEeyM1pVz1DWtJA" source="_jXNr9CXbEeyM1pVz1DWtJA" target="_jXNsACXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsTSXbEeyM1pVz1DWtJA" type="6001" element="_jXMeZiXbEeyM1pVz1DWtJA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsTiXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsTyXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsUCXbEeyM1pVz1DWtJA" points="[0, -25, -213, -49]$[0, -48, -213, -72]$[257, -48, 44, -72]$[257, -8, 44, -32]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsUSXbEeyM1pVz1DWtJA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsUiXbEeyM1pVz1DWtJA" id="(0.14516129032258066,0.5161290322580645)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsUyXbEeyM1pVz1DWtJA" type="4001" element="_jXMeaSXbEeyM1pVz1DWtJA" source="_jXNr-yXbEeyM1pVz1DWtJA" target="_jXNsAyXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsVCXbEeyM1pVz1DWtJA" type="6001" element="_jXMeaSXbEeyM1pVz1DWtJA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsVSXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsViXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsVyXbEeyM1pVz1DWtJA" points="[0, -2, -163, 43]$[163, -2, 0, 43]$[163, -31, 0, 14]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsWCXbEeyM1pVz1DWtJA" id="(1.0,1.0)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsWSXbEeyM1pVz1DWtJA" type="4001" element="_jXMebCXbEeyM1pVz1DWtJA" source="_jXNr6yXbEeyM1pVz1DWtJA" target="_jXNsCyXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsWiXbEeyM1pVz1DWtJA" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsWyXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsXCXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsXSXbEeyM1pVz1DWtJA" points="[0, 6, -52, -33]$[28, 6, -24, -33]$[28, 33, -24, -6]$[47, 33, -5, -6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsXiXbEeyM1pVz1DWtJA" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsXyXbEeyM1pVz1DWtJA" id="(0.11627906976744186,0.627906976744186)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsYCXbEeyM1pVz1DWtJA" type="4001" element="_jXMebyXbEeyM1pVz1DWtJA" source="_jXNsDyXbEeyM1pVz1DWtJA" target="_jXNsCyXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsYSXbEeyM1pVz1DWtJA" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsYiXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsYyXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsZCXbEeyM1pVz1DWtJA" points="[0, -2, -56, 94]$[28, -2, -28, 94]$[28, -96, -28, 0]$[55, -96, -1, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsZSXbEeyM1pVz1DWtJA" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsZiXbEeyM1pVz1DWtJA" id="(0.20930232558139536,0.6976744186046512)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsZyXbEeyM1pVz1DWtJA" type="4001" element="_jXMeciXbEeyM1pVz1DWtJA" source="_jXNsESXbEeyM1pVz1DWtJA" target="_jXNr-SXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsaCXbEeyM1pVz1DWtJA" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNsaSXbEeyM1pVz1DWtJA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNsaiXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsayXbEeyM1pVz1DWtJA" points="[0, -13, -230, 75]$[97, -13, -133, 75]$[97, -96, -133, -8]$[226, -96, -4, -8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsbCXbEeyM1pVz1DWtJA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsbSXbEeyM1pVz1DWtJA" id="(0.03508771929824561,0.8596491228070176)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_jXNsbiXbEeyM1pVz1DWtJA" type="4001" element="_jXMedSXbEeyM1pVz1DWtJA" source="_jXNr5yXbEeyM1pVz1DWtJA" target="_jXNsDyXbEeyM1pVz1DWtJA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_jXNsbyXbEeyM1pVz1DWtJA" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_jXNscCXbEeyM1pVz1DWtJA" x="14" y="-44"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_jXNscSXbEeyM1pVz1DWtJA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_jXNsciXbEeyM1pVz1DWtJA" points="[-15, -1, -89, -139]$[-15, 129, -89, -9]$[70, 129, -4, -9]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNscyXbEeyM1pVz1DWtJA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_jXNsdCXbEeyM1pVz1DWtJA" id="(0.03333333333333333,0.6333333333333333)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
