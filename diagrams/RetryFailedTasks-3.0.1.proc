<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_I7owAAnDEeyeMc5IFmmFhg" name="RetryFailedTasks" version="3.0.1" author="C6754557" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004" configId="ACED000574002052657472794661696C65645461736B73372E382E332D303031372E382E347370">
    <elements xmi:type="process:Pool" xmi:id="_I7owAQnDEeyeMc5IFmmFhg" name="MonitorFailedTasks" version="3.0.1">
      <elements xmi:type="process:Lane" xmi:id="_I7owAgnDEeyeMc5IFmmFhg" name="Service Lane" actor="_I7rzZAnDEeyeMc5IFmmFhg">
        <elements xmi:type="process:StartEvent" xmi:id="_I7owAwnDEeyeMc5IFmmFhg" name="Manual Start" outgoing="_I7rMgAnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7owBAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7owBQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7owBgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7pXEAnDEeyeMc5IFmmFhg" name="Set Manual Start" outgoing="_I7rMgwnDEeyeMc5IFmmFhg" incoming="_I7rMgAnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7pXEQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7pXEgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7pXEwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <operations xmi:type="expression:Operation" xmi:id="_I7pXFAnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7pXFQnDEeyeMc5IFmmFhg" name="manualStart" content="manualStart" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
              <referencedElements xmi:type="process:Data" xmi:id="_I7pXFgnDEeyeMc5IFmmFhg" name="manualStart" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7pXFwnDEeyeMc5IFmmFhg" name="true" content="true" returnType="java.lang.Boolean"/>
            <operator xmi:type="expression:Operator" xmi:id="_I7pXGAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7pXGQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7pXGgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7pXGwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7pXHAnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7pXHQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:StartTimerEvent" xmi:id="_I7pXHgnDEeyeMc5IFmmFhg" name="Scheduled Start" outgoing="_I7rMlAnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7pXHwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7pXIAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7pXIQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <condition xmi:type="expression:Expression" xmi:id="_I7pXIgnDEeyeMc5IFmmFhg" name="setCronExpr" content="def String hours_list = String.valueOf(monitoringTimeStartHour);&#xD;&#xA;&#xD;&#xA;def int cycle_start = monitoringTimeStartHour;&#xD;&#xA;while (cycle_start &lt; monitoringTimeEndHour) {&#xD;&#xA;&#x9;cycle_start += monitorInstanceDurationInHours;&#xD;&#xA;&#x9;if (cycle_start&lt;monitoringTimeEndHour) {&#xD;&#xA;&#x9;&#x9;hours_list += &quot;,&quot; + String.valueOf(cycle_start);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def String cron_expr = &quot;0 0 &quot; + hours_list + &quot; ? * &quot; + monitoringDays +&quot; *&quot;;&#xD;&#xA;return cron_expr;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7pXIwnDEeyeMc5IFmmFhg" name="monitoringTimeStartHour" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7pXJAnDEeyeMc5IFmmFhg" name="monitoringTimeEndHour" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7pXJQnDEeyeMc5IFmmFhg" name="monitoringDays" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7pXJgnDEeyeMc5IFmmFhg" name="monitorInstanceDurationInHours" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
          </condition>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7pXJwnDEeyeMc5IFmmFhg" name="Log job Start" outgoing="_I7rMhgnDEeyeMc5IFmmFhg" incoming="_I7rMgwnDEeyeMc5IFmmFhg _I7rMlAnDEeyeMc5IFmmFhg _I7rzWAnDEeyeMc5IFmmFhg _I7rzWwnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7pXKAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7pXKQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7pXKgnDEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="return &quot;Monitoring cycle started at &quot; + monitoringCycleStart.toString(); " interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_I7pXKwnDEeyeMc5IFmmFhg" name="monitoringCycleStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
          </stepSummary>
          <operations xmi:type="expression:Operation" xmi:id="_I7pXLAnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7pXLQnDEeyeMc5IFmmFhg" name="monitoringCycleStart" content="monitoringCycleStart" type="TYPE_VARIABLE" returnType="java.time.OffsetDateTime">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_I7pXLgnDEeyeMc5IFmmFhg" name="monitoringCycleStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7pXLwnDEeyeMc5IFmmFhg" name="SetTimeNow" content="import java.time.OffsetDateTime&#xD;&#xA;&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
            <operator xmi:type="expression:Operator" xmi:id="_I7pXMAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7pXMQnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7pXMgnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7pXMwnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7pXNAnDEeyeMc5IFmmFhg" name="createLogTasksMonitoring" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogTasksMonitoring;&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;LogTasksMonitoring job_log = null;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;job_log = new LogTasksMonitoring();&#xD;&#xA;&#x9;job_log.isRunning = true;&#xD;&#xA;&#x9;job_log.monitoringCaseId = rootProcessInstanceId;&#xD;&#xA;&#x9;job_log.startTime = monitoringCycleStart;&#xD;&#xA;&#x9;job_log.status = statusLogMonitoringStarted;&#xD;&#xA;&#x9;job_log.isManual = manualStart;&#xD;&#xA;&#x9;job_log.nbFailedTasksPassed = 0;&#xD;&#xA;&#x9;job_log.nbFailedTasksRetried = 0;&#xD;&#xA;&#x9;job_log.nbNewFailedTasksDetected = 0;&#xD;&#xA;&#x9;job_log.nbRetryingTasks = 0;&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;createLogTasksMonitoring&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return job_log;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7pXNQnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
              <referencedElements xmi:type="process:Data" xmi:id="_I7pXNgnDEeyeMc5IFmmFhg" name="manualStart" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_I7pXNwnDEeyeMc5IFmmFhg" name="rootProcessInstanceId" content="rootProcessInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_I7pXOAnDEeyeMc5IFmmFhg" name="monitoringCycleStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7pXOQnDEeyeMc5IFmmFhg" name="statusLogMonitoringStarted" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7pXOgnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7pXOwnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7pXPAnDEeyeMc5IFmmFhg" name="nextMonitoringCycleStart" content="nextMonitoringCycleStart" type="TYPE_VARIABLE" returnType="java.time.OffsetDateTime">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_I7pXPQnDEeyeMc5IFmmFhg" name="nextMonitoringCycleStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7p-IAnDEeyeMc5IFmmFhg" name="setNextMonitoringCycleStart" content="return monitoringCycleStart.plusMinutes(monitoringIntervalInMinutes);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7p-IQnDEeyeMc5IFmmFhg" name="monitoringIntervalInMinutes" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_I7p-IgnDEeyeMc5IFmmFhg" name="monitoringCycleStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7p-IwnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7p-JAnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7p-JQnDEeyeMc5IFmmFhg" name="jobError" content="jobError" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_I7p-JgnDEeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7p-JwnDEeyeMc5IFmmFhg" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
            <operator xmi:type="expression:Operator" xmi:id="_I7p-KAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7p-KQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7p-KgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7p-KwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7p-LAnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7p-LQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7p-LgnDEeyeMc5IFmmFhg" name="Check Running Jobs" outgoing="_I7rMiQnDEeyeMc5IFmmFhg _I7rMlwnDEeyeMc5IFmmFhg" incoming="_I7rMhgnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7p-LwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7p-MAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7p-MQnDEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="if (isAlreadyRunning) {&#xD;&#xA;&#x9;return &quot;Another monitoring job is already running&quot;;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return &quot;Found no other monitoring job currently running&quot;;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_I7p-MgnDEeyeMc5IFmmFhg" name="isAlreadyRunning" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </stepSummary>
          <data xmi:type="process:Data" xmi:id="_I7p-MwnDEeyeMc5IFmmFhg" name="isAlreadyRunning" dataType="_I7r14wnDEeyeMc5IFmmFhg">
            <defaultValue xmi:type="expression:Expression" xmi:id="_I7p-NAnDEeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean"/>
          </data>
          <operations xmi:type="expression:Operation" xmi:id="_I7p-NQnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7p-NgnDEeyeMc5IFmmFhg" name="isAlreadyRunning" content="isAlreadyRunning" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
              <referencedElements xmi:type="process:Data" xmi:id="_I7p-NwnDEeyeMc5IFmmFhg" name="isAlreadyRunning" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7p-OAnDEeyeMc5IFmmFhg" name="setIsAlreadyRunning" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import java.time.OffsetDateTime&#xD;&#xA;import java.time.temporal.ChronoUnit&#xD;&#xA;import java.time.temporal.Temporal&#xD;&#xA;import com.sgdbf.model.LogTasksMonitoring;&#xD;&#xA;&#xD;&#xA;def boolean is_running = false;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Search existing running jobs&#xD;&#xA;&#x9;def List&lt;LogTasksMonitoring> running_jobs = logTasksMonitoringDAO.findByIsRunning(true, 0, 10);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;if (running_jobs == null) {&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;setIsAlreadyRunning&quot;, &quot;List of existing jobs is null&quot;);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;setIsAlreadyRunning&quot;, &quot;Found &quot;  + String.valueOf(running_jobs.size()) + &quot; running jobs&quot;);&#xD;&#xA;&#x9;&#x9;for (LogTasksMonitoring one_job : running_jobs) {&#xD;&#xA;&#x9;&#x9;&#x9;if (one_job.monitoringCaseId != rootProcessInstanceId) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Check how long it has been running : ignore if more than 10 minutes&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def OffsetDateTime job_start = one_job.startTime;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def long job_duration = job_start.until(OffsetDateTime.now(), ChronoUnit.MINUTES);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (job_duration >= 10) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;log_file.info(&quot;setIsAlreadyRunning&quot;, &quot;Running job started on [&quot; + job_start.toString() + &quot;] has been running for too long (&quot; + String.valueOf(job_duration) + &quot; minutes), ignoring it&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;log_file.info(&quot;setIsAlreadyRunning&quot;, &quot;Found one running job started on [&quot; + job_start.toString() + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;is_running = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;log_file.info(&quot;setIsAlreadyRunning&quot;,&quot;Job already running = &quot; + String.valueOf(is_running));&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsAlreadyRunning&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return is_running;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
              <referencedElements xmi:type="expression:Expression" xmi:id="_I7p-OQnDEeyeMc5IFmmFhg" name="logTasksMonitoringDAO" content="logTasksMonitoringDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.LogTasksMonitoringDAO" returnTypeFixed="true"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_I7p-OgnDEeyeMc5IFmmFhg" name="rootProcessInstanceId" content="rootProcessInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7p-OwnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7p-PAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7p-PQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7p-PgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7p-PwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7p-QAnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7p-QQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7p-QgnDEeyeMc5IFmmFhg" name="Abort job" outgoing="_I7rMjQnDEeyeMc5IFmmFhg" incoming="_I7rMiQnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7p-QwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7p-RAnDEeyeMc5IFmmFhg" name="Aborting current monitoring job due to another running instance" content="Aborting current monitoring job due to another running instance" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7p-RQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <operations xmi:type="expression:Operation" xmi:id="_I7p-RgnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7p-RwnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7p-SAnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7p-SQnDEeyeMc5IFmmFhg" name="false" content="return false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean"/>
            <operator xmi:type="expression:Operator" xmi:id="_I7p-SgnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setIsRunning">
              <inputTypes>java.lang.Boolean</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7p-SwnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7p-TAnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7p-TQnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7p-TgnDEeyeMc5IFmmFhg" name="statusLogMonitoringAborted" content="statusLogMonitoringAborted" type="TYPE_PARAMETER">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7p-TwnDEeyeMc5IFmmFhg" name="statusLogMonitoringAborted" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7p-UAnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setStatus">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7p-UQnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7p-UgnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7p-UwnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7p-VAnDEeyeMc5IFmmFhg" name="setEndTime" content="import java.time.OffsetDateTime&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
            <operator xmi:type="expression:Operator" xmi:id="_I7p-VQnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setEndTime">
              <inputTypes>java.time.OffsetDateTime</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7p-VgnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7p-VwnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7p-WAnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7p-WQnDEeyeMc5IFmmFhg" name="setAbortErrorMessage" content="return &quot;Aborting this job as another one is still running&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
            <operator xmi:type="expression:Operator" xmi:id="_I7p-WgnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setErrorMessage">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7p-WwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7p-XAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7p-XQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7p-XgnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7p-XwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndEvent" xmi:id="_I7p-YAnDEeyeMc5IFmmFhg" name="End Manual Job" incoming="_I7rMkAnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7p-YQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7p-YgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7p-YwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_I7p-ZAnDEeyeMc5IFmmFhg" name="Is manual job ?" outgoing="_I7rMkAnDEeyeMc5IFmmFhg _I7rMqwnDEeyeMc5IFmmFhg" incoming="_I7rMjQnDEeyeMc5IFmmFhg _I7rMsQnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7p-ZQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7p-ZgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7p-ZwnDEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="def String desc=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;if (manualStart) {&#xD;&#xA;&#x9;desc = &quot;This is a manual job, terminating it&quot;;&#xD;&#xA;} else {&#xD;&#xA;&#x9;desc = &quot;This is a scheduled job&quot;;&#xD;&#xA;}&#xD;&#xA;return desc;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_I7p-aAnDEeyeMc5IFmmFhg" name="manualStart" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </stepSummary>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7p-aQnDEeyeMc5IFmmFhg" name="Check Monitoring Job end" outgoing="_I7rzUwnDEeyeMc5IFmmFhg _I7rzWwnDEeyeMc5IFmmFhg _I7rzYAnDEeyeMc5IFmmFhg" incoming="_I7rMqwnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7p-agnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7p-awnDEeyeMc5IFmmFhg" name="Checking if we keep the same monitoring instance" content="Checking if we keep the same monitoring instance" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7p-bAnDEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="def String desc =&quot;&quot;;&#xD;&#xA;if (reachedMonitoringInstanceEnd) {&#xD;&#xA;&#x9;desc = &quot;We have reached the monitoring instance end&quot;;&#xD;&#xA;} else {&#xD;&#xA;&#x9;desc = &quot;Keeping the same monitoring instance&quot;;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_I7p-bQnDEeyeMc5IFmmFhg" name="reachedMonitoringInstanceEnd" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </stepSummary>
          <data xmi:type="process:Data" xmi:id="_I7p-bgnDEeyeMc5IFmmFhg" name="reachedMonitoringInstanceEnd" dataType="_I7r14wnDEeyeMc5IFmmFhg">
            <defaultValue xmi:type="expression:Expression" xmi:id="_I7p-bwnDEeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_I7p-cAnDEeyeMc5IFmmFhg" name="checkMonitoringInstanceEnd" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_I7p-cQnDEeyeMc5IFmmFhg" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7p-cgnDEeyeMc5IFmmFhg" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_I7p-cwnDEeyeMc5IFmmFhg" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7p-dAnDEeyeMc5IFmmFhg" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7p-dQnDEeyeMc5IFmmFhg" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_I7p-dgnDEeyeMc5IFmmFhg" name="checkMonitoringInstanceEnd" content="import com.sgdbf.pop3p.groovy.LocaleUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import java.time.OffsetDateTime&#xD;&#xA;import java.time.temporal.ChronoUnit&#xD;&#xA;&#xD;&#xA;def boolean is_ended = false;&#xD;&#xA;def boolean is_end_of_day=false;&#xD;&#xA;def long delay_before_next_cycle_seconds = 0;&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Check the delay before next monitoring cycle&#xD;&#xA;&#x9;def OffsetDateTime time_now = OffsetDateTime.now(LocaleUtility.getLocalZoneId());&#xD;&#xA;&#x9;def OffsetDateTime real_next_cycle_start = nextMonitoringCycleStart;&#xD;&#xA;&#x9;if (nextMonitoringCycleStart.isAfter(time_now)) {&#xD;&#xA;&#x9;&#x9;delay_before_next_cycle_seconds = time_now.until(nextMonitoringCycleStart, ChronoUnit.SECONDS);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// Theoretical time already passed, we will start right now&#xD;&#xA;&#x9;&#x9;real_next_cycle_start = time_now;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check if the next cycle is after the max duration of current monitoring instance&#xD;&#xA;&#x9;def OffsetDateTime monitoring_instance_end = monitoringInstanceStart.plusHours(monitorInstanceDurationInHours);&#xD;&#xA;&#x9;if (real_next_cycle_start.isAfter(monitoring_instance_end)) {&#xD;&#xA;&#x9;&#x9;is_ended = true;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;checkMonitoringInstanceEnd&quot;, &quot;Next monitoring cycle at [&quot; +  real_next_cycle_start.toString() + &quot;] is after the monitoring instance duration expires (&quot; + monitoring_instance_end.toString() + &quot;)&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check if the next cycle is after the daily monitoring hour end&#xD;&#xA;&#x9;def int next_cycle_hour = real_next_cycle_start.getHour();&#xD;&#xA;&#x9;if (next_cycle_hour >= monitoringTimeEndHour) {&#xD;&#xA;&#x9;&#x9;is_ended = true;&#xD;&#xA;&#x9;&#x9;is_end_of_day = true;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;checkMonitoringInstanceEnd&quot;, &quot;Next monitoring cycle at [&quot; +  next_cycle_hour.toString() + &quot;] is after the monitoring end hour (&quot; + String.valueOf(monitoringTimeEndHour) + &quot; h)&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;checkMonitoringInstanceEnd&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return [reachedMonitoringInstanceEnd : is_ended, delayBeforeNextMonitoringCycleInSeconds: delay_before_next_cycle_seconds, isEndOfDailyMonitoring: is_end_of_day];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oYKe0AtkEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oYKe0QtkEeyeMc5IFmmFhg" name="monitoringInstanceStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oYKe0gtkEeyeMc5IFmmFhg" name="monitoringTimeEndHour" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oYKe0wtkEeyeMc5IFmmFhg" name="nextMonitoringCycleStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_oYKe1AtkEeyeMc5IFmmFhg" name="monitorInstanceDurationInHours" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_I7p-fAnDEeyeMc5IFmmFhg">
              <leftOperand xmi:type="expression:Expression" xmi:id="_I7p-fQnDEeyeMc5IFmmFhg" name="delayBeforeNextMonitoringCycleInSeconds" content="delayBeforeNextMonitoringCycleInSeconds" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_I7p-fgnDEeyeMc5IFmmFhg" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_I7p-fwnDEeyeMc5IFmmFhg" name="result" content="return result[&quot;delayBeforeNextMonitoringCycleInSeconds&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="definition:Output" xmi:id="_I7p-gAnDEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_I7p-gQnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_I7p-ggnDEeyeMc5IFmmFhg">
              <leftOperand xmi:type="expression:Expression" xmi:id="_I7p-gwnDEeyeMc5IFmmFhg" name="reachedMonitoringInstanceEnd" content="reachedMonitoringInstanceEnd" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_I7p-hAnDEeyeMc5IFmmFhg" name="reachedMonitoringInstanceEnd" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_I7p-hQnDEeyeMc5IFmmFhg" name="result" content="return result[&quot;reachedMonitoringInstanceEnd&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="definition:Output" xmi:id="_I7p-hgnDEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_I7p-hwnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_mJUe8AszEeyeMc5IFmmFhg">
              <leftOperand xmi:type="expression:Expression" xmi:id="_mJUe8QszEeyeMc5IFmmFhg" name="isEndOfDailyMonitoring" content="isEndOfDailyMonitoring" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_mJUe8gszEeyeMc5IFmmFhg" documentation="True when we reached the end of daily monitoring" name="isEndOfDailyMonitoring" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_mJUe8wszEeyeMc5IFmmFhg" name="isEndOfDailyMonitoring" content="return result[&quot;isEndOfDailyMonitoring&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="definition:Output" xmi:id="_mJUe9AszEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_mJUe9QszEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7p-iAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7p-iQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7p-ignDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7p-iwnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7p-jAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7qlMAnDEeyeMc5IFmmFhg" name="Check Existing Failed Tasks" outgoing="_I7rMmgnDEeyeMc5IFmmFhg" incoming="_I7rMlwnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7qlMQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7qlMgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7qlMwnDEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="return &quot;Found &quot; + String.valueOf(nbExistingTasks) + &quot; existing failed tasks to retry now&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_I7qlNAnDEeyeMc5IFmmFhg" name="nbExistingTasks" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
          </stepSummary>
          <operations xmi:type="expression:Operation" xmi:id="_I7qlNQnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlNgnDEeyeMc5IFmmFhg" name="existingFailedTasks" content="existingFailedTasks" type="TYPE_VARIABLE" returnType="java.util.List">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qlNwnDEeyeMc5IFmmFhg" name="existingFailedTasks" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlOAnDEeyeMc5IFmmFhg" name="CheckExistingFailedTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;&#xD;&#xA;def List&lt;LogFailedTasks> existing_tasks = null;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;log_file.debug(&quot;CheckExistingFailedTasks&quot;, &quot;Searching for existing failed tasks to retry&quot;);&#xD;&#xA;&#x9;existing_tasks = logFailedTasksDAO.findFailedTasksToRetryNow(0, maxNumberOfRetriedTasksPerCycle);&#xD;&#xA;&#x9;log_file.info(&quot;CheckExistingFailedTasks&quot;, &quot;Found &quot; + String.valueOf(existing_tasks.size()) + &quot; existing failed tasks to retry&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;CheckExistingFailedTasks&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return existing_tasks;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="expression:Expression" xmi:id="_I7qlOQnDEeyeMc5IFmmFhg" name="logFailedTasksDAO" content="logFailedTasksDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.LogFailedTasksDAO" returnTypeFixed="true"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qlOgnDEeyeMc5IFmmFhg" name="maxNumberOfRetriedTasksPerCycle" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qlOwnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7qlPAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7qlPQnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlPgnDEeyeMc5IFmmFhg" name="nbExistingTasks" content="nbExistingTasks" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_I7qlPwnDEeyeMc5IFmmFhg" name="nbExistingTasks" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlQAnDEeyeMc5IFmmFhg" name="setNbRetryingTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_retrying=0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (existingFailedTasks != null) {&#xD;&#xA;&#x9;&#x9;nb_retrying = existingFailedTasks.size();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;log_file.debug(&quot;setNbRetryingTasks&quot;, &quot;Found &quot; + String.valueOf(nb_retrying) + &quot; existing failed tasks to retry&quot;);&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setNbRetryingTasks&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return nb_retrying;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qlQQnDEeyeMc5IFmmFhg" name="existingFailedTasks" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qlQgnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Name of class showing in logs"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7qlQwnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7qlRAnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlRQnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qlRgnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlRwnDEeyeMc5IFmmFhg" name="nbExistingTasks" content="nbExistingTasks" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_I7qlSAnDEeyeMc5IFmmFhg" name="nbExistingTasks" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7qlSQnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setNbRetryingTasks">
              <inputTypes>java.lang.Integer</inputTypes>
            </operator>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7qlSgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7qlSwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7qlTAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7qlTQnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7qlTgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7qlTwnDEeyeMc5IFmmFhg" name="Detect new failed tasks" outgoing="_I7rMognDEeyeMc5IFmmFhg" incoming="_I7rMmgnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7qlUAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7qlUQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7qlUgnDEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="return &quot;Detected &quot; + String.valueOf(nbNewTasksDetected) + &quot; new failed tasks&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_I7qlUwnDEeyeMc5IFmmFhg" name="nbNewTasksDetected" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
          </stepSummary>
          <connectors xmi:type="process:Connector" xmi:id="_I7qlVAnDEeyeMc5IFmmFhg" name="detectNewFailedTasks" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_I7qlVQnDEeyeMc5IFmmFhg" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7qlVgnDEeyeMc5IFmmFhg" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_I7qlVwnDEeyeMc5IFmmFhg" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7qlWAnDEeyeMc5IFmmFhg" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7qlWQnDEeyeMc5IFmmFhg" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_I7qlWgnDEeyeMc5IFmmFhg" name="detectNewFailedTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import java.time.OffsetDateTime;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;import java.util.HashSet;&#xD;&#xA;&#xD;&#xA;import com.bonitasoft.engine.api.ProcessAPI;&#xD;&#xA;import com.bonitasoft.engine.api.LogAPI;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorInstance;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorInstanceWithFailureInfo&#xD;&#xA;import org.bonitasoft.engine.search.Order;&#xD;&#xA;import org.bonitasoft.engine.search.SearchOptions;&#xD;&#xA;import org.bonitasoft.engine.search.SearchOptionsBuilder;&#xD;&#xA;import org.bonitasoft.engine.search.SearchResult;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityInstance;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityInstanceSearchDescriptor;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import org.bonitasoft.engine.bpm.process.ProcessDefinition;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorInstancesSearchDescriptor;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorState;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.FlowNodeType;&#xD;&#xA;&#xD;&#xA;def List&lt;LogFailedTasks> detected_failed_tasks = [];&#xD;&#xA;def String job_error = &quot;&quot;;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Set minimum date for oldest task searched&#xD;&#xA;&#x9;def OffsetDateTime time_now = OffsetDateTime.now();&#xD;&#xA;&#x9;def OffsetDateTime oldest_task_date = time_now.minusDays(oldestNewTaskDetectedInDays);&#xD;&#xA;&#x9;def Long oldest_task_timestamp_value = oldest_task_date.toEpochSecond() * 1000L;&#x9;// Number of milliseconds since 01/01/1970&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Search failed tasks : Automatic tasks in FAILED state&#xD;&#xA;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;Searching for new Automatic failed tasks since [&quot; + oldest_task_date.toString() + &quot;]&quot;);&#xD;&#xA;&#x9;def ProcessAPI process_api = apiAccessor.getProcessAPI();&#xD;&#xA;&#x9;List&lt;ActivityInstance> list_activities = searchFailedTasksOfType(FlowNodeType.AUTOMATIC_TASK, oldest_task_timestamp_value, maxNumberOfRetriedTasksPerCycle, process_api, log_file);&#xD;&#xA;&#x9;def int nb_automatic_tasks = list_activities.size();&#xD;&#xA;&#x9;if (nb_automatic_tasks &lt; maxNumberOfRetriedTasksPerCycle) {&#xD;&#xA;&#x9;&#x9;// Add failed Human task if any&#xD;&#xA;&#x9;&#x9;List&lt;ActivityInstance> list_activities_human = searchFailedTasksOfType(FlowNodeType.HUMAN_TASK, oldest_task_timestamp_value, maxNumberOfRetriedTasksPerCycle - nb_automatic_tasks, process_api, log_file);&#xD;&#xA;&#x9;&#x9;if (list_activities_human.size() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;list_activities.addAll(list_activities_human);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;We have already the max number of failed tasks (&quot; + String.valueOf(nb_automatic_tasks) + &quot;), do not search for human tasks&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (list_activities.size() > 0) {&#xD;&#xA;&#x9;&#x9;// Get the list of existing tasks ids&#xD;&#xA;&#x9;&#x9;def Set&lt;Long> existing_tasks_ids = new HashSet();&#xD;&#xA;&#x9;&#x9;for (LogFailedTasks one_failed_task : existingFailedTasks) {&#xD;&#xA;&#x9;&#x9;&#x9;def Long one_existing_task_id = one_failed_task.getTaskId();&#xD;&#xA;&#x9;&#x9;&#x9;existing_tasks_ids.add(one_existing_task_id);&#xD;&#xA;&#x9;&#x9;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;Task &quot; + String.valueOf(one_existing_task_id) + &quot; was already detected&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Check if failed tasks were previously already detected&#xD;&#xA;&#x9;&#x9;for (ActivityInstance one_activity : list_activities) {&#xD;&#xA;&#x9;&#x9;&#x9;def Long failed_task_id = one_activity.id;&#xD;&#xA;&#x9;&#x9;&#x9;if (existing_tasks_ids.contains(failed_task_id)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;Ignoring failed task &quot; + String.valueOf(failed_task_id) + &quot; that was already detected&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def String task_name = one_activity.getName();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;Detected new failed task &quot; + String.valueOf(failed_task_id) + &quot; : &quot; + task_name);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Add new failed task&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def new_failed_task = new LogFailedTasks();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.taskId = failed_task_id;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.taskName = task_name;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.caseId = one_activity.getRootContainerId();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.failureDetectionDate = time_now;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.nextRetryDate = time_now;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.isRetrying = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.nbRetries = 0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.status = one_activity.getState();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Additional query to retrieve process details&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def long process_def_id = one_activity.getProcessDefinitionId();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;Searching process definition &quot; + String.valueOf(process_def_id) + &quot; for task &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def ProcessDefinition process_def = process_api.getProcessDefinition(process_def_id);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.processName = process_def.getName();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.processVersion = process_def.getVersion()&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Search failed connector on activityInstance&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;Searching failed connector for task &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def SearchOptionsBuilder search_connector_options = new SearchOptionsBuilder(0, 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.filter(ConnectorInstancesSearchDescriptor.CONTAINER_ID, failed_task_id)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.filter(ConnectorInstancesSearchDescriptor.STATE, ConnectorState.FAILED.name());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def SearchResult&lt;ConnectorInstance> connector_search_result = process_api.searchConnectorInstances(search_connector_options.done());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def int nb_connectors = connector_search_result.getCount();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (nb_connectors == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;No connector found for task &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ConnectorInstance connectorInstance = connector_search_result.getResult().get(0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def String connector_id = connectorInstance.getConnectorId();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def String connector_name = connectorInstance.getName();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;detecNewFailedTasks&quot;, &quot;Found failed connector [&quot; + connector_name + &quot;] of type [&quot; + connector_id + &quot;] for activityInstance [&quot; + task_name + &quot;] with id &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorId = connectorInstance.getId();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorName = connector_name;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorLastStatus = connectorInstance.getState().name();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorType = connector_id;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Additional query to retrieve details of error&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorError = searchConnectorException(new_failed_task.failedConnectorId, process_api, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Add failed task to the list of new detected tasks&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;detected_failed_tasks.add(new_failed_task);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;detectNewFailedTasks&quot;, e);&#xD;&#xA;&#x9;job_error = &quot;Exception while detecting new failed tasks : &quot; +e.getMessage();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return [newFailedTasksDetected: detected_failed_tasks, jobError: job_error];&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;def List&lt;ActivityInstance> searchFailedTasksOfType(FlowNodeType activity_type, long oldest_task_timestamp_value, int max_number_of_tasks, ProcessAPI process_api, LogFile log_file) {&#xD;&#xA;&#x9;List&lt;ActivityInstance> list_activities = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Build query&#xD;&#xA;&#x9;&#x9;def SearchOptionsBuilder task_search = new SearchOptionsBuilder(0, max_number_of_tasks)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;.filter(ActivityInstanceSearchDescriptor.STATE_NAME, ActivityStates.FAILED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;.filter(ActivityInstanceSearchDescriptor.ACTIVITY_TYPE, activity_type)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;.greaterThan(ActivityInstanceSearchDescriptor.LAST_MODIFICATION_DATE, oldest_task_timestamp_value);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Execute search&#xD;&#xA;&#x9;&#x9;def SearchResult&lt;ActivityInstance> tasks_search_result = process_api.searchActivities(task_search.done())&#xD;&#xA;&#x9;&#x9;def int nb_detected_tasks = tasks_search_result.getCount();&#xD;&#xA;&#x9;&#x9;if (nb_detected_tasks == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;searchFailedTasksOfType&quot;, &quot;Search executed for activity type [&quot; + activity_type.name() + &quot;], no new failed tasks detected&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Get the list of failed activities&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;searchFailedTasksOfType&quot;, &quot;Search executed for activity type [&quot; + activity_type.name() + &quot;], found &quot; + String.valueOf(nb_detected_tasks) + &quot; failed tasks&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;list_activities = tasks_search_result.getResult();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;log_file.exception(&quot;searchFailedTasksOfType&quot;, e);&#xD;&#xA;&#x9;&#x9;throw e;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return list_activities;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def String searchConnectorException(Long failed_connector_id, ProcessAPI process_api, LogFile log_file) {&#xD;&#xA;&#x9;def String connector_error = &quot;&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;searchConnectorException&quot;, &quot;Searching failed connector log for connectorId &quot; + String.valueOf(failed_connector_id));&#xD;&#xA;&#x9;&#x9;ConnectorInstanceWithFailureInfo  failure_info = process_api.getConnectorInstanceWithFailureInformation(failed_connector_id);&#xD;&#xA;&#x9;&#x9;connector_error = failure_info.getExceptionMessage();&#xD;&#xA;&#x9;&#x9;def String stack_trace = failure_info.getStackTrace();&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;searchConnectorException&quot;, &quot;Failed connector message : &quot; + connector_error + &quot; - Stack trace : &quot; + stack_trace);&#xD;&#xA;&#x9;&#x9;if (!stack_trace.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;connector_error += &quot;\n\nStack trace: \n&quot; + stack_trace;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;log_file.exception(&quot;searchConnectorException&quot;, e);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return connector_error;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qlWwnDEeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_I7qlXAnDEeyeMc5IFmmFhg" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qlXQnDEeyeMc5IFmmFhg" name="existingFailedTasks" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qlXgnDEeyeMc5IFmmFhg" name="maxNumberOfRetriedTasksPerCycle" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qlXwnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_I7qlYAnDEeyeMc5IFmmFhg">
              <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlYQnDEeyeMc5IFmmFhg" name="jobError" content="jobError" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_I7qlYgnDEeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlYwnDEeyeMc5IFmmFhg" name="setjobError" content="def String err_msg = &quot;&quot;;&#xD;&#xA;if (! jobError.isEmpty()) {&#xD;&#xA;&#x9;err_msg = jobError + &quot; - &quot;;&#xD;&#xA;}&#xD;&#xA;err_msg += result[&quot;jobError&quot;];&#xD;&#xA;&#xD;&#xA;return err_msg;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:Data" xmi:id="_I7qlZAnDEeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
                <referencedElements xmi:type="definition:Output" xmi:id="_I7qlZQnDEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_I7qlZgnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_I7qlZwnDEeyeMc5IFmmFhg">
              <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlaAnDEeyeMc5IFmmFhg" name="newFailedTasksDetected" content="newFailedTasksDetected" type="TYPE_VARIABLE" returnType="java.util.List">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qlaQnDEeyeMc5IFmmFhg" name="newFailedTasksDetected" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlagnDEeyeMc5IFmmFhg" name="result" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;import com.sgdbf.model.LogFailedTasksDAO;&#xD;&#xA;&#xD;&#xA;def List&lt;LogFailedTasks> detected_tasks = result[&quot;newFailedTasksDetected&quot;];&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;def int nb_tasks = detected_tasks.size();&#xD;&#xA;&#x9;for (int i=nb_tasks - 1; i>=0; i--) {&#xD;&#xA;&#x9;&#x9;// Check unique contraint : we do not record the same taskId and connectorId if already there&#xD;&#xA;&#x9;&#x9;LogFailedTasks one_failed_task = detected_tasks.get(i);&#xD;&#xA;&#x9;&#x9;def Long task_id = one_failed_task.getTaskId();&#xD;&#xA;&#x9;&#x9;def Long case_id = one_failed_task.getCaseId();&#xD;&#xA;&#x9;&#x9;if (duplicateRecordExists(task_id, case_id, logFailedTasksDAO, log_file)) {&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;Ignoring duplicate record for failed task &quot; + String.valueOf(task_id) + &quot; with same caseId &quot; + String.valueOf(case_id));&#xD;&#xA;&#x9;&#x9;&#x9;detected_tasks.removeAt(i);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;Number of detected tasks to create :&quot; + String.valueOf( detected_tasks.size()) + &quot; out of &quot; + String.valueOf(nb_tasks) + &quot; initially in list&quot;);&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;searchConnectorLogError&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return detected_tasks;&#xD;&#xA;&#xD;&#xA;def boolean duplicateRecordExists(Long failed_task_id, Long failed_case_id, LogFailedTasksDAO logFailedTasksDAO, LogFile log_file) {&#xD;&#xA;&#x9;def boolean record_exists = false;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def List&lt;LogFailedTasks> existing_duplicates = logFailedTasksDAO.findByTaskId(failed_task_id, 0, 100);&#xD;&#xA;&#x9;&#x9;if ((existing_duplicates != null) &amp;&amp; (existing_duplicates.size() > 0)) {&#xD;&#xA;&#x9;&#x9;&#x9;for (i=0; i&lt;existing_duplicates.size(); i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LogFailedTasks one_duplicate = existing_duplicates.get(i);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (one_duplicate.caseId == failed_case_id) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;record_exists = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;duplicateRecordExists&quot;, &quot;Existing record with task id=&quot; + String.valueOf(failed_task_id) + &quot; and case id=&quot; + String.valueOf(failed_case_id) + &quot; : &quot; + String.valueOf(record_exists));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;log_file.exception(&quot;duplicateRecordExists&quot;, e);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;return record_exists;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
                <referencedElements xmi:type="definition:Output" xmi:id="_I7qlawnDEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_I7qlbAnDEeyeMc5IFmmFhg" name="logFailedTasksDAO" content="logFailedTasksDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.LogFailedTasksDAO" returnTypeFixed="true"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qlbQnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_I7qlbgnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <operations xmi:type="expression:Operation" xmi:id="_I7qlbwnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlcAnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qlcQnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlcgnDEeyeMc5IFmmFhg" name="nbNewTasksDetected" content="nbNewTasksDetected" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_I7qlcwnDEeyeMc5IFmmFhg" name="nbNewTasksDetected" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7qldAnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setNbNewFailedTasksDetected">
              <inputTypes>java.lang.Integer</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7qldQnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7qldgnDEeyeMc5IFmmFhg" name="nbNewTasksDetected" content="nbNewTasksDetected" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_I7qldwnDEeyeMc5IFmmFhg" name="nbNewTasksDetected" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7qleAnDEeyeMc5IFmmFhg" name="setNbDetectedFailedTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_detected=0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (newFailedTasksDetected != null) {&#xD;&#xA;&#x9;&#x9;nb_detected = newFailedTasksDetected.size();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;log_file.debug(&quot;setNbDetectedFailedTasks&quot;, &quot;Found &quot; + String.valueOf(nb_detected) + &quot; existing failed tasks to retry&quot;);&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setNbDetectedFailedTasks&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return nb_detected;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qleQnDEeyeMc5IFmmFhg" name="newFailedTasksDetected" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qlegnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Name of class showing in logs"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7qlewnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7qlfAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7qlfQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7qlfgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7qlfwnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7qlgAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:CallActivity" xmi:id="_I7qlgQnDEeyeMc5IFmmFhg" name="Retry tasks" outgoing="_I7rMqAnDEeyeMc5IFmmFhg" incoming="_I7rMnQnDEeyeMc5IFmmFhg" type="PARALLEL" collectionDataToMultiInstantiate="_I7rMZwnDEeyeMc5IFmmFhg" outputData="_I7qlhQnDEeyeMc5IFmmFhg" listDataContainingOutputResults="_I7rMeAnDEeyeMc5IFmmFhg" storeOutput="true">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7qlggnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7qlgwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7qlhAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:Data" xmi:id="_I7qlhQnDEeyeMc5IFmmFhg" name="retryResultCode" dataType="_I7r15QnDEeyeMc5IFmmFhg">
            <defaultValue xmi:type="expression:Expression" xmi:id="_I7qlhgnDEeyeMc5IFmmFhg" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer"/>
          </data>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7qlhwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7qliAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7qliQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7qlignDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="com.sgdbf.model.LogFailedTasks" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7qliwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <inputMappings xmi:type="process:InputMapping" xmi:id="_I7qljAnDEeyeMc5IFmmFhg" subprocessTarget="inputFailedTaskPersistenceId">
            <processSource xmi:type="expression:Expression" xmi:id="_I7qljQnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="return String.valueOf(multiInstanceIterator.getPersistenceId());" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qljgnDEeyeMc5IFmmFhg" name="multiInstanceIterator" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
            </processSource>
          </inputMappings>
          <inputMappings xmi:type="process:InputMapping" xmi:id="_I7qljwnDEeyeMc5IFmmFhg" subprocessTarget="delayBetweenRetriesInMinutesArray" assignationType="Data">
            <processSource xmi:type="expression:Expression" xmi:id="_I7qlkAnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutesArray" content="delayBetweenRetriesInMinutesArray" type="TYPE_VARIABLE" returnType="java.util.List">
              <referencedElements xmi:type="process:Data" xmi:id="_I7qlkQnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutesArray" multiple="true" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
            </processSource>
          </inputMappings>
          <inputMappings xmi:type="process:InputMapping" xmi:id="_I7qlkgnDEeyeMc5IFmmFhg" subprocessTarget="inputMaxNumberOfRetries">
            <processSource xmi:type="expression:Expression" xmi:id="_I7qlkwnDEeyeMc5IFmmFhg" name="maxNumberOfRetries" content="maxNumberOfRetries" type="TYPE_PARAMETER" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qllAnDEeyeMc5IFmmFhg" name="maxNumberOfRetries" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
            </processSource>
          </inputMappings>
          <outputMappings xmi:type="process:OutputMapping" xmi:id="_I7qllQnDEeyeMc5IFmmFhg" subprocessSource="retryResultCode" processTarget="_I7qlhQnDEeyeMc5IFmmFhg"/>
          <calledActivityName xmi:type="expression:Expression" xmi:id="_I7qllgnDEeyeMc5IFmmFhg" name="RetryFailedTask" content="RetryFailedTask" returnTypeFixed="true"/>
          <calledActivityVersion xmi:type="expression:Expression" xmi:id="_I7qllwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_I7qlmAnDEeyeMc5IFmmFhg" name="Tasks to retry ?" outgoing="_I7rMnQnDEeyeMc5IFmmFhg _I7rMpQnDEeyeMc5IFmmFhg" incoming="_I7rzUAnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7qlmQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7qlmgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7qlmwnDEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="def String desc=&quot;&quot;;&#xD;&#xA;if (nbTasksToRetry > 0) {&#xD;&#xA;&#x9;desc = &quot;There are &quot; + String.valueOf(nbTasksToRetry) + &quot; failed tasks to retry now&quot;;&#xD;&#xA;} else {&#xD;&#xA;&#x9;desc = &quot;There is no failed task to retry now&quot;;&#xD;&#xA;}&#xD;&#xA;return desc;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_I7qlnAnDEeyeMc5IFmmFhg" name="nbTasksToRetry" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
          </stepSummary>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7qlnQnDEeyeMc5IFmmFhg" name="Check Results" outgoing="_I7rMrgnDEeyeMc5IFmmFhg" incoming="_I7rMqAnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7qlngnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7qlnwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7qloAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_I7qloQnDEeyeMc5IFmmFhg" name="CheckResults" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_I7qlognDEeyeMc5IFmmFhg" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7qlownDEeyeMc5IFmmFhg" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_I7qlpAnDEeyeMc5IFmmFhg" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7qlpQnDEeyeMc5IFmmFhg" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7qlpgnDEeyeMc5IFmmFhg" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_I7qlpwnDEeyeMc5IFmmFhg" name="CheckResults" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_retried=0;&#xD;&#xA;def int nb_completed=0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;for (Integer one_result : retryResultCodesList) {&#xD;&#xA;&#x9;&#x9;if (one_result >= 10) {&#xD;&#xA;&#x9;&#x9;&#x9;nb_retried++;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if ((one_result == 1) || (one_result == 11)) {&#xD;&#xA;&#x9;&#x9;&#x9;nb_completed++;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;log_file.info(&quot;CheckResults&quot;, &quot;Retried &quot; + String.valueOf(nb_retried) + &quot; tasks, completed &quot; + String.valueOf(nb_completed) + &quot; tasks&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;CheckResults&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return [nbTasksRetried : nb_retried, nbTasksCompleted: nb_completed];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7qlqAnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Name of class showing in logs"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_I7qlqQnDEeyeMc5IFmmFhg" name="retryResultCodesList" multiple="true" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_I7qlqgnDEeyeMc5IFmmFhg">
              <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlqwnDEeyeMc5IFmmFhg" name="nbTasksCompleted" content="nbTasksCompleted" type="TYPE_VARIABLE" returnType="java.lang.Integer">
                <referencedElements xmi:type="process:Data" xmi:id="_I7qlrAnDEeyeMc5IFmmFhg" name="nbTasksCompleted" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlrQnDEeyeMc5IFmmFhg" name="result" content="return result[&quot;nbTasksCompleted&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
                <referencedElements xmi:type="definition:Output" xmi:id="_I7qlrgnDEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_I7qlrwnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_I7qlsAnDEeyeMc5IFmmFhg">
              <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlsQnDEeyeMc5IFmmFhg" name="nbTasksRetried" content="nbTasksRetried" type="TYPE_VARIABLE" returnType="java.lang.Integer">
                <referencedElements xmi:type="process:Data" xmi:id="_I7qlsgnDEeyeMc5IFmmFhg" name="nbTasksRetried" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlswnDEeyeMc5IFmmFhg" name="nbTasksRetried" content="return result[&quot;nbTasksRetried&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
                <referencedElements xmi:type="definition:Output" xmi:id="_I7qltAnDEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_I7qltQnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7qltgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7qltwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7qluAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7qluQnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7qlugnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7qluwnDEeyeMc5IFmmFhg" name="Log job results" outgoing="_I7rMsQnDEeyeMc5IFmmFhg" incoming="_I7rMpQnDEeyeMc5IFmmFhg _I7rMrgnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7qlvAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7qlvQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7qlvgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <operations xmi:type="expression:Operation" xmi:id="_I7qlvwnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlwAnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qlwQnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlwgnDEeyeMc5IFmmFhg" name="false" content="return false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean"/>
            <operator xmi:type="expression:Operator" xmi:id="_I7qlwwnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setIsRunning">
              <inputTypes>java.lang.Boolean</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7qlxAnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlxQnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qlxgnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlxwnDEeyeMc5IFmmFhg" name="setEndTime" content="import java.time.OffsetDateTime&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
            <operator xmi:type="expression:Operator" xmi:id="_I7qlyAnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setEndTime">
              <inputTypes>java.time.OffsetDateTime</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7qlyQnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7qlygnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7qlywnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7qlzAnDEeyeMc5IFmmFhg" name="nbTasksRetried" content="nbTasksRetried" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_I7qlzQnDEeyeMc5IFmmFhg" name="nbTasksRetried" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7qlzgnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setNbFailedTasksRetried">
              <inputTypes>java.lang.Integer</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7qlzwnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7ql0AnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7ql0QnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7ql0gnDEeyeMc5IFmmFhg" name="nbTasksCompleted" content="nbTasksCompleted" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_I7ql0wnDEeyeMc5IFmmFhg" name="nbTasksCompleted" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7ql1AnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setNbFailedTasksPassed">
              <inputTypes>java.lang.Integer</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7ql1QnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7ql1gnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7ql1wnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7ql2AnDEeyeMc5IFmmFhg" name="statusLogMonitoringCompleteOrError" content="def String status = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;if (! jobError.isEmpty()) {&#xD;&#xA;&#x9;status = statusLogMonitoringError;&#xD;&#xA;} else {&#xD;&#xA;&#x9;status = statusLogMonitoringComplete;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return status;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7ql2QnDEeyeMc5IFmmFhg" name="statusLogMonitoringError" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
              <referencedElements xmi:type="process:Data" xmi:id="_I7ql2gnDEeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7ql2wnDEeyeMc5IFmmFhg" name="statusLogMonitoringComplete" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7ql3AnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setStatus">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7ql3QnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7ql3gnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7ql3wnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7ql4AnDEeyeMc5IFmmFhg" name="setJobError" content="def String error_msg = null;&#xD;&#xA;&#xD;&#xA;if (! jobError.isEmpty()) {&#xD;&#xA;&#x9;error_msg = jobError;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return error_msg;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="process:Data" xmi:id="_I7ql4QnDEeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7ql4gnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setErrorMessage">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7ql4wnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7ql5AnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7ql5QnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7ql5gnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7ql5wnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_I7ql6AnDEeyeMc5IFmmFhg" name="Build list of tasks to retry" outgoing="_I7rzUAnDEeyeMc5IFmmFhg" incoming="_I7rMognDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7ql6QnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7ql6gnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7ql6wnDEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="return &quot;Found &quot; + String.valueOf(nbTasksToRetry) + &quot; failed tasks to retry now&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_I7ql7AnDEeyeMc5IFmmFhg" name="nbTasksToRetry" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
          </stepSummary>
          <operations xmi:type="expression:Operation" xmi:id="_I7ql7QnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7ql7gnDEeyeMc5IFmmFhg" name="allTasksToRetry" content="allTasksToRetry" type="TYPE_VARIABLE" returnType="java.util.List">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7ql7wnDEeyeMc5IFmmFhg" name="allTasksToRetry" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7ql8AnDEeyeMc5IFmmFhg" name="buildListOfTasksToRetry" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;&#xD;&#xA;def List&lt;LogFailedTasks> all_tasks = [];&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;all_tasks.addAll(existingFailedTasks);&#xD;&#xA;&#x9;all_tasks.addAll(newFailedTasksDetected);&#xD;&#xA;&#x9;&#xD;&#xA;} catch (e) {&#xD;&#xA;&#x9;log_file.exception(&quot;buildListOfTasksToRetry&quot;,e);&#xD;&#xA;}&#xD;&#xA;return all_tasks;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7ql8QnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7ql8gnDEeyeMc5IFmmFhg" name="newFailedTasksDetected" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7ql8wnDEeyeMc5IFmmFhg" name="existingFailedTasks" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7ql9AnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7ql9QnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7ql9gnDEeyeMc5IFmmFhg" name="nbTasksToRetry" content="nbTasksToRetry" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_I7ql9wnDEeyeMc5IFmmFhg" name="nbTasksToRetry" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7ql-AnDEeyeMc5IFmmFhg" name="setNbTasksToRetry" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_tasks=0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;nb_tasks = allTasksToRetry.size();&#xD;&#xA;&#x9;log_file.info(&quot;&quot;, &quot;Build a list of &quot; + String.valueOf(nb_tasks) + &quot; tasks to retry&quot;);&#xD;&#xA;&#xD;&#xA;} catch (e) {&#xD;&#xA;&#x9;log_file.exception(&quot;buildListOfTasksToRetry&quot;,e);&#xD;&#xA;}&#xD;&#xA;return nb_tasks;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7ql-QnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Name of class showing in logs"/>
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7ql-gnDEeyeMc5IFmmFhg" name="allTasksToRetry" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7rMQAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_I7rMQQnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7rMQgnDEeyeMc5IFmmFhg" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7rMQwnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7rMRAnDEeyeMc5IFmmFhg" name="statusLogMonitoringRunning" content="statusLogMonitoringRunning" type="TYPE_PARAMETER">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7rMRQnDEeyeMc5IFmmFhg" name="statusLogMonitoringRunning" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7rMRgnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setStatus">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_I7rMRwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_I7rMSAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7rMSQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7rMSgnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_I7rMSwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:IntermediateCatchTimerEvent" xmi:id="_I7rMTAnDEeyeMc5IFmmFhg" name="Wait until next monitoring cycle" outgoing="_I7rzWAnDEeyeMc5IFmmFhg" incoming="_I7rzUwnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7rMTQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7rMTgnDEeyeMc5IFmmFhg" name="dynamicDescription()" content="return &quot;Waiting &quot; + String.valueOf(delayBeforeNextMonitoringCycleInSeconds) + &quot; seconds before next monitoring cycle&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_I7rMTwnDEeyeMc5IFmmFhg" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7rMUAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <condition xmi:type="expression:Expression" xmi:id="_I7rMUQnDEeyeMc5IFmmFhg" name="00:01:00" content="def long one_second = 1000L;&#xD;&#xA;&#xD;&#xA;return one_second * delayBeforeNextMonitoringCycleInSeconds;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
            <referencedElements xmi:type="process:Data" xmi:id="_I7rMUgnDEeyeMc5IFmmFhg" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
          </condition>
        </elements>
        <elements xmi:type="process:EndEvent" xmi:id="_I7rMUwnDEeyeMc5IFmmFhg" name="End Montitoring Instance" incoming="_iEfpgAsxEeyeMc5IFmmFhg _UjyoIAsyEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7rMVAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7rMVQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_I7rMVgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_cchUYAsxEeyeMc5IFmmFhg" name="End of day ?" outgoing="_iEfpgAsxEeyeMc5IFmmFhg _YbJ7QAsyEeyeMc5IFmmFhg" incoming="_I7rzYAnDEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_cch7cQsxEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_cch7cAsxEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_cch7cgsxEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:CallActivity" xmi:id="_QS2-cAsyEeyeMc5IFmmFhg" name="Send daily report" outgoing="_UjyoIAsyEeyeMc5IFmmFhg" incoming="_YbJ7QAsyEeyeMc5IFmmFhg">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_QS3lgQsyEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_QS3lgAsyEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_QS3lggsyEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_QS728gsyEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_QS728wsyEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_QS8eAAsyEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_QS8eAgsyEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_QS8eAQsyEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <inputMappings xmi:type="process:InputMapping" xmi:id="_vIlVcAsyEeyeMc5IFmmFhg" subprocessTarget="reportEmailRecipients">
            <processSource xmi:type="expression:Expression" xmi:id="_vIl8gAsyEeyeMc5IFmmFhg" name="failedTasksReportRecipients" content="failedTasksReportRecipients" type="TYPE_PARAMETER">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_v_hkgAsyEeyeMc5IFmmFhg" name="failedTasksReportRecipients" typeClassname="java.lang.String" description="Recipients for daily report of failed tasks"/>
            </processSource>
          </inputMappings>
          <calledActivityName xmi:type="expression:Expression" xmi:id="_QS728AsyEeyeMc5IFmmFhg" name="ReportFailedTasks" content="ReportFailedTasks" returnTypeFixed="true"/>
          <calledActivityVersion xmi:type="expression:Expression" xmi:id="_QS728QsyEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        </elements>
      </elements>
      <data xmi:type="process:Data" xmi:id="_I7rMVwnDEeyeMc5IFmmFhg" name="manualStart" dataType="_I7r14wnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMWAnDEeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_I7rMWQnDEeyeMc5IFmmFhg" name="jobLog" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogTasksMonitoring">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMWgnDEeyeMc5IFmmFhg" name="" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_I7rMWwnDEeyeMc5IFmmFhg" name="monitoringCycleStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMXAnDEeyeMc5IFmmFhg" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_I7rMXQnDEeyeMc5IFmmFhg" name="nextMonitoringCycleStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMXgnDEeyeMc5IFmmFhg" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_I7rMXwnDEeyeMc5IFmmFhg" name="existingFailedTasks" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMYAnDEeyeMc5IFmmFhg" name="" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_I7rMYQnDEeyeMc5IFmmFhg" name="newFailedTasksDetected" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMYgnDEeyeMc5IFmmFhg" name="" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7rMYwnDEeyeMc5IFmmFhg" name="nbTasksRetried" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMZAnDEeyeMc5IFmmFhg" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7rMZQnDEeyeMc5IFmmFhg" name="nbTasksCompleted" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMZgnDEeyeMc5IFmmFhg" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_I7rMZwnDEeyeMc5IFmmFhg" name="allTasksToRetry" multiple="true" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMaAnDEeyeMc5IFmmFhg" name="" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7rMaQnDEeyeMc5IFmmFhg" name="nbTasksToRetry" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMagnDEeyeMc5IFmmFhg" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7rMawnDEeyeMc5IFmmFhg" name="nbExistingTasks" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMbAnDEeyeMc5IFmmFhg" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7rMbQnDEeyeMc5IFmmFhg" name="nbNewTasksDetected" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMbgnDEeyeMc5IFmmFhg" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7rMbwnDEeyeMc5IFmmFhg" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_I7r15gnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMcAnDEeyeMc5IFmmFhg" name="monitoringIntervalInMinutes*60" content="def Long interval = new Long(monitoringIntervalInMinutes) * 60L;&#xD;&#xA;return interval;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7rMcQnDEeyeMc5IFmmFhg" name="monitoringIntervalInMinutes" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_I7rMcgnDEeyeMc5IFmmFhg" name="monitoringInstanceStart" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMcwnDEeyeMc5IFmmFhg" name="init_monitoringInstanceStart()" content="import java.time.OffsetDateTime&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7rMdAnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutesArray" multiple="true" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMdQnDEeyeMc5IFmmFhg" name="init_delayBetweenRetriesInMinutesArray" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def List&lt;Integer> list_retry_delays = [];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;log_file.debug(&quot;init_delayBetweenRetriesInMinutesArray&quot;, &quot;Retrieving list of delays between retries from paramter : [&quot; + delayBetweenRetriesInMinutes + &quot;]&quot;);&#xD;&#xA;&#x9;String[] array_retries_str = delayBetweenRetriesInMinutes.split(&quot;,&quot;);&#xD;&#xA;&#x9;for (String one_delay_str : array_retries_str) {&#xD;&#xA;&#x9;&#x9;def Integer one_delay = Integer.valueOf(one_delay_str.trim());&#xD;&#xA;&#x9;&#x9;list_retry_delays.add(one_delay);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_delayBetweenRetriesInMinutesArray&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return list_retry_delays;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7rMdgnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7rMdwnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutes" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7rMeAnDEeyeMc5IFmmFhg" name="retryResultCodesList" multiple="true" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMeQnDEeyeMc5IFmmFhg" name="emptyList" content="return [];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7rMegnDEeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMewnDEeyeMc5IFmmFhg" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_RCiScAszEeyeMc5IFmmFhg" documentation="True when we reached the end of daily monitoring" name="isEndOfDailyMonitoring" dataType="_I7r14wnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RCiScQszEeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_I7rMfAnDEeyeMc5IFmmFhg" type="NONE">
        <targetForm xmi:type="expression:Expression" xmi:id="_I7rMfQnDEeyeMc5IFmmFhg" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_I7rMfgnDEeyeMc5IFmmFhg">
        <targetForm xmi:type="expression:Expression" xmi:id="_I7rMfwnDEeyeMc5IFmmFhg" name="caseoverview" content="981aadcf-631a-4742-9507-59e85e93c39e" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMgAnDEeyeMc5IFmmFhg" target="_I7pXEAnDEeyeMc5IFmmFhg" source="_I7owAwnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMgQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMggnDEeyeMc5IFmmFhg" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMgwnDEeyeMc5IFmmFhg" target="_I7pXJwnDEeyeMc5IFmmFhg" source="_I7pXEAnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMhAnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMhQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMhgnDEeyeMc5IFmmFhg" target="_I7p-LgnDEeyeMc5IFmmFhg" source="_I7pXJwnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMhwnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMiAnDEeyeMc5IFmmFhg" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMiQnDEeyeMc5IFmmFhg" target="_I7p-QgnDEeyeMc5IFmmFhg" source="_I7p-LgnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMignDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMiwnDEeyeMc5IFmmFhg" name="isAlreadyRunning" content="isAlreadyRunning" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_I7rMjAnDEeyeMc5IFmmFhg" name="isAlreadyRunning" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMjQnDEeyeMc5IFmmFhg" target="_I7p-ZAnDEeyeMc5IFmmFhg" source="_I7p-QgnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMjgnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMjwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMkAnDEeyeMc5IFmmFhg" name="Manual job" target="_I7p-YAnDEeyeMc5IFmmFhg" source="_I7p-ZAnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMkQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMkgnDEeyeMc5IFmmFhg" name="manualStart" content="manualStart" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_I7rMkwnDEeyeMc5IFmmFhg" name="manualStart" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMlAnDEeyeMc5IFmmFhg" target="_I7pXJwnDEeyeMc5IFmmFhg" source="_I7pXHgnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMlQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMlgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMlwnDEeyeMc5IFmmFhg" target="_I7qlMAnDEeyeMc5IFmmFhg" source="_I7p-LgnDEeyeMc5IFmmFhg" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMmAnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMmQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMmgnDEeyeMc5IFmmFhg" target="_I7qlTwnDEeyeMc5IFmmFhg" source="_I7qlMAnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMmwnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMnAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMnQnDEeyeMc5IFmmFhg" name="Yes" target="_I7qlgQnDEeyeMc5IFmmFhg" source="_I7qlmAnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMngnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMnwnDEeyeMc5IFmmFhg" name="nbTasksToRetry > 0" content="nbTasksToRetry > 0" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_I7rMoAnDEeyeMc5IFmmFhg" name="nbTasksToRetry" dataType="_I7r15QnDEeyeMc5IFmmFhg">
            <defaultValue xmi:type="expression:Expression" xmi:id="_I7rMoQnDEeyeMc5IFmmFhg" name="0" content="0" returnType="java.lang.Integer"/>
          </referencedElements>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMognDEeyeMc5IFmmFhg" target="_I7ql6AnDEeyeMc5IFmmFhg" source="_I7qlTwnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMownDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMpAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMpQnDEeyeMc5IFmmFhg" name="No" target="_I7qluwnDEeyeMc5IFmmFhg" source="_I7qlmAnDEeyeMc5IFmmFhg" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMpgnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMpwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMqAnDEeyeMc5IFmmFhg" target="_I7qlnQnDEeyeMc5IFmmFhg" source="_I7qlgQnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMqQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMqgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMqwnDEeyeMc5IFmmFhg" name="Scheduled job" target="_I7p-aQnDEeyeMc5IFmmFhg" source="_I7p-ZAnDEeyeMc5IFmmFhg" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMrAnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMrQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMrgnDEeyeMc5IFmmFhg" target="_I7qluwnDEeyeMc5IFmmFhg" source="_I7qlnQnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMrwnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMsAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rMsQnDEeyeMc5IFmmFhg" target="_I7p-ZAnDEeyeMc5IFmmFhg" source="_I7qluwnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rMsgnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rMswnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rzUAnDEeyeMc5IFmmFhg" target="_I7qlmAnDEeyeMc5IFmmFhg" source="_I7ql6AnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rzUQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rzUgnDEeyeMc5IFmmFhg" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rzUwnDEeyeMc5IFmmFhg" name="Delay required" target="_I7rMTAnDEeyeMc5IFmmFhg" source="_I7p-aQnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rzVAnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rzVQnDEeyeMc5IFmmFhg" name="delayBeforeNextMonitoringCycleInMinutes > 0" content="return (! reachedMonitoringInstanceEnd) &amp;&amp; (delayBeforeNextMonitoringCycleInSeconds > 0);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_I7rzVgnDEeyeMc5IFmmFhg" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
          <referencedElements xmi:type="process:Data" xmi:id="_I7rzVwnDEeyeMc5IFmmFhg" name="reachedMonitoringInstanceEnd" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rzWAnDEeyeMc5IFmmFhg" target="_I7pXJwnDEeyeMc5IFmmFhg" source="_I7rMTAnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rzWQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rzWgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rzWwnDEeyeMc5IFmmFhg" name="No delay" target="_I7pXJwnDEeyeMc5IFmmFhg" source="_I7p-aQnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rzXAnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rzXQnDEeyeMc5IFmmFhg" name="notEndedAndNoDelay" content="return (! reachedMonitoringInstanceEnd) &amp;&amp; (delayBeforeNextMonitoringCycleInSeconds &lt;= 0);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_I7rzXgnDEeyeMc5IFmmFhg" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
          <referencedElements xmi:type="process:Data" xmi:id="_I7rzXwnDEeyeMc5IFmmFhg" name="reachedMonitoringInstanceEnd" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7rzYAnDEeyeMc5IFmmFhg" name="End of monitoring instance" target="_cchUYAsxEeyeMc5IFmmFhg" source="_I7p-aQnDEeyeMc5IFmmFhg" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7rzYQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7rzYgnDEeyeMc5IFmmFhg" name="reachedMonitoringInstanceEnd" content="reachedMonitoringInstanceEnd" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_I7rzYwnDEeyeMc5IFmmFhg" name="reachedMonitoringInstanceEnd" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_iEfpgAsxEeyeMc5IFmmFhg" name="No, or no report" target="_I7rMUwnDEeyeMc5IFmmFhg" source="_cchUYAsxEeyeMc5IFmmFhg" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_iEfpgQsxEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_iEfpggsxEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_UjyoIAsyEeyeMc5IFmmFhg" target="_I7rMUwnDEeyeMc5IFmmFhg" source="_QS2-cAsyEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_UjyoIQsyEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_UjyoIgsyEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_YbJ7QAsyEeyeMc5IFmmFhg" name="Yes, report needed" target="_QS2-cAsyEeyeMc5IFmmFhg" source="_cchUYAsxEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_YbKiUAsyEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_YbKiUQsyEeyeMc5IFmmFhg" name="endOfDay and report needed" content="return isEndOfDailyMonitoring &amp;&amp; sendDailyReport;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_vRsYsAszEeyeMc5IFmmFhg" documentation="True when we reached the end of daily monitoring" name="isEndOfDailyMonitoring" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_vRsYsQszEeyeMc5IFmmFhg" name="sendDailyReport" typeClassname="java.lang.Boolean"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_I7rzZAnDEeyeMc5IFmmFhg" documentation="Application administrator" name="Administrator" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_I7rzZQnDEeyeMc5IFmmFhg" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_I7rzZgnDEeyeMc5IFmmFhg">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_I7rzZwnDEeyeMc5IFmmFhg" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_I7rzaAnDEeyeMc5IFmmFhg"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_I7rzaQnDEeyeMc5IFmmFhg"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_I7rzagnDEeyeMc5IFmmFhg">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_I7rzawnDEeyeMc5IFmmFhg"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_I7rzbAnDEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzbQnDEeyeMc5IFmmFhg" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzbgnDEeyeMc5IFmmFhg" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_DZ_yAIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_DarugIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzcQnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzcgnDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzcwnDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzdAnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzdQnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzdgnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzdwnDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzeAnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzeQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzegnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzewnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzfAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzfQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzfgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzfwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzgAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzgQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzggnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxoAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxoQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxognDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxownDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxpAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxpQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxpgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxpwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzgwnDEeyeMc5IFmmFhg" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzhAnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzhQnDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzhgnDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzhwnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rziAnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rziQnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzignDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rziwnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzjAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzjQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzjgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzjwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzkAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzkQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzkgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzkwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzlAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzlQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxqAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxqQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxqgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxqwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxrAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxrQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxrgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Q0VxrwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzlgnDEeyeMc5IFmmFhg" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzlwnDEeyeMc5IFmmFhg" name="logClass" value="MonitoringFailedTasks" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzmAnDEeyeMc5IFmmFhg" name="statusLogMonitoringRunning" value="RUNNING" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzmQnDEeyeMc5IFmmFhg" name="monitorInstanceDurationInHours" value="4" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzmgnDEeyeMc5IFmmFhg" name="statusLogMonitoringStarted" value="STARTED" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzmwnDEeyeMc5IFmmFhg" name="maxNumberOfRetries" value="32" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rznAnDEeyeMc5IFmmFhg" name="monitoringIntervalInMinutes" value="2" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rznQnDEeyeMc5IFmmFhg" name="statusLogMonitoringComplete" value="COMPLETE" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzngnDEeyeMc5IFmmFhg" name="statusLogMonitoringAborted" value="ABORTED" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rznwnDEeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" value="4" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzoAnDEeyeMc5IFmmFhg" name="monitoringTimeStartHour" value="7" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzoQnDEeyeMc5IFmmFhg" name="monitoringTimeEndHour" value="21" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzognDEeyeMc5IFmmFhg" name="monitoringDays" value="MON-FRI" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzownDEeyeMc5IFmmFhg" name="maxNumberOfRetriedTasksPerCycle" value="100" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzpAnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutes" value="2, 2, 2, 4, 5, 15" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rzpQnDEeyeMc5IFmmFhg" name="statusLogMonitoringError" value="ERROR" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Q0VxsAnDEeyeMc5IFmmFhg" name="failedTasksReportRecipients" value="Christian.Franiatte@saint-gobain.com" typeClassname="java.lang.String" description="Recipients for daily report of failed tasks"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mj4AsAsxEeyeMc5IFmmFhg" name="sendDailyReport" value="true" typeClassname="java.lang.Boolean"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_I7rzpgnDEeyeMc5IFmmFhg" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_I7rzpwnDEeyeMc5IFmmFhg">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_I7rzqAnDEeyeMc5IFmmFhg" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_I7rzqQnDEeyeMc5IFmmFhg"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_I7rzqgnDEeyeMc5IFmmFhg"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_I7rzqwnDEeyeMc5IFmmFhg">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_I7rzrAnDEeyeMc5IFmmFhg"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_I7rzrQnDEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzrgnDEeyeMc5IFmmFhg" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzrwnDEeyeMc5IFmmFhg" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_DbUAoIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_DcBLQIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzsgnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzswnDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rztAnDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rztQnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rztgnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rztwnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzuAnDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzuQnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzugnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzuwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzvAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzvQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzvgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzvwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzwAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzwQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzwgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzwwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKsAtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKsQtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKsgtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKswtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKtAtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKtQtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKtgtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKtwtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzxAnDEeyeMc5IFmmFhg" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzxQnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rzxgnDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzxwnDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzyAnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzyQnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzygnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzywnDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzzAnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzzQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzzgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rzzwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz0AnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz0QnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz0gnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz0wnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz1AnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz1QnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz1gnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKuAtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKuQtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKugtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKuwtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKvAtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKvQtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKvgtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_mUwKvwtmEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rz1wnDEeyeMc5IFmmFhg" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz2AnDEeyeMc5IFmmFhg" name="logClass" value="MonitoringFailedTasks" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz2QnDEeyeMc5IFmmFhg" name="statusLogMonitoringRunning" value="RUNNING" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz2gnDEeyeMc5IFmmFhg" name="monitorInstanceDurationInHours" value="4" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz2wnDEeyeMc5IFmmFhg" name="statusLogMonitoringStarted" value="STARTED" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz3AnDEeyeMc5IFmmFhg" name="maxNumberOfRetries" value="32" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz3QnDEeyeMc5IFmmFhg" name="monitoringIntervalInMinutes" value="2" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz3gnDEeyeMc5IFmmFhg" name="statusLogMonitoringComplete" value="COMPLETE" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz3wnDEeyeMc5IFmmFhg" name="statusLogMonitoringAborted" value="ABORTED" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz4AnDEeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" value="4" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz4QnDEeyeMc5IFmmFhg" name="monitoringTimeStartHour" value="7" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz4gnDEeyeMc5IFmmFhg" name="monitoringTimeEndHour" value="21" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz4wnDEeyeMc5IFmmFhg" name="monitoringDays" value="MON-FRI" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz5AnDEeyeMc5IFmmFhg" name="maxNumberOfRetriedTasksPerCycle" value="100" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz5QnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutes" value="2, 2, 2, 4, 5, 15" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7rz5gnDEeyeMc5IFmmFhg" name="statusLogMonitoringError" value="ERROR" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_mUwKwAtmEeyeMc5IFmmFhg" name="failedTasksReportRecipients" value="benoit.valet@saint-gobain.com, Christian.Franiatte@saint-gobain.com" typeClassname="java.lang.String" description="Recipients for daily report of failed tasks"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_mUwKwQtmEeyeMc5IFmmFhg" name="sendDailyReport" value="true" typeClassname="java.lang.Boolean"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_I7rz5wnDEeyeMc5IFmmFhg" name="sgdbf-prod" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_I7rz6AnDEeyeMc5IFmmFhg">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_I7rz6QnDEeyeMc5IFmmFhg" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_I7rz6gnDEeyeMc5IFmmFhg"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_I7rz6wnDEeyeMc5IFmmFhg"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_I7rz7AnDEeyeMc5IFmmFhg">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_I7rz7QnDEeyeMc5IFmmFhg"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_I7rz7gnDEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rz7wnDEeyeMc5IFmmFhg" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rz8AnDEeyeMc5IFmmFhg" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_DcynUIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_DdZrUIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rz8wnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7rz9AnDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz9QnDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz9gnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz9wnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz-AnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz-QnDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz-gnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz-wnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz_AnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz_QnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz_gnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7rz_wnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0AAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0AQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0AgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0AwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0BAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ify8A--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihBEA--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihBEQ--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihBEg--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihoIA--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihoIQ--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihoIg--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihoIw--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r0BQnDEeyeMc5IFmmFhg" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r0BgnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r0BwnDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0CAnDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0CQnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0CgnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0CwnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0DAnDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0DQnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0DgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0DwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0EAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0EQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0EgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0EwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0FAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0FQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0FgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r0FwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihoJA--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihoJQ--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihoJg--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8ihoJw--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8iiPMA--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8iiPMQ--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8iiPMg--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_8iiPMw--EeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r0GAnDEeyeMc5IFmmFhg" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0GQnDEeyeMc5IFmmFhg" name="logClass" value="MonitoringFailedTasks" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0GgnDEeyeMc5IFmmFhg" name="statusLogMonitoringRunning" value="RUNNING" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0GwnDEeyeMc5IFmmFhg" name="monitorInstanceDurationInHours" value="4" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0HAnDEeyeMc5IFmmFhg" name="statusLogMonitoringStarted" value="STARTED" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0HQnDEeyeMc5IFmmFhg" name="maxNumberOfRetries" value="32" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0HgnDEeyeMc5IFmmFhg" name="monitoringIntervalInMinutes" value="2" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0HwnDEeyeMc5IFmmFhg" name="statusLogMonitoringComplete" value="COMPLETE" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0IAnDEeyeMc5IFmmFhg" name="statusLogMonitoringAborted" value="ABORTED" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0IQnDEeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" value="4" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0IgnDEeyeMc5IFmmFhg" name="monitoringTimeStartHour" value="7" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0IwnDEeyeMc5IFmmFhg" name="monitoringTimeEndHour" value="21" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0JAnDEeyeMc5IFmmFhg" name="monitoringDays" value="MON-FRI" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0JQnDEeyeMc5IFmmFhg" name="maxNumberOfRetriedTasksPerCycle" value="100" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0JgnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutes" value="2, 2, 2, 4, 5, 15" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0JwnDEeyeMc5IFmmFhg" name="statusLogMonitoringError" value="ERROR" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_8iiPNA--EeyeMc5IFmmFhg" name="failedTasksReportRecipients" typeClassname="java.lang.String" description="Recipients for daily report of failed tasks"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_8iiPNQ--EeyeMc5IFmmFhg" name="sendDailyReport" typeClassname="java.lang.Boolean"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0KAnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0KQnDEeyeMc5IFmmFhg" name="statusLogMonitoringRunning" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0KgnDEeyeMc5IFmmFhg" name="monitorInstanceDurationInHours" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0KwnDEeyeMc5IFmmFhg" name="statusLogMonitoringStarted" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0LAnDEeyeMc5IFmmFhg" name="maxNumberOfRetries" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0LQnDEeyeMc5IFmmFhg" name="monitoringIntervalInMinutes" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0LgnDEeyeMc5IFmmFhg" name="statusLogMonitoringComplete" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0LwnDEeyeMc5IFmmFhg" name="statusLogMonitoringAborted" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0MAnDEeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0MQnDEeyeMc5IFmmFhg" name="monitoringTimeStartHour" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0MgnDEeyeMc5IFmmFhg" name="monitoringTimeEndHour" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0MwnDEeyeMc5IFmmFhg" name="monitoringDays" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0NAnDEeyeMc5IFmmFhg" name="maxNumberOfRetriedTasksPerCycle" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0NQnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutes" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r0NgnDEeyeMc5IFmmFhg" name="statusLogMonitoringError" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_PtSqAAnDEeyeMc5IFmmFhg" name="failedTasksReportRecipients" typeClassname="java.lang.String" description="Recipients for daily report of failed tasks"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_LKi2QAsxEeyeMc5IFmmFhg" name="sendDailyReport" typeClassname="java.lang.Boolean"/>
      <contract xmi:type="process:Contract" xmi:id="_I7r0NwnDEeyeMc5IFmmFhg"/>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r0OAnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r0OQnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r0OgnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r0OwnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r0PAnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r0PQnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r0PgnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r0PwnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r0QAnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r0QQnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r0QgnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r0QwnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r0RAnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r0RQnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r0RgnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <elements xmi:type="process:Pool" xmi:id="_I7r0RwnDEeyeMc5IFmmFhg" name="RetryFailedTask" version="3.0.1">
      <elements xmi:type="process:StartEvent" xmi:id="_I7r0SAnDEeyeMc5IFmmFhg" name="Start" outgoing="_I7r1QQnDEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7r0SQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7r0SgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_I7r0SwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_I7r0TAnDEeyeMc5IFmmFhg" name="Check Activity State" outgoing="_I7r1RAnDEeyeMc5IFmmFhg _I7r1WAnDEeyeMc5IFmmFhg" incoming="_I7r1WwnDEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7r0TQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7r0TgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_I7r0TwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <connectors xmi:type="process:Connector" xmi:id="_I7r0UAnDEeyeMc5IFmmFhg" name="CheckActivityState" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_I7r0UQnDEeyeMc5IFmmFhg" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7r0UgnDEeyeMc5IFmmFhg" key="script">
              <expression xmi:type="expression:Expression" xmi:id="_I7r0UwnDEeyeMc5IFmmFhg" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7r0VAnDEeyeMc5IFmmFhg" key="variables"/>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7r0VQnDEeyeMc5IFmmFhg" key="fakeScriptExpression">
              <expression xmi:type="expression:Expression" xmi:id="_I7r0VgnDEeyeMc5IFmmFhg" name="CheckActivityState" content="import com.bonitasoft.engine.api.ProcessAPI&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.pop3p.groovy.ActivityState;&#xD;&#xA;&#xD;&#xA;def String task_state =&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;def ProcessAPI process_api = apiAccessor.getProcessAPI();&#xD;&#xA;&#x9;task_state = ActivityState.getActivityState(failedTaskId, taskStateNotFound, process_api, log_file);&#xD;&#xA;&#x9;log_file.info(&quot;CheckActivityState(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Current activity state is [&quot; + task_state + &quot;]&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;CheckActivityState(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return task_state;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                <referencedElements xmi:type="expression:Expression" xmi:id="_I7r0VwnDEeyeMc5IFmmFhg" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="process:Data" xmi:id="_I7r0WAnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0WQnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0WgnDEeyeMc5IFmmFhg" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
              </expression>
            </parameters>
          </configuration>
          <outputs xmi:type="expression:Operation" xmi:id="_I7r0WwnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0XAnDEeyeMc5IFmmFhg" name="taskState" content="taskState" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_I7r0XQnDEeyeMc5IFmmFhg" name="taskState" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0XgnDEeyeMc5IFmmFhg" name="result" content="return result;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="definition:Output" xmi:id="_I7r0XwnDEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7r0YAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </outputs>
        </connectors>
        <operations xmi:type="expression:Operation" xmi:id="_I7r0YQnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0YgnDEeyeMc5IFmmFhg" name="isFailed" content="isFailed" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0YwnDEeyeMc5IFmmFhg" name="isFailed" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0ZAnDEeyeMc5IFmmFhg" name="setIsFailed" content="import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def is_failed = false;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if ((taskState != null) &amp;&amp; taskState.equalsIgnoreCase(ActivityStates.FAILED_STATE)) {&#xD;&#xA;&#x9;&#x9;is_failed = true;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsFailed(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task with state [&quot; + taskState + &quot;] is not longer failed, do not retry it&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsFailed(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#x9;&#xD;&#xA;return is_failed;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0ZQnDEeyeMc5IFmmFhg" name="taskState" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0ZgnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0ZwnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r0aAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_I7r0aQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_I7r0agnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7r0awnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7r0bAnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_I7r0bQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_I7r0bgnDEeyeMc5IFmmFhg" name="Retry Task" outgoing="_I7r1SAnDEeyeMc5IFmmFhg" incoming="_I7r1RAnDEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7r0bwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7r0cAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_I7r0cQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <connectors xmi:type="process:Connector" xmi:id="_I7r0cgnDEeyeMc5IFmmFhg" name="retryTask" definitionId="scripting-groovy-script" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_I7r0cwnDEeyeMc5IFmmFhg" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7r0dAnDEeyeMc5IFmmFhg" key="script">
              <expression xmi:type="expression:Expression" xmi:id="_I7r0dQnDEeyeMc5IFmmFhg" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7r0dgnDEeyeMc5IFmmFhg" key="variables"/>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7r0dwnDEeyeMc5IFmmFhg" key="fakeScriptExpression">
              <expression xmi:type="expression:Expression" xmi:id="_I7r0eAnDEeyeMc5IFmmFhg" name="RetryTask" content="import com.bonitasoft.engine.api.ProcessAPI&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Retrying task&#xD;&#xA;&#x9;log_file.info(&quot;RetryTask(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Retrying task...&quot;);&#xD;&#xA;&#x9;def ProcessAPI process_api = apiAccessor.getProcessAPI();&#xD;&#xA;&#x9;process_api.retryTask(failedTaskId);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;RetryTask(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                <referencedElements xmi:type="process:Data" xmi:id="_I7r0eQnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0egnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_I7r0ewnDEeyeMc5IFmmFhg" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
              </expression>
            </parameters>
          </configuration>
          <outputs xmi:type="expression:Operation" xmi:id="_I7r0fAnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0fQnDEeyeMc5IFmmFhg"/>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0fgnDEeyeMc5IFmmFhg" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
              <referencedElements xmi:type="definition:Output" xmi:id="_I7r0fwnDEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7r0gAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </outputs>
        </connectors>
        <operations xmi:type="expression:Operation" xmi:id="_I7r0gQnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0ggnDEeyeMc5IFmmFhg" name="retryStartTime" content="retryStartTime" type="TYPE_VARIABLE" returnType="java.time.OffsetDateTime">
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_I7r0gwnDEeyeMc5IFmmFhg" name="retryStartTime" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0hAnDEeyeMc5IFmmFhg" name="setRetryStartTime" content="import java.time.OffsetDateTime&#xD;&#xA;&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
          <operator xmi:type="expression:Operator" xmi:id="_I7r0hQnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_I7r0hgnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0hwnDEeyeMc5IFmmFhg" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r0iAnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0iQnDEeyeMc5IFmmFhg" name="incrementNbRetries" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_retries = 0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;nb_retries = taskToRetry.getNbRetries() + 1;&#xD;&#xA;&#x9;log_file.info(&quot;incrementNbRetries&quot;, &quot;Retrying task &quot; + String.valueOf(taskToRetry.getTaskId() + &quot; : attempt n°&quot; + String.valueOf(nb_retries)));&#xD;&#xA;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;incrementNbRetries&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return nb_retries;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0ignDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r0iwnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r0jAnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setNbRetries">
            <inputTypes>java.lang.Integer</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_I7r0jQnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0jgnDEeyeMc5IFmmFhg" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r0jwnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0kAnDEeyeMc5IFmmFhg" name="retryStartTime" content="retryStartTime" interpreter="GROOVY" type="TYPE_VARIABLE" returnType="java.time.OffsetDateTime">
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_I7r0kQnDEeyeMc5IFmmFhg" name="retryStartTime" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r0kgnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setLastRetryDate">
            <inputTypes>java.time.OffsetDateTime</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_I7r0kwnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0lAnDEeyeMc5IFmmFhg" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r0lQnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0lgnDEeyeMc5IFmmFhg" name="true" content="return true;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean"/>
          <operator xmi:type="expression:Operator" xmi:id="_I7r0lwnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setIsRetrying">
            <inputTypes>java.lang.Boolean</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_I7r0mAnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0mQnDEeyeMc5IFmmFhg" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r0mgnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0mwnDEeyeMc5IFmmFhg" name="setNextRetryDate" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import java.time.OffsetDateTime&#xD;&#xA;&#xD;&#xA;def OffsetDateTime next_retry_time = OffsetDateTime.now();&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;def int delay_minutes = 0;&#xD;&#xA;&#x9;def int nb_retries = taskToRetry.getNbRetries();&#xD;&#xA;&#x9;def int nb_configured_delays = delayBetweenRetriesInMinutesArray.size();&#xD;&#xA;&#x9;if (nb_retries &lt;= nb_configured_delays) {&#xD;&#xA;&#x9;&#x9;delay_minutes = delayBetweenRetriesInMinutesArray.get(nb_retries-1);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;if (nb_configured_delays > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;delay_minutes = delayBetweenRetriesInMinutesArray.get(nb_configured_delays-1);&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Nothing configured, applying a default&#xD;&#xA;&#x9;&#x9;&#x9;delay_minutes = 3;&#xD;&#xA;&#x9;&#x9;&#x9;log_file.error(&quot;setNextRetryDate&quot;, &quot;Missing configuration of delays between retries, using default delay : &quot; + String.valueOf(delay_minutes));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Adding delay&#xD;&#xA;&#x9;log_file.debug(&quot;setNextRetryDate&quot;, &quot;Retry count is &quot; + String.valueOf(nb_retries) + &quot;, delay before next retry :&quot; + String.valueOf(delay_minutes));&#xD;&#xA;&#x9;next_retry_time = next_retry_time.plusMinutes(delay_minutes);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setNextRetryDate&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return next_retry_time;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0nAnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r0nQnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0ngnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutesArray" multiple="true" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r0nwnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setNextRetryDate">
            <inputTypes>java.time.OffsetDateTime</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_I7r0oAnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0oQnDEeyeMc5IFmmFhg" name="isRetried" content="isRetried" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0ognDEeyeMc5IFmmFhg" name="isRetried" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0ownDEeyeMc5IFmmFhg" name="true" content="true" returnType="java.lang.Boolean"/>
          <operator xmi:type="expression:Operator" xmi:id="_I7r0pAnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_I7r0pQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_I7r0pgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7r0pwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7r0qAnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_I7r0qQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:IntermediateCatchTimerEvent" xmi:id="_I7r0qgnDEeyeMc5IFmmFhg" name="Wait for Task completion" outgoing="_I7r1SwnDEeyeMc5IFmmFhg" incoming="_I7r1SAnDEeyeMc5IFmmFhg _I7r1TgnDEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7r0qwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7r0rAnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_I7r0rQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r0rgnDEeyeMc5IFmmFhg" name="Number of seconds" content="return 1000L * intervalToCheckTaskCompletionInSeconds;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0rwnDEeyeMc5IFmmFhg" name="intervalToCheckTaskCompletionInSeconds" typeClassname="java.lang.Integer" description="Number of seconds between 2 checks of task completion"/>
        </condition>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_I7r0sAnDEeyeMc5IFmmFhg" name="Check Task completion" outgoing="_I7r1TgnDEeyeMc5IFmmFhg _I7r1UgnDEeyeMc5IFmmFhg" incoming="_I7r1SwnDEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7r0sQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7r0sgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_I7r0swnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <data xmi:type="process:Data" xmi:id="_I7r0tAnDEeyeMc5IFmmFhg" name="retryTaskDurationInSeconds" dataType="_I7r15gnDEeyeMc5IFmmFhg">
          <defaultValue xmi:type="expression:Expression" xmi:id="_I7r0tQnDEeyeMc5IFmmFhg" name="init_retryTaskDurationInSeconds()" content="import java.time.OffsetDateTime&#xD;&#xA;import java.time.temporal.ChronoUnit;&#xD;&#xA;&#xD;&#xA;def long duration_retry = 0L;&#xD;&#xA;&#xD;&#xA;def time_now = OffsetDateTime.now();&#xD;&#xA;duration_retry = retryStartTime.until(time_now, ChronoUnit.SECONDS);&#xD;&#xA;return duration_retry;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_I7r0tgnDEeyeMc5IFmmFhg" name="retryStartTime" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime"/>
          </defaultValue>
        </data>
        <connectors xmi:type="process:Connector" xmi:id="_I7r0twnDEeyeMc5IFmmFhg" name="CheckTaskCompletion" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_I7r0uAnDEeyeMc5IFmmFhg" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7r0uQnDEeyeMc5IFmmFhg" key="script">
              <expression xmi:type="expression:Expression" xmi:id="_I7r0ugnDEeyeMc5IFmmFhg" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7r0uwnDEeyeMc5IFmmFhg" key="variables"/>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_I7r0vAnDEeyeMc5IFmmFhg" key="fakeScriptExpression">
              <expression xmi:type="expression:Expression" xmi:id="_I7r0vQnDEeyeMc5IFmmFhg" name="CheckTaskCompletion" content="import com.bonitasoft.engine.api.ProcessAPI&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.pop3p.groovy.ActivityState;&#xD;&#xA;&#xD;&#xA;def String task_state =&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;def ProcessAPI process_api = apiAccessor.getProcessAPI();&#xD;&#xA;&#x9;task_state = ActivityState.getActivityState(failedTaskId, taskStateNotFound, process_api, log_file);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;log_file.info(&quot;CheckTaskCompletion(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Current activity state is [&quot; + task_state + &quot;]&quot;);&#xD;&#xA;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;CheckTaskCompletion(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return task_state;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0vgnDEeyeMc5IFmmFhg" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
                <referencedElements xmi:type="process:Data" xmi:id="_I7r0vwnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0wAnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_I7r0wQnDEeyeMc5IFmmFhg" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
              </expression>
            </parameters>
          </configuration>
          <outputs xmi:type="expression:Operation" xmi:id="_I7r0wgnDEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0wwnDEeyeMc5IFmmFhg" name="taskState" content="taskState" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_I7r0xAnDEeyeMc5IFmmFhg" name="taskState" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0xQnDEeyeMc5IFmmFhg" name="result" content="return result;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="definition:Output" xmi:id="_I7r0xgnDEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_I7r0xwnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </outputs>
        </connectors>
        <operations xmi:type="expression:Operation" xmi:id="_I7r0yAnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0yQnDEeyeMc5IFmmFhg" name="isExecuting" content="isExecuting" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0ygnDEeyeMc5IFmmFhg" name="isExecuting" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0ywnDEeyeMc5IFmmFhg" name="setIsExecuting" content="import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def is_executing = false;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (taskState.equalsIgnoreCase(ActivityStates.EXECUTING_STATE)) {&#xD;&#xA;&#x9;&#x9;is_executing = true;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsExecuting(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task with state [&quot; + taskState + &quot;] is not longer executing&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsExecuting(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#x9;&#xD;&#xA;return is_executing;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0zAnDEeyeMc5IFmmFhg" name="taskState" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0zQnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r0zgnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r0zwnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_I7r00AnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r00QnDEeyeMc5IFmmFhg" name="isCompleted" content="isCompleted" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r00gnDEeyeMc5IFmmFhg" name="isCompleted" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r00wnDEeyeMc5IFmmFhg" name="setIsCompleted" content="import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def is_completed = false;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (taskState.equalsIgnoreCase(ActivityStates.COMPLETED_STATE)&#xD;&#xA;&#x9;&#x9;|| taskState.equalsIgnoreCase(taskStateNotFound)) {&#xD;&#xA;&#x9;&#x9;is_completed = true;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsCompleted(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task with state [&quot; + taskState + &quot;] is successfully retried&quot;);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsCompleted(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task with state [&quot; + taskState + &quot;] is not completed&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsCompleted(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#x9;&#xD;&#xA;return is_completed;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r01AnDEeyeMc5IFmmFhg" name="taskState" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r01QnDEeyeMc5IFmmFhg" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r01gnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r01wnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r02AnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_I7r02QnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r02gnDEeyeMc5IFmmFhg" name="keepWaiting" content="keepWaiting" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r02wnDEeyeMc5IFmmFhg" name="keepWaiting" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r03AnDEeyeMc5IFmmFhg" name="setKeepWaiting" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def boolean keep_waiting=false;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (! isExecuting) {&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;setKeepWaiting (&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task is no longer executing, do not keep waiting for task completion&quot;);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;def Long max_wait_time = new Long(maxWaitTimeForCompletionInSeconds)&#xD;&#xA;&#x9;&#x9;if (retryTaskDurationInSeconds &lt; max_wait_time) {&#xD;&#xA;&#x9;&#x9;&#x9;keep_waiting = true;&#xD;&#xA;&#x9;&#x9;&#x9;log_file.debug(&quot;setKeepWaiting (&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Keep waiting for completion, curent duration=&quot; + String.valueOf(retryTaskDurationInSeconds) + &quot;s&quot;);&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;log_file.debug(&quot;setKeepWaiting (&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Maximum wait time for completion is reached : &quot; + String.valueOf(retryTaskDurationInSeconds) + &quot;s&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setKeepWaiting (&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return keep_waiting;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r03QnDEeyeMc5IFmmFhg" name="maxWaitTimeForCompletionInSeconds" typeClassname="java.lang.Integer" description="Maximum number of seconds we keep waiting for completion of the task"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r03gnDEeyeMc5IFmmFhg" name="retryTaskDurationInSeconds" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r03wnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r04AnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r04QnDEeyeMc5IFmmFhg" name="isExecuting" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r04gnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_I7r04wnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_I7r05AnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7r05QnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7r05gnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_I7r05wnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_I7r06AnDEeyeMc5IFmmFhg" name="Update task status" outgoing="_I7r1VQnDEeyeMc5IFmmFhg" incoming="_I7r1UgnDEeyeMc5IFmmFhg _I7r1WAnDEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7r06QnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7r06gnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_I7r06wnDEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="def String desc=&quot;Task &quot; + String.valueOf(failedTaskId) + &quot; is now with state [&quot; + taskState + &quot;]&quot;&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_I7r07AnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
          <referencedElements xmi:type="process:Data" xmi:id="_I7r07QnDEeyeMc5IFmmFhg" name="taskState" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
        </stepSummary>
        <operations xmi:type="expression:Operation" xmi:id="_I7r07gnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r07wnDEeyeMc5IFmmFhg" name="retryResultCode" content="retryResultCode" type="TYPE_VARIABLE" returnType="java.lang.Integer">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r08AnDEeyeMc5IFmmFhg" documentation="0: not retried, not completed&#xD;&#xA;1: not retried, completed&#xD;&#xA;10: retried, not completed&#xD;&#xA;11: retried, completed" name="retryResultCode" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r08QnDEeyeMc5IFmmFhg" name="setResultCode" content="def int result_code = 0;&#xD;&#xA;&#xD;&#xA;if (isRetried) {&#xD;&#xA;&#x9;result_code += 10;&#xD;&#xA;}&#xD;&#xA;if (isCompleted) {&#xD;&#xA;&#x9;result_code += 1;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return result_code;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r08gnDEeyeMc5IFmmFhg" name="isCompleted" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r08wnDEeyeMc5IFmmFhg" name="isRetried" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r09AnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_I7r09QnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r09gnDEeyeMc5IFmmFhg" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r09wnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0-AnDEeyeMc5IFmmFhg" name="taskState" content="taskState" type="TYPE_VARIABLE">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0-QnDEeyeMc5IFmmFhg" name="taskState" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r0-gnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setStatus">
            <inputTypes>java.lang.String</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_I7r0-wnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r0_AnDEeyeMc5IFmmFhg" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r0_QnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r0_gnDEeyeMc5IFmmFhg" name="setIsRetrying" content="import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def is_retrying = true;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (isCompleted) {&#xD;&#xA;&#x9;&#x9;is_retrying = false;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsRetrying&quot;, &quot;Task &quot; + String.valueOf(failedTaskId) + &quot; is completed, it will no longer be retried&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;} else if ((taskState == null)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(ActivityStates.ABORTED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(ActivityStates.CANCELLED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(ActivityStates.SKIPPED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(ActivityStates.COMPLETED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(taskStateNotFound)) {&#xD;&#xA;&#x9;&#x9;is_retrying = false;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsRetrying&quot;, &quot;Task &quot; + String.valueOf(failedTaskId) + &quot; with state [&quot; + taskState + &quot;] will no longer be retried&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// CFR 29/10/2020 - Correction UAT Lot 2 Sprint 1&#xD;&#xA;&#x9;&#x9;int nb_retries = taskToRetry.nbRetries;&#xD;&#xA;&#x9;&#x9;if (nb_retries >= maxNumberOfRetries) {&#xD;&#xA;&#x9;&#x9;&#x9;is_retrying = false;&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;setIsRetrying&quot;, &quot;Task &quot; + String.valueOf(failedTaskId) + &quot; with state [&quot; + taskState + &quot;] will no longer be retried as it has already been retried &quot; + String.valueOf(nb_retries) + &quot; times, i.e. more or equal to the max number of attempt (&quot; + String.valueOf(maxNumberOfRetries) + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsRetrying&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return is_retrying;&#xD;&#xA;&#x9;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r0_wnDEeyeMc5IFmmFhg" name="maxNumberOfRetries" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r1AAnDEeyeMc5IFmmFhg" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r1AQnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r1AgnDEeyeMc5IFmmFhg" name="taskState" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r1AwnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="process:Data" xmi:id="_I7r1BAnDEeyeMc5IFmmFhg" name="isCompleted" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r1BQnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r1BgnDEeyeMc5IFmmFhg" type="JAVA_METHOD" expression="setIsRetrying">
            <inputTypes>java.lang.Boolean</inputTypes>
          </operator>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_I7r1BwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_I7r1CAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7r1CQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7r1CgnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_I7r1CwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:EndEvent" xmi:id="_I7r1DAnDEeyeMc5IFmmFhg" name="End Retry Task" incoming="_I7r1VQnDEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7r1DQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7r1DgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_I7r1DwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_I7r1EAnDEeyeMc5IFmmFhg" name="Get Failed Task Id" outgoing="_I7r1WwnDEeyeMc5IFmmFhg" incoming="_I7r1QQnDEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_I7r1EQnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_I7r1EgnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_I7r1EwnDEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <operations xmi:type="expression:Operation" xmi:id="_I7r1FAnDEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_I7r1FQnDEeyeMc5IFmmFhg" name="failedTaskId" content="failedTaskId" type="TYPE_VARIABLE" returnType="java.lang.Long">
            <referencedElements xmi:type="process:Data" xmi:id="_I7r1FgnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_I7r1FwnDEeyeMc5IFmmFhg" name="getTaskId" content="return taskToRetry.getTaskId();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_I7r1GAnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_I7r1GQnDEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_I7r1GgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_I7r1GwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_I7r1HAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_I7r1HQnDEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_I7r1HgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <data xmi:type="process:BusinessObjectData" xmi:id="_I7r1HwnDEeyeMc5IFmmFhg" name="taskToRetry" dataType="_I7r16wnDEeyeMc5IFmmFhg" className="com.sgdbf.model.LogFailedTasks">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1IAnDEeyeMc5IFmmFhg" name="init_taskToRetry" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;&#xD;&#xA;def LogFailedTasks task_to_rety = null;&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;log_file.info(&quot;init_taskToRetry&quot;, &quot;Retrieving task to retry with persistence id &quot; + inputFailedTaskPersistenceId);&#xD;&#xA;&#x9;task_to_rety = logFailedTasksDAO.findByPersistenceId(Long.valueOf(inputFailedTaskPersistenceId));&#xD;&#xA;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_taskToRetry&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return task_to_rety;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.sgdbf.model.LogFailedTasks">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_I7r1IQnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          <referencedElements xmi:type="process:ContractInput" xmi:id="_I7r1IgnDEeyeMc5IFmmFhg" name="inputFailedTaskPersistenceId">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_I7r1IwnDEeyeMc5IFmmFhg"/>
          </referencedElements>
          <referencedElements xmi:type="expression:Expression" xmi:id="_I7r1JAnDEeyeMc5IFmmFhg" name="logFailedTasksDAO" content="logFailedTasksDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.LogFailedTasksDAO" returnTypeFixed="true"/>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1JQnDEeyeMc5IFmmFhg" name="isFailed" dataType="_I7r14wnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1JgnDEeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1JwnDEeyeMc5IFmmFhg" name="isExecuting" dataType="_I7r14wnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1KAnDEeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1KQnDEeyeMc5IFmmFhg" name="taskState" dataType="_I7r16AnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1KgnDEeyeMc5IFmmFhg" content=""/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1KwnDEeyeMc5IFmmFhg" name="keepWaiting" dataType="_I7r14wnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1LAnDEeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1LQnDEeyeMc5IFmmFhg" name="delayBetweenRetriesInMinutesArray" multiple="true" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1LgnDEeyeMc5IFmmFhg" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1LwnDEeyeMc5IFmmFhg" documentation="0: not retried, not completed&#xD;&#xA;1: not retried, completed&#xD;&#xA;10: retried, not completed&#xD;&#xA;11: retried, completed" name="retryResultCode" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1MAnDEeyeMc5IFmmFhg" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1MQnDEeyeMc5IFmmFhg" name="isRetried" dataType="_I7r14wnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1MgnDEeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1MwnDEeyeMc5IFmmFhg" name="isCompleted" dataType="_I7r14wnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1NAnDEeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1NQnDEeyeMc5IFmmFhg" name="failedTaskId" dataType="_I7r15gnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1NgnDEeyeMc5IFmmFhg" content="" returnType="java.lang.Long"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_I7r1NwnDEeyeMc5IFmmFhg" name="retryStartTime" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.time.OffsetDateTime">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1OAnDEeyeMc5IFmmFhg" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_I7r1OQnDEeyeMc5IFmmFhg" name="maxNumberOfRetries" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_I7r1OgnDEeyeMc5IFmmFhg" name="inputMaxNumberOfRetries" content="inputMaxNumberOfRetries" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_I7r1OwnDEeyeMc5IFmmFhg" name="inputMaxNumberOfRetries" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_I7r1PAnDEeyeMc5IFmmFhg"/>
          </referencedElements>
        </defaultValue>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_I7r1PQnDEeyeMc5IFmmFhg">
        <targetForm xmi:type="expression:Expression" xmi:id="_I7r1PgnDEeyeMc5IFmmFhg" name="instantiateRetryFailedTask" content="11000222-5a24-4466-ad9b-5affbcdd0d11" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_I7r1PwnDEeyeMc5IFmmFhg">
        <targetForm xmi:type="expression:Expression" xmi:id="_I7r1QAnDEeyeMc5IFmmFhg" name="caseoverview" content="981aadcf-631a-4742-9507-59e85e93c39e" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7r1QQnDEeyeMc5IFmmFhg" target="_I7r1EAnDEeyeMc5IFmmFhg" source="_I7r0SAnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7r1QgnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r1QwnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7r1RAnDEeyeMc5IFmmFhg" name="Still failed" target="_I7r0bgnDEeyeMc5IFmmFhg" source="_I7r0TAnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7r1RQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r1RgnDEeyeMc5IFmmFhg" name="isFailed" content="isFailed" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_I7r1RwnDEeyeMc5IFmmFhg" name="isFailed" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7r1SAnDEeyeMc5IFmmFhg" target="_I7r0qgnDEeyeMc5IFmmFhg" source="_I7r0bgnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7r1SQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r1SgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7r1SwnDEeyeMc5IFmmFhg" target="_I7r0sAnDEeyeMc5IFmmFhg" source="_I7r0qgnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7r1TAnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r1TQnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7r1TgnDEeyeMc5IFmmFhg" name="Keep waiting" target="_I7r0qgnDEeyeMc5IFmmFhg" source="_I7r0sAnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7r1TwnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r1UAnDEeyeMc5IFmmFhg" name="keepWaiting" content="keepWaiting" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_I7r1UQnDEeyeMc5IFmmFhg" name="keepWaiting" dataType="_I7r14wnDEeyeMc5IFmmFhg"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7r1UgnDEeyeMc5IFmmFhg" target="_I7r06AnDEeyeMc5IFmmFhg" source="_I7r0sAnDEeyeMc5IFmmFhg" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7r1UwnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r1VAnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7r1VQnDEeyeMc5IFmmFhg" target="_I7r1DAnDEeyeMc5IFmmFhg" source="_I7r06AnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7r1VgnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r1VwnDEeyeMc5IFmmFhg" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7r1WAnDEeyeMc5IFmmFhg" name="No longer failed" target="_I7r06AnDEeyeMc5IFmmFhg" source="_I7r0TAnDEeyeMc5IFmmFhg" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7r1WQnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r1WgnDEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_I7r1WwnDEeyeMc5IFmmFhg" target="_I7r0TAnDEeyeMc5IFmmFhg" source="_I7r1EAnDEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_I7r1XAnDEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_I7r1XQnDEeyeMc5IFmmFhg" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_I7r1XgnDEeyeMc5IFmmFhg" name="Administrator" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_I7r1XwnDEeyeMc5IFmmFhg" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_I7r1YAnDEeyeMc5IFmmFhg">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_I7r1YQnDEeyeMc5IFmmFhg" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_I7r1YgnDEeyeMc5IFmmFhg"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_I7r1YwnDEeyeMc5IFmmFhg"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_I7r1ZAnDEeyeMc5IFmmFhg">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_I7r1ZQnDEeyeMc5IFmmFhg"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_I7r1ZgnDEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1ZwnDEeyeMc5IFmmFhg" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1aAnDEeyeMc5IFmmFhg" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_Dd720IExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_Dei60IExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1awnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1bAnDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1bQnDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1bgnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1bwnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1cAnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1cQnDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1cgnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1cwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1dAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1dQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1dgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1dwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1eAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1eQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1egnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1ewnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1fAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjcB9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjcR9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjch9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjcx9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjdB9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjdR9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjdh9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjdx9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1fQnDEeyeMc5IFmmFhg" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1fgnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1fwnDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1gAnDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1gQnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1ggnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1gwnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1hAnDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1hQnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1hgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1hwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1iAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1iQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1ignDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1iwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1jAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1jQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1jgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1jwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjeB9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjeR9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjeh9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjex9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjfB9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjfR9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjfh9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_onEjfx9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1kAnDEeyeMc5IFmmFhg" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1kQnDEeyeMc5IFmmFhg" name="logClass" value="RetryFailedTask" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1kgnDEeyeMc5IFmmFhg" name="intervalToCheckTaskCompletionInSeconds" value="10" typeClassname="java.lang.Integer" description="Number of seconds between 2 checks of task completion"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1kwnDEeyeMc5IFmmFhg" name="maxWaitTimeForCompletionInSeconds" value="50" typeClassname="java.lang.Integer" description="Maximum number of seconds we keep waiting for completion of the task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1lAnDEeyeMc5IFmmFhg" name="taskStateNotFound" value="Task no longer exists" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_I7r1lQnDEeyeMc5IFmmFhg" name="bonita" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_I7r1lgnDEeyeMc5IFmmFhg">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_I7r1lwnDEeyeMc5IFmmFhg" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_I7r1mAnDEeyeMc5IFmmFhg"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_I7r1mQnDEeyeMc5IFmmFhg"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_I7r1mgnDEeyeMc5IFmmFhg"/>
            <users xmi:type="actormapping:Users" xmi:id="_I7r1mwnDEeyeMc5IFmmFhg"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_I7r1nAnDEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1nQnDEeyeMc5IFmmFhg" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1ngnDEeyeMc5IFmmFhg" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_DfJ-0IExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_Df6z0IExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1oQnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1ognDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1ownDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1pAnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1pQnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1pgnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1pwnDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1qAnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1qQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1qgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1qwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1rAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1rQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1rgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1rwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1sAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1sQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1sgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGQB9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGQR9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGQh9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGQx9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGRB9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGRR9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGRh9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGRx9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1swnDEeyeMc5IFmmFhg" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1tAnDEeyeMc5IFmmFhg" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1tQnDEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1tgnDEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1twnDEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1uAnDEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1uQnDEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1ugnDEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1uwnDEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1vAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1vQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1vgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1vwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1wAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1wQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1wgnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1wwnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1xAnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_I7r1xQnDEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGSB9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGSR9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGSh9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGSx9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGTB9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGTR9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGTh9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_oqtGTx9uEey3_r-hyI8vrQ" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_I7r1xgnDEeyeMc5IFmmFhg" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1xwnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1yAnDEeyeMc5IFmmFhg" name="intervalToCheckTaskCompletionInSeconds" typeClassname="java.lang.Integer" description="Number of seconds between 2 checks of task completion"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1yQnDEeyeMc5IFmmFhg" name="maxWaitTimeForCompletionInSeconds" typeClassname="java.lang.Integer" description="Maximum number of seconds we keep waiting for completion of the task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1ygnDEeyeMc5IFmmFhg" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1ywnDEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1zAnDEeyeMc5IFmmFhg" name="intervalToCheckTaskCompletionInSeconds" typeClassname="java.lang.Integer" description="Number of seconds between 2 checks of task completion"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1zQnDEeyeMc5IFmmFhg" name="maxWaitTimeForCompletionInSeconds" typeClassname="java.lang.Integer" description="Maximum number of seconds we keep waiting for completion of the task"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_I7r1zgnDEeyeMc5IFmmFhg" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
      <contract xmi:type="process:Contract" xmi:id="_I7r1zwnDEeyeMc5IFmmFhg">
        <inputs xmi:type="process:ContractInput" xmi:id="_I7r10AnDEeyeMc5IFmmFhg" name="inputFailedTaskPersistenceId">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_I7r10QnDEeyeMc5IFmmFhg"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_I7r10gnDEeyeMc5IFmmFhg" name="inputMaxNumberOfRetries" type="INTEGER">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_I7r10wnDEeyeMc5IFmmFhg"/>
        </inputs>
      </contract>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r11AnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r11QnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r11gnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r11wnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r12AnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r12QnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r12gnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r12wnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r13AnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r13QnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r13gnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r13wnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_I7r14AnDEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_I7r14QnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_I7r14gnDEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <elements xmi:type="process:Pool" xmi:id="_njwTEAsnEeyeMc5IFmmFhg" name="ReportFailedTasks">
      <elements xmi:type="process:StartEvent" xmi:id="_Ll6rAAsuEeyeMc5IFmmFhg" name="Start Report" outgoing="_Q_9R0AsuEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_Ll9uUQsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_Ll9uUAsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_Ll-VYAsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_NkkwEAsuEeyeMc5IFmmFhg" name="Search Failed tasks" outgoing="_rkC0gAsuEeyeMc5IFmmFhg _NYYcQAswEeyeMc5IFmmFhg" incoming="_Q_9R0AsuEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_NkkwEQsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_NkkwEgsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_NkkwEwsuEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="return &quot;Detected &quot; + String.valueOf(nbTasksDetected) + &quot; failed tasks&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_SdPbQAtGEeyeMc5IFmmFhg" name="nbTasksDetected" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
        </stepSummary>
        <connectors xmi:type="process:Connector" xmi:id="_NkkwFQsuEeyeMc5IFmmFhg" name="searchFailedTasks" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_NkkwFgsuEeyeMc5IFmmFhg" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NkkwFwsuEeyeMc5IFmmFhg" key="script">
              <expression xmi:type="expression:Expression" xmi:id="_NkkwGAsuEeyeMc5IFmmFhg" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NkkwGQsuEeyeMc5IFmmFhg" key="variables"/>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NklXIAsuEeyeMc5IFmmFhg" key="fakeScriptExpression">
              <expression xmi:type="expression:Expression" xmi:id="_NklXIQsuEeyeMc5IFmmFhg" name="searchFailedTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import java.time.OffsetDateTime;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;import java.util.HashSet;&#xD;&#xA;&#xD;&#xA;import com.bonitasoft.engine.api.ProcessAPI;&#xD;&#xA;import com.bonitasoft.engine.api.LogAPI;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorInstance;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorInstanceWithFailureInfo&#xD;&#xA;import org.bonitasoft.engine.search.Order;&#xD;&#xA;import org.bonitasoft.engine.search.SearchOptions;&#xD;&#xA;import org.bonitasoft.engine.search.SearchOptionsBuilder;&#xD;&#xA;import org.bonitasoft.engine.search.SearchResult;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityInstance;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityInstanceSearchDescriptor;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import org.bonitasoft.engine.bpm.process.ProcessDefinition;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorInstancesSearchDescriptor;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorState;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.FlowNodeType;&#xD;&#xA;&#xD;&#xA;def List&lt;Map&lt;String, Object>> detected_failed_tasks = [];&#xD;&#xA;def String job_error = &quot;&quot;;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Set minimum date for oldest task searched&#xD;&#xA;&#x9;def OffsetDateTime time_now = OffsetDateTime.now();&#xD;&#xA;&#x9;def OffsetDateTime oldest_task_date = time_now.minusDays(oldestNewTaskDetectedInDays);&#xD;&#xA;&#x9;def Long oldest_task_timestamp_value = oldest_task_date.toEpochSecond() * 1000L;&#x9;// Number of milliseconds since 01/01/1970&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Search failed tasks : Automatic tasks in FAILED state&#xD;&#xA;&#x9;log_file.info(&quot;searchFailedTasks&quot;, &quot;Searching for new Automatic failed tasks since [&quot; + oldest_task_date.toString() + &quot;]&quot;);&#xD;&#xA;&#x9;def ProcessAPI process_api = apiAccessor.getProcessAPI();&#xD;&#xA;&#x9;List&lt;ActivityInstance> list_activities = searchFailedTasksOfType(FlowNodeType.AUTOMATIC_TASK, oldest_task_timestamp_value, maxNumberOfFailedTasks, process_api, log_file);&#xD;&#xA;&#x9;def int nb_automatic_tasks = list_activities.size();&#xD;&#xA;&#xD;&#xA;&#x9;if (nb_automatic_tasks &lt; maxNumberOfFailedTasks) {&#xD;&#xA;&#x9;&#x9;// Add failed Human task if any&#xD;&#xA;&#x9;&#x9;List&lt;ActivityInstance> list_activities_human = searchFailedTasksOfType(FlowNodeType.HUMAN_TASK, oldest_task_timestamp_value, maxNumberOfFailedTasks - nb_automatic_tasks, process_api, log_file);&#xD;&#xA;&#x9;&#x9;if (list_activities_human.size() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;list_activities.addAll(list_activities_human);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (list_activities.size() > 0) {&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;searchFailedTasks&quot;, &quot;Found &quot; + String.valueOf(list_activities.size()));&#xD;&#xA;&#x9;&#x9;// Check if failed tasks were previously already detected&#xD;&#xA;&#x9;&#x9;for (ActivityInstance one_activity : list_activities) {&#xD;&#xA;&#x9;&#x9;&#x9;def HashMap&lt;String, Object> new_failed_task = [:];&#xD;&#xA;&#x9;&#x9;&#x9;def Long failed_task_id = one_activity.id;&#xD;&#xA;&#x9;&#x9;&#x9;new_failed_task[&quot;taskId&quot;] = failed_task_id;&#xD;&#xA;&#x9;&#x9;&#x9;new_failed_task[&quot;activityInstance&quot;] = one_activity;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Additional query to retrieve process details&#xD;&#xA;&#x9;&#x9;&#x9;def long process_def_id = one_activity.getProcessDefinitionId();&#xD;&#xA;&#x9;&#x9;&#x9;log_file.debug(&quot;searchFailedTasks&quot;, &quot;Searching process definition &quot; + String.valueOf(process_def_id) + &quot; for task &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;def ProcessDefinition process_def = process_api.getProcessDefinition(process_def_id);&#xD;&#xA;&#x9;&#x9;&#x9;new_failed_task[&quot;processName&quot;] = process_def.getName();&#xD;&#xA;&#x9;&#x9;&#x9;new_failed_task[&quot;processVersion&quot;] = process_def.getVersion()&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;// Search failed connector on activityInstance&#xD;&#xA;&#x9;&#x9;&#x9;log_file.debug(&quot;searchFailedTasks&quot;, &quot;Searching failed connector for task &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;def SearchOptionsBuilder search_connector_options = new SearchOptionsBuilder(0, 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.filter(ConnectorInstancesSearchDescriptor.CONTAINER_ID, failed_task_id)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.filter(ConnectorInstancesSearchDescriptor.STATE, ConnectorState.FAILED.name());&#xD;&#xA;&#x9;&#x9;&#x9;def SearchResult&lt;ConnectorInstance> connector_search_result = process_api.searchConnectorInstances(search_connector_options.done());&#xD;&#xA;&#x9;&#x9;&#x9;def int nb_connectors = connector_search_result.getCount();&#xD;&#xA;&#x9;&#x9;&#x9;if (nb_connectors == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;searchFailedTasks&quot;, &quot;No connector found for task &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task[&quot;connectorName&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task[&quot;connectorType&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task[&quot;connectorError&quot;] = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ConnectorInstance connectorInstance = connector_search_result.getResult().get(0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def String connector_id = connectorInstance.getConnectorId();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def String connector_name = connectorInstance.getName();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;searchFailedTasks&quot;, &quot;Found failed connector [&quot; + connector_name + &quot;] of type [&quot; + connector_id + &quot;] for activityInstance [&quot; + one_activity.name + &quot;] with id &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task[&quot;connectorName&quot;] = connector_name;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task[&quot;connectorType&quot;] = connector_id;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Additional query to retrieve details of error&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task[&quot;connectorError&quot;] = searchConnectorException(connectorInstance.id, process_api, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Add failed task to the list of new detected tasks&#xD;&#xA;&#x9;&#x9;&#x9;detected_failed_tasks.add(new_failed_task);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;searchFailedTasks&quot;, e);&#xD;&#xA;&#x9;job_error = &quot;Exception while detecting new failed tasks : &quot; +e.getMessage();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return [newFailedTasksDetected: detected_failed_tasks, jobError: job_error];&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;def List&lt;ActivityInstance> searchFailedTasksOfType(FlowNodeType activity_type, long oldest_task_timestamp_value, int max_number_of_tasks, ProcessAPI process_api, LogFile log_file) {&#xD;&#xA;&#x9;List&lt;ActivityInstance> list_activities = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Build query&#xD;&#xA;&#x9;&#x9;def SearchOptionsBuilder task_search = new SearchOptionsBuilder(0, max_number_of_tasks)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;.filter(ActivityInstanceSearchDescriptor.STATE_NAME, ActivityStates.FAILED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;.filter(ActivityInstanceSearchDescriptor.ACTIVITY_TYPE, activity_type)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;.greaterThan(ActivityInstanceSearchDescriptor.LAST_MODIFICATION_DATE, oldest_task_timestamp_value);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Execute search&#xD;&#xA;&#x9;&#x9;def SearchResult&lt;ActivityInstance> tasks_search_result = process_api.searchActivities(task_search.done())&#xD;&#xA;&#x9;&#x9;def int nb_detected_tasks = tasks_search_result.getCount();&#xD;&#xA;&#x9;&#x9;if (nb_detected_tasks == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;searchFailedTasksOfType&quot;, &quot;Search executed for activity type [&quot; + activity_type.name() + &quot;], no new failed tasks detected&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Get the list of failed activities&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;searchFailedTasksOfType&quot;, &quot;Search executed for activity type [&quot; + activity_type.name() + &quot;], found &quot; + String.valueOf(nb_detected_tasks) + &quot; failed tasks&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;list_activities = tasks_search_result.getResult();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;log_file.exception(&quot;searchFailedTasksOfType&quot;, e);&#xD;&#xA;&#x9;&#x9;throw e;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return list_activities;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def String searchConnectorException(Long failed_connector_id, ProcessAPI process_api, LogFile log_file) {&#xD;&#xA;&#x9;def String connector_error = &quot;&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;searchConnectorException&quot;, &quot;Searching failed connector log for connectorId &quot; + String.valueOf(failed_connector_id));&#xD;&#xA;&#x9;&#x9;ConnectorInstanceWithFailureInfo  failure_info = process_api.getConnectorInstanceWithFailureInformation(failed_connector_id);&#xD;&#xA;&#x9;&#x9;connector_error = failure_info.getExceptionMessage();&#xD;&#xA;&#x9;&#x9;def String stack_trace = failure_info.getStackTrace();&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;searchConnectorException&quot;, &quot;Failed connector message : &quot; + connector_error + &quot; - Stack trace : &quot; + stack_trace);&#xD;&#xA;&#x9;&#x9;if (!stack_trace.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;connector_error += &quot;\n\nStack trace: \n&quot; + stack_trace;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;log_file.exception(&quot;searchConnectorException&quot;, e);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return connector_error;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_Hk6YEAtMEeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" typeClassname="java.lang.Integer" description="Number of days in the past for oldest tasks reported"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_Hk6YEQtMEeyeMc5IFmmFhg" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_Hk6YEgtMEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_Hk6YEwtMEeyeMc5IFmmFhg" name="maxNumberOfFailedTasks" typeClassname="java.lang.Integer" description="Maximum number of failed tasks searched"/>
              </expression>
            </parameters>
          </configuration>
          <outputs xmi:type="expression:Operation" xmi:id="_NklXJwsuEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_NklXKAsuEeyeMc5IFmmFhg" name="jobError" content="jobError" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_yBXl0AtFEeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_NklXKgsuEeyeMc5IFmmFhg" name="setjobError" content="def String err_msg = &quot;&quot;;&#xD;&#xA;if (! jobError.isEmpty()) {&#xD;&#xA;&#x9;err_msg = jobError + &quot; - &quot;;&#xD;&#xA;}&#xD;&#xA;err_msg += result[&quot;jobError&quot;];&#xD;&#xA;&#xD;&#xA;return err_msg;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="process:Data" xmi:id="_NklXKwsuEeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
              <referencedElements xmi:type="definition:Output" xmi:id="_NklXLAsuEeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_Nkl-MAsuEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </outputs>
          <outputs xmi:type="expression:Operation" xmi:id="_Nkl-MQsuEeyeMc5IFmmFhg">
            <leftOperand xmi:type="expression:Expression" xmi:id="_Nkl-MgsuEeyeMc5IFmmFhg" name="listFailedTasks" content="listFailedTasks" type="TYPE_VARIABLE" returnType="java.util.List">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_VIGgAAs7EeyeMc5IFmmFhg" documentation="List of Map with fields :&#xD;&#xA;taskId, activityInstance,processName,processVersion,connectorName, connectorType,connectorError" name="listFailedTasks" multiple="true" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.util.Map"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_Nkl-NAsuEeyeMc5IFmmFhg" name="result" content="return result[&quot;newFailedTasksDetected&quot;];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="definition:Output" xmi:id="_VIGgAQs7EeyeMc5IFmmFhg" name="result" type="java.lang.Object"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_Nkl-OAsuEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
          </outputs>
        </connectors>
        <operations xmi:type="expression:Operation" xmi:id="_NkmlRAsuEeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_NkmlRQsuEeyeMc5IFmmFhg" name="nbTasksDetected" content="nbTasksDetected" type="TYPE_VARIABLE" returnType="java.lang.Integer">
            <referencedElements xmi:type="process:Data" xmi:id="_uBH48AtEEeyeMc5IFmmFhg" name="nbTasksDetected" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_NkmlRwsuEeyeMc5IFmmFhg" name="setNbDetectedFailedTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_detected=0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (listFailedTasks != null) {&#xD;&#xA;&#x9;&#x9;nb_detected = listFailedTasks.size();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;log_file.debug(&quot;setNbDetectedFailedTasks&quot;, &quot;Found &quot; + String.valueOf(nb_detected) + &quot; failed tasks&quot;);&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setNbDetectedFailedTasks&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return nb_detected;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_oDkVYAtEEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String"/>
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oDkVYQtEEeyeMc5IFmmFhg" documentation="List of Map with fields :&#xD;&#xA;taskId, activityInstance,processName,processVersion,connectorName, connectorType,connectorError" name="listFailedTasks" multiple="true" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.util.Map"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_NkmlSgsuEeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_NkmlSwsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_NkmlTAsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_NkmlTQsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_NkmlTgsuEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_NkmlTwsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_onFUIAsuEeyeMc5IFmmFhg" name="Build report email" outgoing="_vBWB0AsuEeyeMc5IFmmFhg" incoming="_rkC0gAsuEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_onPFIQsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_onPFIAsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_onPFIgsuEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="def desc = &quot;Email title: &quot; + emailTitle;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_fvJ9QAtGEeyeMc5IFmmFhg" name="emailTitle" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
        </stepSummary>
        <operations xmi:type="expression:Operation" xmi:id="_YVfCAAs7EeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_YVfCAQs7EeyeMc5IFmmFhg" name="emailTitle" content="emailTitle" type="TYPE_VARIABLE">
            <referencedElements xmi:type="process:Data" xmi:id="_ZJAwsAs7EeyeMc5IFmmFhg" name="emailTitle" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_YVfCAgs7EeyeMc5IFmmFhg" name="setTitle" content="def title = emailTitleStart + &quot; : &quot;;&#xD;&#xA;&#xD;&#xA;def int nb_failed_tasks = listFailedTasks.size() ;&#xD;&#xA;if (jobError) {&#xD;&#xA;&#x9;title += &quot;Report job ERROR&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;} else {&#xD;&#xA;&#x9;if (nb_failed_tasks == 0) {&#xD;&#xA;&#x9;&#x9;title += &quot;OK - No failed tasks&quot;;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;title += String.valueOf(nb_failed_tasks) + &quot; FAILED TASK&quot;;&#xD;&#xA;&#x9;&#x9;if (nb_failed_tasks > 1) {&#xD;&#xA;&#x9;&#x9;&#x9;title += &quot;S&quot;;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return title;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_oglhMAtHEeyeMc5IFmmFhg" name="emailTitleStart" typeClassname="java.lang.String"/>
            <referencedElements xmi:type="process:Data" xmi:id="_oglhMQtHEeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_oglhMgtHEeyeMc5IFmmFhg" documentation="List of Map with fields :&#xD;&#xA;taskId, activityInstance,processName,processVersion,connectorName, connectorType,connectorError" name="listFailedTasks" multiple="true" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.util.Map"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_YVfCAws7EeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_ERWv4As8EeyeMc5IFmmFhg">
          <leftOperand xmi:type="expression:Expression" xmi:id="_ERWv4Qs8EeyeMc5IFmmFhg" name="emailBody" content="emailBody" type="TYPE_VARIABLE">
            <referencedElements xmi:type="process:Data" xmi:id="_EznvcAs8EeyeMc5IFmmFhg" name="emailBody" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_ERWv4gs8EeyeMc5IFmmFhg" name="buildBody" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import java.text.SimpleDateFormat&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityInstance&#xD;&#xA;&#xD;&#xA;def String body = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Add style for table&#xD;&#xA;&#x9;body += &quot;&lt;html>&lt;head> &lt;style> table, th, td { border: 1px solid black; border-collapse: collapse; }&lt;/style>&lt;/head>&lt;body>&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def int nb_failed_tasks = listFailedTasks.size() ;&#xD;&#xA;&#x9;if (nb_failed_tasks == 0) {&#xD;&#xA;&#x9;&#x9;body += &quot;No failed tasks to report&quot;;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;body += &quot;The following failed tasks have been detected :&lt;br>&lt;br>&quot;;&#xD;&#xA;&#x9;&#x9;body += &quot;&lt;table>&quot;;&#xD;&#xA;&#x9;&#x9;body += &quot;&lt;tr>&lt;th>Task id&lt;/th>&lt;th>Task&lt;/th>&lt;th>Task state&lt;/th>&lt;th>Task date&lt;/th>&lt;th>Process&lt;/th>&lt;th>Process version&lt;/th>&lt;th>Connector&lt;/th>&lt;th>Connector type&lt;/th>&lt;th>Connector error&lt;/th>&lt;/tr>&quot;;&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_failed_tasks; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;def one_task = listFailedTasks[i];&#xD;&#xA;&#x9;&#x9;&#x9;def Long task_id = one_task[&quot;taskId&quot;];&#xD;&#xA;&#x9;&#x9;&#x9;if (task_id != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Build url&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def String url = MailContent.getUrlBase(bonita_server_host, String.valueOf(bonita_server_port)) + '/bonita/portal/homepage#?isarchived=false&amp;_p=taskmoredetailsadmin&amp;_pf=2&amp;id=' + String.valueOf(task_id);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;body += &quot;&lt;tr>&lt;td>&lt;a href='&quot; + url + &quot;'>&quot; + task_id + &quot;&lt;/a>&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;body += &quot;&lt;tr>&lt;td>&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;def ActivityInstance activity_instance = one_task[&quot;activityInstance&quot;];&#xD;&#xA;&#x9;&#x9;&#x9;if (activity_instance != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;body += &quot;&lt;td>&quot; + activity_instance.getDisplayName() + &quot;&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;body += &quot;&lt;td>&quot; + activity_instance.getState() + &quot;&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Date state_date = activity_instance.getReachedStateDate();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SimpleDateFormat df = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;body += &quot;&lt;td>&quot; + df.format(state_date) + &quot;&lt;/td>&quot;;;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;body += &quot;&lt;td>&lt;/td>&lt;td>&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;body += &quot;&lt;td>&quot; + one_task[&quot;processName&quot;] + &quot;&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;body += &quot;&lt;td>&quot; + one_task[&quot;processVersion&quot;] + &quot;&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;body += &quot;&lt;td>&quot; + one_task[&quot;connectorName&quot;] + &quot;&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;body += &quot;&lt;td>&quot; + one_task[&quot;connectorType&quot;] + &quot;&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;body += &quot;&lt;td>&quot; + one_task[&quot;connectorError&quot;] + &quot;&lt;/td>&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;body += &quot;&lt;/tr>&quot;;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;body += &quot;&lt;/table>&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;body += &quot;&lt;/body>&lt;/html>&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;body = &quot;Exception: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return body;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;buildBody&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;buildBody&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_a37mQAtfEeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String"/>
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_a37mQQtfEeyeMc5IFmmFhg" documentation="List of Map with fields :&#xD;&#xA;taskId, activityInstance,processName,processVersion,connectorName, connectorType,connectorError" name="listFailedTasks" multiple="true" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.util.Map"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_a4EwMAtfEeyeMc5IFmmFhg" name="bonita_server_port" typeClassname="java.lang.Integer"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_a4EwMQtfEeyeMc5IFmmFhg" name="bonita_server_host" typeClassname="java.lang.String"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_ERWv4ws8EeyeMc5IFmmFhg" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_onPFIwsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_onPFJAsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_onPFJQsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_onPsMAsuEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_onPFJgsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_tSrgkAsuEeyeMc5IFmmFhg" name="Send report" outgoing="_xDPoIAsuEeyeMc5IFmmFhg" incoming="_vBWB0AsuEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_tSsHoQsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_tSsHoAsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_tSsHogsuEeyeMc5IFmmFhg" name="descriptionAfterCompletion()" content="def desc = &quot;Report sent to: &quot; + emailRecipients;&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_hKKisAtGEeyeMc5IFmmFhg" name="emailRecipients" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
        </stepSummary>
        <connectors xmi:type="process:Connector" xmi:id="_durREAs3EeyeMc5IFmmFhg" name="SendReportEmail" definitionId="email" event="ON_ENTER" definitionVersion="1.2.0">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_durREQs3EeyeMc5IFmmFhg" definitionId="email" version="1.2.0" modelVersion="7.12.0-004">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durREgs3EeyeMc5IFmmFhg" key="smtpHost">
              <expression xmi:type="expression:Expression" xmi:id="_durREws3EeyeMc5IFmmFhg" name="smtp_host" content="smtp_host" interpreter="GROOVY" type="TYPE_PARAMETER" returnTypeFixed="true">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_durRFAs3EeyeMc5IFmmFhg" name="smtp_host" typeClassname="java.lang.String" description="SMTP Host"/>
              </expression>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRFQs3EeyeMc5IFmmFhg" key="smtpPort">
              <expression xmi:type="expression:Expression" xmi:id="_durRFgs3EeyeMc5IFmmFhg" name="smtp_port" content="smtp_port" interpreter="GROOVY" type="TYPE_PARAMETER" returnType="java.lang.Integer" returnTypeFixed="true">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_durRFws3EeyeMc5IFmmFhg" name="smtp_port" typeClassname="java.lang.Integer" description="SMTP Port"/>
              </expression>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRGAs3EeyeMc5IFmmFhg" key="sslSupport">
              <expression xmi:type="expression:Expression" xmi:id="_durRGQs3EeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRGgs3EeyeMc5IFmmFhg" key="starttlsSupport">
              <expression xmi:type="expression:Expression" xmi:id="_durRGws3EeyeMc5IFmmFhg" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRHAs3EeyeMc5IFmmFhg" key="trustCertificate">
              <expression xmi:type="expression:Expression" xmi:id="_durRHQs3EeyeMc5IFmmFhg" name="false" content="false" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRHgs3EeyeMc5IFmmFhg" key="userName">
              <expression xmi:type="expression:Expression" xmi:id="_durRHws3EeyeMc5IFmmFhg" name="smtp_username" content="smtp_username" interpreter="GROOVY" type="TYPE_PARAMETER" returnTypeFixed="true">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_durRIAs3EeyeMc5IFmmFhg" name="smtp_username" typeClassname="java.lang.String"/>
              </expression>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRIQs3EeyeMc5IFmmFhg" key="password">
              <expression xmi:type="expression:Expression" xmi:id="_durRIgs3EeyeMc5IFmmFhg" name="smtp_password" content="smtp_password" interpreter="GROOVY" type="TYPE_PARAMETER" returnTypeFixed="true">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_durRIws3EeyeMc5IFmmFhg" name="smtp_password" typeClassname="java.lang.String"/>
              </expression>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRJAs3EeyeMc5IFmmFhg" key="from">
              <expression xmi:type="expression:Expression" xmi:id="_durRJQs3EeyeMc5IFmmFhg" name="noreplyEmail" content="noreplyEmail" type="TYPE_PARAMETER" returnTypeFixed="true">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_durRJgs3EeyeMc5IFmmFhg" name="noreplyEmail" typeClassname="java.lang.String" description="Email sender for report"/>
              </expression>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRJws3EeyeMc5IFmmFhg" key="returnPath">
              <expression xmi:type="expression:Expression" xmi:id="_durRKAs3EeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRKQs3EeyeMc5IFmmFhg" key="to">
              <expression xmi:type="expression:Expression" xmi:id="_durRKgs3EeyeMc5IFmmFhg" name="emailRecipients" content="emailRecipients" type="TYPE_VARIABLE" returnTypeFixed="true">
                <referencedElements xmi:type="process:Data" xmi:id="_durRKws3EeyeMc5IFmmFhg" name="emailRecipients" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
              </expression>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRLAs3EeyeMc5IFmmFhg" key="bcc">
              <expression xmi:type="expression:Expression" xmi:id="_durRLQs3EeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRLgs3EeyeMc5IFmmFhg" key="cc">
              <expression xmi:type="expression:Expression" xmi:id="_durRLws3EeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRMAs3EeyeMc5IFmmFhg" key="subject">
              <expression xmi:type="expression:Expression" xmi:id="_durRMQs3EeyeMc5IFmmFhg" name="emailTitle" content="emailTitle" type="TYPE_VARIABLE" returnTypeFixed="true">
                <referencedElements xmi:type="process:Data" xmi:id="_durRMgs3EeyeMc5IFmmFhg" name="emailTitle" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
              </expression>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRMws3EeyeMc5IFmmFhg" key="html">
              <expression xmi:type="expression:Expression" xmi:id="_durRNAs3EeyeMc5IFmmFhg" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRNQs3EeyeMc5IFmmFhg" key="message">
              <expression xmi:type="expression:Expression" xmi:id="_durRNgs3EeyeMc5IFmmFhg" name="emailBody" content="emailBody" type="TYPE_VARIABLE" returnTypeFixed="true">
                <referencedElements xmi:type="process:Data" xmi:id="_durRNws3EeyeMc5IFmmFhg" name="emailBody" dataType="_I7r16AnDEeyeMc5IFmmFhg"/>
              </expression>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durROAs3EeyeMc5IFmmFhg" key="headers">
              <expression xmi:type="expression:TableExpression" xmi:id="_durROQs3EeyeMc5IFmmFhg"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durROgs3EeyeMc5IFmmFhg" key="charset">
              <expression xmi:type="expression:Expression" xmi:id="_durROws3EeyeMc5IFmmFhg" name="UTF-8" content="UTF-8" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRPAs3EeyeMc5IFmmFhg" key="replyTo">
              <expression xmi:type="expression:Expression" xmi:id="_durRPQs3EeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_durRPgs3EeyeMc5IFmmFhg" key="attachments">
              <expression xmi:type="expression:ListExpression" xmi:id="_durRPws3EeyeMc5IFmmFhg"/>
            </parameters>
          </configuration>
        </connectors>
        <loopCondition xmi:type="expression:Expression" xmi:id="_tSsHowsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_tSsHpAsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_tSsHpQsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_tStVwAsuEeyeMc5IFmmFhg" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_tSsHpgsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:EndEvent" xmi:id="_xDHFQAsuEeyeMc5IFmmFhg" name="End Report" incoming="_xDPoIAsuEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_xDITYQsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_xDITYAsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_xDITYgsuEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:EndEvent" xmi:id="_LmqnAAswEeyeMc5IFmmFhg" name="End no report" incoming="_NYYcQAswEeyeMc5IFmmFhg">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_Lmr1IQswEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_Lmr1IAswEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_Lmr1IgswEeyeMc5IFmmFhg" name="" content="" returnTypeFixed="true"/>
      </elements>
      <data xmi:type="process:Data" xmi:id="_hSrSYAsuEeyeMc5IFmmFhg" name="emailTitle" dataType="_I7r16AnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_hSrSYQsuEeyeMc5IFmmFhg" content=""/>
      </data>
      <data xmi:type="process:Data" xmi:id="_ijqZIAsuEeyeMc5IFmmFhg" name="emailRecipients" dataType="_I7r16AnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ijqZIQsuEeyeMc5IFmmFhg" name="reportEmailRecipients" content="reportEmailRecipients" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_mwXqIAsuEeyeMc5IFmmFhg" name="reportEmailRecipients">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_mwXqIQsuEeyeMc5IFmmFhg"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_jqSC8AsuEeyeMc5IFmmFhg" name="emailBody" dataType="_I7r16AnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_jqSC8QsuEeyeMc5IFmmFhg" content=""/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_o7gV4As3EeyeMc5IFmmFhg" documentation="List of Map with fields :&#xD;&#xA;taskId, activityInstance,processName,processVersion,connectorName, connectorType,connectorError" name="listFailedTasks" multiple="true" dataType="_I7r16QnDEeyeMc5IFmmFhg" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_o7gV4Qs3EeyeMc5IFmmFhg" name="EmptyList" content="return [];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_FYMjgAs5EeyeMc5IFmmFhg" name="jobError" dataType="_I7r16AnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_FYMjgQs5EeyeMc5IFmmFhg" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_ssS0AAtEEeyeMc5IFmmFhg" name="nbTasksDetected" dataType="_I7r15QnDEeyeMc5IFmmFhg">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ssS0AQtEEeyeMc5IFmmFhg" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_nwKXYAsnEeyeMc5IFmmFhg">
        <targetForm xmi:type="expression:Expression" xmi:id="_FuaVAAtCEeyeMc5IFmmFhg" name="ReportFailedTasksinstanciationForm" content="556bbbff-91ab-410f-b12f-0ca70b3313ee" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_nwK-cAsnEeyeMc5IFmmFhg" type="NONE">
        <targetForm xmi:type="expression:Expression" xmi:id="_nwK-cQsnEeyeMc5IFmmFhg" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_Q_9R0AsuEeyeMc5IFmmFhg" target="_NkkwEAsuEeyeMc5IFmmFhg" source="_Ll6rAAsuEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_Q_-f8AsuEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_Q_-f8QsuEeyeMc5IFmmFhg" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_rkC0gAsuEeyeMc5IFmmFhg" target="_onFUIAsuEeyeMc5IFmmFhg" source="_NkkwEAsuEeyeMc5IFmmFhg" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_rkC0gQsuEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_rkC0ggsuEeyeMc5IFmmFhg" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_vBWB0AsuEeyeMc5IFmmFhg" target="_tSrgkAsuEeyeMc5IFmmFhg" source="_onFUIAsuEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_vBWB0QsuEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_vBWB0gsuEeyeMc5IFmmFhg" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_xDPoIAsuEeyeMc5IFmmFhg" target="_xDHFQAsuEeyeMc5IFmmFhg" source="_tSrgkAsuEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_xDPoIQsuEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_xDPoIgsuEeyeMc5IFmmFhg" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NYYcQAswEeyeMc5IFmmFhg" name="No failed tasks and no report when empty" target="_LmqnAAswEeyeMc5IFmmFhg" source="_NkkwEAsuEeyeMc5IFmmFhg">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NYZDUAswEeyeMc5IFmmFhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_NYZDUQswEeyeMc5IFmmFhg" name="NoTasksAndNoReportWhenNoTasks" content="return (nbTasksDetected == 0) &amp;&amp; (!sendReportWhenNoFailedTasks);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_1rRhMAtEEeyeMc5IFmmFhg" name="nbTasksDetected" dataType="_I7r15QnDEeyeMc5IFmmFhg"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_1rSIQAtEEeyeMc5IFmmFhg" name="sendReportWhenNoFailedTasks" typeClassname="java.lang.Boolean"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_8jJNYAtDEeyeMc5IFmmFhg" name="AdminUser" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_ADuIQAswEeyeMc5IFmmFhg" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_-vgXQAtDEeyeMc5IFmmFhg">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_-vgXQQtDEeyeMc5IFmmFhg" name="AdminUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_-vgXQgtDEeyeMc5IFmmFhg"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_-vgXQwtDEeyeMc5IFmmFhg"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_-vgXRAtDEeyeMc5IFmmFhg">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_-vgXRQtDEeyeMc5IFmmFhg"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_ADuIQQswEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_6F1T4As3EeyeMc5IFmmFhg" type="CONNECTOR" definitionId="email" definitionVersion="1.2.0" implementationId="email-impl" implementationVersion="1.3.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ADuIQgswEeyeMc5IFmmFhg" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ADuIQwswEeyeMc5IFmmFhg" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_6HybsAs3EeyeMc5IFmmFhg" id="email-impl-1.3.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_6JFcMAs3EeyeMc5IFmmFhg" key="email-impl -- 1.3.0" value="bonita-connector-email-1.3.0.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_6OJiYAs3EeyeMc5IFmmFhg" key="email-impl -- 1.3.0" value="javax.mail-1.6.2.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_6OKwgAs3EeyeMc5IFmmFhg" key="email-impl -- 1.3.0" value="javax.mail-api-1.6.2.jar" type="CONNECTOR"/>
          </children>
          <children xmi:type="configuration:FragmentContainer" xmi:id="_DgpzoIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_DhVJEIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ADuIRgswEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuISgswEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuISwswEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuITAswEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuITQswEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuITgswEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuITwswEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIUAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIUQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIUgswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIUwswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIVAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIVQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIVgswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIVwswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIWAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIWQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIWgswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIWwswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIXAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIXQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIXgswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIXwswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIYAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIYQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ADuIRwswEeyeMc5IFmmFhg" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ADuISAswEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIYgswEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIYwswEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIZAswEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIZQswEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIZgswEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIZwswEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIaAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIaQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIagswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIawswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIbAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIbQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIbgswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIbwswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIcAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIcQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIcgswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIcwswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIdAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIdQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIdgswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuIdwswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuvUAswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ADuvUQswEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ADuISQswEeyeMc5IFmmFhg" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ADuvUgswEeyeMc5IFmmFhg" name="smtp_host" value="smtpauth.mail.saint-gobain.net" typeClassname="java.lang.String" description="SMTP Host"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ADuvUwswEeyeMc5IFmmFhg" name="smtp_port" value="25" typeClassname="java.lang.Integer" description="SMTP Port"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ADuvVAswEeyeMc5IFmmFhg" name="smtp_username" value="CFRsvc-smtp-POPB" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ADuvVQswEeyeMc5IFmmFhg" name="smtp_password" value="p/b23.NE" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ADuvVgswEeyeMc5IFmmFhg" name="noreplyEmail" value="noreply-BONITA@saint-gobain.com" typeClassname="java.lang.String" description="Email sender for report"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ADuvVwswEeyeMc5IFmmFhg" name="sendReportWhenNoFailedTasks" value="true" typeClassname="java.lang.Boolean"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="___D4cAs0EeyeMc5IFmmFhg" name="logClass" value="ReportFailedTasks" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="___D4cQs0EeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" value="60" typeClassname="java.lang.Integer" description="Number of days in the past for oldest tasks reported"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_6OL-oAs3EeyeMc5IFmmFhg" name="maxNumberOfFailedTasks" value="1000" typeClassname="java.lang.Integer" description="Maximum number of failed tasks searched"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_nY_dcAs7EeyeMc5IFmmFhg" name="emailTitleStart" value="[DEV] POP3P Failed tasks report" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Dhwu4AtQEeyeMc5IFmmFhg" name="bonita_server_host" value="10.155.63.145" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Dhwu4QtQEeyeMc5IFmmFhg" name="bonita_server_port" value="8080" typeClassname="java.lang.Integer"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_MctdYAtgEeyeMc5IFmmFhg" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_McvSkAtgEeyeMc5IFmmFhg">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_McvSkQtgEeyeMc5IFmmFhg" name="AdminUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_McvSkgtgEeyeMc5IFmmFhg"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_McvSkwtgEeyeMc5IFmmFhg"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_McvSlAtgEeyeMc5IFmmFhg">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_McvSlQtgEeyeMc5IFmmFhg"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_MctdYQtgEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_MctdYgtgEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="email" definitionVersion="1.2.0" implementationId="email-impl" implementationVersion="1.3.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MctdYwtgEeyeMc5IFmmFhg" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MctdZAtgEeyeMc5IFmmFhg" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_MctdZwtgEeyeMc5IFmmFhg" id="email-impl-1.3.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_MctdaAtgEeyeMc5IFmmFhg" key="email-impl -- 1.3.0" value="bonita-connector-email-1.3.0.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MctdaQtgEeyeMc5IFmmFhg" key="email-impl -- 1.3.0" value="javax.mail-1.6.2.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MctdagtgEeyeMc5IFmmFhg" key="email-impl -- 1.3.0" value="javax.mail-api-1.6.2.jar" type="CONNECTOR"/>
          </children>
          <children xmi:type="configuration:FragmentContainer" xmi:id="_DnTOMIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_DoFRUIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MctdawtgEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_McvSlgtgEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5oAtgEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5oQtgEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5ogtgEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5owtgEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5pAtgEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5pQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5pgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5pwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5qAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5qQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5qgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5qwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5rAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5rQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5rgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5rwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5sAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5sQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5sgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5swtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5tAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5tQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5tgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MctdbAtgEeyeMc5IFmmFhg" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MctdbQtgEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5twtgEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5uAtgEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5uQtgEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5ugtgEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5uwtgEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5vAtgEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5vQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5vgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5vwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5wAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5wQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5wgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5wwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5xAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5xQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5xgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5xwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5yAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5yQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5ygtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5ywtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5zAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5zQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_Mcv5zgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MctdbgtgEeyeMc5IFmmFhg" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv5zwtgEeyeMc5IFmmFhg" name="smtp_host" value="smtpauth.mail.saint-gobain.net" typeClassname="java.lang.String" description="SMTP Host"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv50AtgEeyeMc5IFmmFhg" name="smtp_port" value="25" typeClassname="java.lang.Integer" description="SMTP Port"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv50QtgEeyeMc5IFmmFhg" name="smtp_username" value="CFRsvc-smtp-POPB" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv50gtgEeyeMc5IFmmFhg" name="smtp_password" value="p/b23.NE" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv50wtgEeyeMc5IFmmFhg" name="noreplyEmail" value="noreply-BONITA@saint-gobain.com" typeClassname="java.lang.String" description="Email sender for report"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv51AtgEeyeMc5IFmmFhg" name="sendReportWhenNoFailedTasks" value="true" typeClassname="java.lang.Boolean"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv51QtgEeyeMc5IFmmFhg" name="logClass" value="ReportFailedTasks" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv51gtgEeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" value="7" typeClassname="java.lang.Integer" description="Number of days in the past for oldest tasks reported"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv51wtgEeyeMc5IFmmFhg" name="maxNumberOfFailedTasks" value="1000" typeClassname="java.lang.Integer" description="Maximum number of failed tasks searched"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv52AtgEeyeMc5IFmmFhg" name="emailTitleStart" value="[UAT] POP3P Failed tasks report" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv52QtgEeyeMc5IFmmFhg" name="bonita_server_host" value="uat.bpm.saint-gobain.com" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_Mcv52gtgEeyeMc5IFmmFhg" name="bonita_server_port" value="443" typeClassname="java.lang.Integer"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_0aXCMAtgEeyeMc5IFmmFhg" name="sgdbf-prod" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_0aYQUAtgEeyeMc5IFmmFhg">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_0aYQUQtgEeyeMc5IFmmFhg" name="AdminUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_0aYQUgtgEeyeMc5IFmmFhg"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_0aYQUwtgEeyeMc5IFmmFhg"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_0aYQVAtgEeyeMc5IFmmFhg">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_0aYQVQtgEeyeMc5IFmmFhg"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_0aXCMQtgEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_0aXCMgtgEeyeMc5IFmmFhg" type="CONNECTOR" definitionId="email" definitionVersion="1.2.0" implementationId="email-impl" implementationVersion="1.3.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0aXCMwtgEeyeMc5IFmmFhg" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0aXCNAtgEeyeMc5IFmmFhg" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_0aXCNwtgEeyeMc5IFmmFhg" id="email-impl-1.3.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_0aXCOAtgEeyeMc5IFmmFhg" key="email-impl -- 1.3.0" value="bonita-connector-email-1.3.0.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_0aXCOQtgEeyeMc5IFmmFhg" key="email-impl -- 1.3.0" value="javax.mail-1.6.2.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_0aXCOgtgEeyeMc5IFmmFhg" key="email-impl -- 1.3.0" value="javax.mail-api-1.6.2.jar" type="CONNECTOR"/>
          </children>
          <children xmi:type="configuration:FragmentContainer" xmi:id="_DsJ5AIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_DszZQIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0aXCOwtgEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQVgtgEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQVwtgEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQWAtgEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQWQtgEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQWgtgEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQWwtgEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQXAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQXQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQXgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQXwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQYAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQYQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQYgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQYwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQZAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQZQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQZgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aYQZwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZecAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZecQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZecgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZecwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZedAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZedQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0aXCPAtgEeyeMc5IFmmFhg" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0aXCPQtgEeyeMc5IFmmFhg" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZedgtgEeyeMc5IFmmFhg" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZedwtgEeyeMc5IFmmFhg" key="MailContent.groovy" value="MailContent.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZeeAtgEeyeMc5IFmmFhg" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZeeQtgEeyeMc5IFmmFhg" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZeegtgEeyeMc5IFmmFhg" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZeewtgEeyeMc5IFmmFhg" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZefAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZefQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZefgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZefwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aZegAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFgAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFgQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFggtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFgwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFhAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFhQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFhgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFhwtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFiAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0aaFiQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0agMIAtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0agMIQtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0agMIgtgEeyeMc5IFmmFhg" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0aXCPgtgEeyeMc5IFmmFhg" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMIwtgEeyeMc5IFmmFhg" name="smtp_host" value="smtpauth.mail.saint-gobain.net" typeClassname="java.lang.String" description="SMTP Host"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMJAtgEeyeMc5IFmmFhg" name="smtp_port" value="25" typeClassname="java.lang.Integer" description="SMTP Port"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMJQtgEeyeMc5IFmmFhg" name="smtp_username" value="CFRsvc-smtp-POPB" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMJgtgEeyeMc5IFmmFhg" name="smtp_password" value="p/b23.NE" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMJwtgEeyeMc5IFmmFhg" name="noreplyEmail" value="noreply-BONITA@saint-gobain.com" typeClassname="java.lang.String" description="Email sender for report"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMKAtgEeyeMc5IFmmFhg" name="sendReportWhenNoFailedTasks" value="true" typeClassname="java.lang.Boolean"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMKQtgEeyeMc5IFmmFhg" name="logClass" value="ReportFailedTasks" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMKgtgEeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" value="7" typeClassname="java.lang.Integer" description="Number of days in the past for oldest tasks reported"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMKwtgEeyeMc5IFmmFhg" name="maxNumberOfFailedTasks" value="1000" typeClassname="java.lang.Integer" description="Maximum number of failed tasks searched"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMLAtgEeyeMc5IFmmFhg" name="emailTitleStart" value="[PROD] POP3P Failed tasks report" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMLQtgEeyeMc5IFmmFhg" name="bonita_server_host" value="bpm.saint-gobain.com" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0agMLgtgEeyeMc5IFmmFhg" name="bonita_server_port" value="443" typeClassname="java.lang.Integer"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_js2ZUAsvEeyeMc5IFmmFhg" name="smtp_host" typeClassname="java.lang.String" description="SMTP Host"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_m-9DQAsvEeyeMc5IFmmFhg" name="smtp_port" typeClassname="java.lang.Integer" description="SMTP Port"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_os5y0AsvEeyeMc5IFmmFhg" name="smtp_username" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_qQz1kAsvEeyeMc5IFmmFhg" name="smtp_password" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_7IfkYAsvEeyeMc5IFmmFhg" name="noreplyEmail" typeClassname="java.lang.String" description="Email sender for report"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_-9TSwAsvEeyeMc5IFmmFhg" name="sendReportWhenNoFailedTasks" typeClassname="java.lang.Boolean"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_YkxfYAs0EeyeMc5IFmmFhg" name="logClass" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_-1hdgAs0EeyeMc5IFmmFhg" name="oldestNewTaskDetectedInDays" typeClassname="java.lang.Integer" description="Number of days in the past for oldest tasks reported"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_4_WM8As3EeyeMc5IFmmFhg" name="maxNumberOfFailedTasks" typeClassname="java.lang.Integer" description="Maximum number of failed tasks searched"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_mTIooAs7EeyeMc5IFmmFhg" name="emailTitleStart" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="___9cEAtPEeyeMc5IFmmFhg" name="bonita_server_host" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_CakdUAtQEeyeMc5IFmmFhg" name="bonita_server_port" typeClassname="java.lang.Integer"/>
      <contract xmi:type="process:Contract" xmi:id="_nwLlgAsnEeyeMc5IFmmFhg">
        <inputs xmi:type="process:ContractInput" xmi:id="_s8NlgAsnEeyeMc5IFmmFhg" name="reportEmailRecipients">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_s8NlgQsnEeyeMc5IFmmFhg"/>
        </inputs>
      </contract>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_nwIiMAsnEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_nwJJQAsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_nwJJQQsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_nwJJQgsnEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_nwJJQwsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_nwJJRAsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_nwJJRQsnEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_nwJJRgsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_nwJJRwsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_nwJJSAsnEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_nwJJSQsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_nwJJSgsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_nwJJSwsnEeyeMc5IFmmFhg">
        <name xmi:type="expression:Expression" xmi:id="_nwJJTAsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_nwJJTQsnEeyeMc5IFmmFhg" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_I7r14wnDEeyeMc5IFmmFhg" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_I7r15AnDEeyeMc5IFmmFhg" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_I7r15QnDEeyeMc5IFmmFhg" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_I7r15gnDEeyeMc5IFmmFhg" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_I7r15wnDEeyeMc5IFmmFhg" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_I7r16AnDEeyeMc5IFmmFhg" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_I7r16QnDEeyeMc5IFmmFhg" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_I7r16gnDEeyeMc5IFmmFhg" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_I7r16wnDEeyeMc5IFmmFhg" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_I7r17AnDEeyeMc5IFmmFhg" type="Process" element="_I7owAAnDEeyeMc5IFmmFhg" name="MyDiagram" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_I7r17QnDEeyeMc5IFmmFhg" type="2007" element="_I7owAQnDEeyeMc5IFmmFhg">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r17gnDEeyeMc5IFmmFhg" type="5008" element="_I7owAQnDEeyeMc5IFmmFhg"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r17wnDEeyeMc5IFmmFhg" type="7001" element="_I7owAQnDEeyeMc5IFmmFhg">
        <children xmi:type="notation:Node" xmi:id="_I7r18AnDEeyeMc5IFmmFhg" type="3007" element="_I7owAgnDEeyeMc5IFmmFhg">
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r18QnDEeyeMc5IFmmFhg" type="5007" element="_I7owAgnDEeyeMc5IFmmFhg"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r18gnDEeyeMc5IFmmFhg" type="7002" element="_I7owAgnDEeyeMc5IFmmFhg">
            <children xmi:type="notation:Shape" xmi:id="_I7r18wnDEeyeMc5IFmmFhg" type="3002" element="_I7owAwnDEeyeMc5IFmmFhg" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r19AnDEeyeMc5IFmmFhg" type="5024" element="_I7owAwnDEeyeMc5IFmmFhg">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r19QnDEeyeMc5IFmmFhg" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r19gnDEeyeMc5IFmmFhg" x="62" y="121" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r19wnDEeyeMc5IFmmFhg" type="3027" element="_I7pXEAnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r1-AnDEeyeMc5IFmmFhg" type="5017" element="_I7pXEAnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r1-QnDEeyeMc5IFmmFhg" x="160" y="103" width="114" height="87"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r1-gnDEeyeMc5IFmmFhg" type="3016" element="_I7pXHgnDEeyeMc5IFmmFhg" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r1-wnDEeyeMc5IFmmFhg" type="5031" element="_I7pXHgnDEeyeMc5IFmmFhg">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r1_AnDEeyeMc5IFmmFhg" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r1_QnDEeyeMc5IFmmFhg" x="81" y="198" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r1_gnDEeyeMc5IFmmFhg" type="3027" element="_I7pXJwnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r1_wnDEeyeMc5IFmmFhg" type="5017" element="_I7pXJwnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2AAnDEeyeMc5IFmmFhg" x="339" y="100" width="112" height="85"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2AQnDEeyeMc5IFmmFhg" type="3027" element="_I7p-LgnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2AgnDEeyeMc5IFmmFhg" type="5017" element="_I7p-LgnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2AwnDEeyeMc5IFmmFhg" x="518" y="103" width="114" height="87"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2BAnDEeyeMc5IFmmFhg" type="3027" element="_I7p-QgnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2BQnDEeyeMc5IFmmFhg" type="5017" element="_I7p-QgnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2BgnDEeyeMc5IFmmFhg" x="710" y="126"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2BwnDEeyeMc5IFmmFhg" type="3003" element="_I7p-YAnDEeyeMc5IFmmFhg" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2CAnDEeyeMc5IFmmFhg" type="5025" element="_I7p-YAnDEeyeMc5IFmmFhg">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2CQnDEeyeMc5IFmmFhg" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2CgnDEeyeMc5IFmmFhg" x="993" y="72" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2CwnDEeyeMc5IFmmFhg" type="3008" element="_I7p-ZAnDEeyeMc5IFmmFhg" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2DAnDEeyeMc5IFmmFhg" type="5026" element="_I7p-ZAnDEeyeMc5IFmmFhg">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2DQnDEeyeMc5IFmmFhg" x="2" y="-7"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2DgnDEeyeMc5IFmmFhg" x="879" y="65" height="73"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2DwnDEeyeMc5IFmmFhg" type="3027" element="_I7p-aQnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2EAnDEeyeMc5IFmmFhg" type="5017" element="_I7p-aQnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2EQnDEeyeMc5IFmmFhg" x="700" y="15" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2EgnDEeyeMc5IFmmFhg" type="3027" element="_I7qlMAnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2EwnDEeyeMc5IFmmFhg" type="5017" element="_I7qlMAnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2FAnDEeyeMc5IFmmFhg" x="601" y="236" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2FQnDEeyeMc5IFmmFhg" type="3027" element="_I7qlTwnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2FgnDEeyeMc5IFmmFhg" type="5017" element="_I7qlTwnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2FwnDEeyeMc5IFmmFhg" x="767" y="237" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2GAnDEeyeMc5IFmmFhg" type="3063" element="_I7qlgQnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2GQnDEeyeMc5IFmmFhg" type="5093" element="_I7qlgQnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2GgnDEeyeMc5IFmmFhg" x="1155" y="235" width="128" height="64"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2GwnDEeyeMc5IFmmFhg" type="3008" element="_I7qlmAnDEeyeMc5IFmmFhg" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2HAnDEeyeMc5IFmmFhg" type="5026" element="_I7qlmAnDEeyeMc5IFmmFhg">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2HQnDEeyeMc5IFmmFhg" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2HgnDEeyeMc5IFmmFhg" x="1069" y="244"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2HwnDEeyeMc5IFmmFhg" type="3027" element="_I7qlnQnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2IAnDEeyeMc5IFmmFhg" type="5017" element="_I7qlnQnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2IQnDEeyeMc5IFmmFhg" x="1299" y="160" width="116" height="58"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2IgnDEeyeMc5IFmmFhg" type="3027" element="_I7qluwnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2IwnDEeyeMc5IFmmFhg" type="5017" element="_I7qluwnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2JAnDEeyeMc5IFmmFhg" x="1050" y="156"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2JQnDEeyeMc5IFmmFhg" type="3027" element="_I7ql6AnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2JgnDEeyeMc5IFmmFhg" type="5017" element="_I7ql6AnDEeyeMc5IFmmFhg"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2JwnDEeyeMc5IFmmFhg" x="921" y="242" width="108" height="54"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2KAnDEeyeMc5IFmmFhg" type="3017" element="_I7rMTAnDEeyeMc5IFmmFhg" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2KQnDEeyeMc5IFmmFhg" type="5032" element="_I7rMTAnDEeyeMc5IFmmFhg">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2KgnDEeyeMc5IFmmFhg" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2KwnDEeyeMc5IFmmFhg" x="499" y="45"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_I7r2LAnDEeyeMc5IFmmFhg" type="3003" element="_I7rMUwnDEeyeMc5IFmmFhg" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_I7r2LQnDEeyeMc5IFmmFhg" type="5025" element="_I7rMUwnDEeyeMc5IFmmFhg">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2LgnDEeyeMc5IFmmFhg" x="7" y="-44"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2LwnDEeyeMc5IFmmFhg" x="1334" y="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_ccnbAAsxEeyeMc5IFmmFhg" type="3008" element="_cchUYAsxEeyeMc5IFmmFhg" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_ccoCEAsxEeyeMc5IFmmFhg" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_ccoCEQsxEeyeMc5IFmmFhg" y="-50"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_ccnbAQsxEeyeMc5IFmmFhg" x="1041" y="23"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_QS-6QAsyEeyeMc5IFmmFhg" type="3063" element="_QS2-cAsyEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_QS-6QgsyEeyeMc5IFmmFhg" type="5093"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_QS-6QQsyEeyeMc5IFmmFhg" x="1179" y="65" width="121" height="59"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_I7r2MAnDEeyeMc5IFmmFhg"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_I7r2MQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_I7r2MgnDEeyeMc5IFmmFhg"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_I7r2MwnDEeyeMc5IFmmFhg"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2NAnDEeyeMc5IFmmFhg" x="22" y="10" width="1100" height="361"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_I7r2NQnDEeyeMc5IFmmFhg"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2NgnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_I7r2NwnDEeyeMc5IFmmFhg"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_I7r2OAnDEeyeMc5IFmmFhg"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2OQnDEeyeMc5IFmmFhg" width="1552" height="250"/>
    </children>
    <children xmi:type="notation:Node" xmi:id="_I7r2OgnDEeyeMc5IFmmFhg" type="2007" element="_I7r0RwnDEeyeMc5IFmmFhg">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2OwnDEeyeMc5IFmmFhg" type="5008" element="_I7r0RwnDEeyeMc5IFmmFhg"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2PAnDEeyeMc5IFmmFhg" type="7001" element="_I7r0RwnDEeyeMc5IFmmFhg">
        <children xmi:type="notation:Shape" xmi:id="_I7r2PQnDEeyeMc5IFmmFhg" type="3002" element="_I7r0SAnDEeyeMc5IFmmFhg" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r2PgnDEeyeMc5IFmmFhg" type="5024" element="_I7r0SAnDEeyeMc5IFmmFhg">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2PwnDEeyeMc5IFmmFhg" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2QAnDEeyeMc5IFmmFhg" x="74" y="110"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_I7r2QQnDEeyeMc5IFmmFhg" type="3027" element="_I7r0TAnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r2QgnDEeyeMc5IFmmFhg" type="5017" element="_I7r0TAnDEeyeMc5IFmmFhg"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2QwnDEeyeMc5IFmmFhg" x="296" y="99" width="120" height="60"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_I7r2RAnDEeyeMc5IFmmFhg" type="3027" element="_I7r0bgnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r2RQnDEeyeMc5IFmmFhg" type="5017" element="_I7r0bgnDEeyeMc5IFmmFhg"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2RgnDEeyeMc5IFmmFhg" x="502" y="104"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_I7r2RwnDEeyeMc5IFmmFhg" type="3017" element="_I7r0qgnDEeyeMc5IFmmFhg" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r2SAnDEeyeMc5IFmmFhg" type="5032" element="_I7r0qgnDEeyeMc5IFmmFhg">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2SQnDEeyeMc5IFmmFhg" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2SgnDEeyeMc5IFmmFhg" x="673" y="113"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_I7r2SwnDEeyeMc5IFmmFhg" type="3027" element="_I7r0sAnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r2TAnDEeyeMc5IFmmFhg" type="5017" element="_I7r0sAnDEeyeMc5IFmmFhg"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2TQnDEeyeMc5IFmmFhg" x="787" y="99" width="120" height="60"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_I7r2TgnDEeyeMc5IFmmFhg" type="3027" element="_I7r06AnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r2TwnDEeyeMc5IFmmFhg" type="5017" element="_I7r06AnDEeyeMc5IFmmFhg"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2UAnDEeyeMc5IFmmFhg" x="996" y="99" width="122" height="61"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_I7r2UQnDEeyeMc5IFmmFhg" type="3003" element="_I7r1DAnDEeyeMc5IFmmFhg" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r2UgnDEeyeMc5IFmmFhg" type="5025" element="_I7r1DAnDEeyeMc5IFmmFhg">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2UwnDEeyeMc5IFmmFhg" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2VAnDEeyeMc5IFmmFhg" x="1212" y="115"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_I7r2VQnDEeyeMc5IFmmFhg" type="3027" element="_I7r1EAnDEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_I7r2VgnDEeyeMc5IFmmFhg" type="5017" element="_I7r1EAnDEeyeMc5IFmmFhg"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2VwnDEeyeMc5IFmmFhg" x="141" y="100"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_I7r2WAnDEeyeMc5IFmmFhg"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2WQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_I7r2WgnDEeyeMc5IFmmFhg"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_I7r2WwnDEeyeMc5IFmmFhg"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_I7r2XAnDEeyeMc5IFmmFhg" width="1400" height="250"/>
    </children>
    <children xmi:type="notation:Node" xmi:id="_nwbdIAsnEeyeMc5IFmmFhg" type="2007" element="_njwTEAsnEeyeMc5IFmmFhg">
      <children xmi:type="notation:DecorationNode" xmi:id="_nwegcAsnEeyeMc5IFmmFhg" type="5008"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_nwegcQsnEeyeMc5IFmmFhg" type="7001">
        <children xmi:type="notation:Shape" xmi:id="_LmCm0AsuEeyeMc5IFmmFhg" type="3002" element="_Ll6rAAsuEeyeMc5IFmmFhg" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_LmCm0gsuEeyeMc5IFmmFhg" type="5024">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_LmDN4AsuEeyeMc5IFmmFhg" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_LmCm0QsuEeyeMc5IFmmFhg" x="65" y="113"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_NknMUAsuEeyeMc5IFmmFhg" type="3027" element="_NkkwEAsuEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_NknMUQsuEeyeMc5IFmmFhg" type="5017" element="_NkkwEAsuEeyeMc5IFmmFhg"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NknMUgsuEeyeMc5IFmmFhg" x="177" y="98" width="120" height="60"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_onSIcAsuEeyeMc5IFmmFhg" type="3027" element="_onFUIAsuEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_onSIcgsuEeyeMc5IFmmFhg" type="5017"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_onSIcQsuEeyeMc5IFmmFhg" x="388" y="103" width="114" height="57"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_tSt80AsuEeyeMc5IFmmFhg" type="3027" element="_tSrgkAsuEeyeMc5IFmmFhg" fontName="Segoe UI" fillColor="10265827" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_tSt80gsuEeyeMc5IFmmFhg" type="5017"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_tSt80QsuEeyeMc5IFmmFhg" x="578" y="107" width="112" height="56"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_xDI6cAsuEeyeMc5IFmmFhg" type="3003" element="_xDHFQAsuEeyeMc5IFmmFhg" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_xDJhgAsuEeyeMc5IFmmFhg" type="5025">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_xDJhgQsuEeyeMc5IFmmFhg" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_xDI6cQsuEeyeMc5IFmmFhg" x="758" y="119"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_LmscMAswEeyeMc5IFmmFhg" type="3003" element="_LmqnAAswEeyeMc5IFmmFhg" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_LmscMgswEeyeMc5IFmmFhg" type="5025">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_LmscMwswEeyeMc5IFmmFhg" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_LmscMQswEeyeMc5IFmmFhg" x="758" y="193"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_nwbdIQsnEeyeMc5IFmmFhg"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_nwbdIgsnEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_nwbdIwsnEeyeMc5IFmmFhg"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_nwegcgsnEeyeMc5IFmmFhg"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_nwbdJAsnEeyeMc5IFmmFhg" width="873" height="273"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_I7r2XQnDEeyeMc5IFmmFhg"/>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2XgnDEeyeMc5IFmmFhg" type="4001" element="_I7rMgAnDEeyeMc5IFmmFhg" source="_I7r18wnDEeyeMc5IFmmFhg" target="_I7r19wnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2XwnDEeyeMc5IFmmFhg" type="6001" element="_I7rMgAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2YAnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2YQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2YgnDEeyeMc5IFmmFhg" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2YwnDEeyeMc5IFmmFhg" type="4001" element="_I7rMgwnDEeyeMc5IFmmFhg" source="_I7r19wnDEeyeMc5IFmmFhg" target="_I7r1_gnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2ZAnDEeyeMc5IFmmFhg" type="6001" element="_I7rMgwnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2ZQnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2ZgnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2ZwnDEeyeMc5IFmmFhg" points="[0, -26, -88, -7]$[65, -26, -23, -7]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2aAnDEeyeMc5IFmmFhg" id="(1.0,0.7)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2aQnDEeyeMc5IFmmFhg" id="(0.21,0.52)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2agnDEeyeMc5IFmmFhg" type="4001" element="_I7rMhgnDEeyeMc5IFmmFhg" source="_I7r1_gnDEeyeMc5IFmmFhg" target="_I7r2AQnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2awnDEeyeMc5IFmmFhg" type="6001" element="_I7rMhgnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2bAnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2bQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2bgnDEeyeMc5IFmmFhg" points="[0, -3, -67, 0]$[59, -3, -8, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2bwnDEeyeMc5IFmmFhg" id="(1.0,0.5666666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2cAnDEeyeMc5IFmmFhg" id="(0.07017543859649122,0.543859649122807)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2cQnDEeyeMc5IFmmFhg" type="4001" element="_I7rMiQnDEeyeMc5IFmmFhg" source="_I7r2AQnDEeyeMc5IFmmFhg" target="_I7r2BAnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2cgnDEeyeMc5IFmmFhg" type="6001" element="_I7rMiQnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2cwnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2dAnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2dQnDEeyeMc5IFmmFhg" points="[0, -6, -86, 0]$[76, -7, -10, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2dgnDEeyeMc5IFmmFhg" id="(1.0,0.5614035087719298)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2dwnDEeyeMc5IFmmFhg" id="(0.1,0.44)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2eAnDEeyeMc5IFmmFhg" type="4001" element="_I7rMjQnDEeyeMc5IFmmFhg" source="_I7r2BAnDEeyeMc5IFmmFhg" target="_I7r2CwnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2eQnDEeyeMc5IFmmFhg" type="6001" element="_I7rMjQnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2egnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2ewnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2fAnDEeyeMc5IFmmFhg" points="[50, -1, -90, 49]$[140, -1, 0, 49]$[140, -13, 0, 37]"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2fQnDEeyeMc5IFmmFhg" id="(0.16279069767441862,0.5616438356164384)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2fgnDEeyeMc5IFmmFhg" type="4001" element="_I7rMkAnDEeyeMc5IFmmFhg" source="_I7r2CwnDEeyeMc5IFmmFhg" target="_I7r2BwnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2fwnDEeyeMc5IFmmFhg" type="6001" element="_I7rMkAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2gAnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2gQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2ggnDEeyeMc5IFmmFhg" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2gwnDEeyeMc5IFmmFhg" type="4001" element="_I7rMlAnDEeyeMc5IFmmFhg" source="_I7r1-gnDEeyeMc5IFmmFhg" target="_I7r1_gnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2hAnDEeyeMc5IFmmFhg" type="6001" element="_I7rMlAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2hQnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2hgnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2hwnDEeyeMc5IFmmFhg" points="[-1, -5, -238, 83]$[198, -5, -39, 83]$[198, -86, -39, 2]$[228, -86, -9, 2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2iAnDEeyeMc5IFmmFhg" id="(1.0,0.5666666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2iQnDEeyeMc5IFmmFhg" id="(0.072,0.5319148936170213)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2ignDEeyeMc5IFmmFhg" type="4001" element="_I7rMlwnDEeyeMc5IFmmFhg" source="_I7r2AQnDEeyeMc5IFmmFhg" target="_I7r2EgnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2iwnDEeyeMc5IFmmFhg" type="6001" element="_I7rMlwnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2jAnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2jQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2jgnDEeyeMc5IFmmFhg" points="[11, 2, -50, -88]$[49, 2, -12, -88]$[49, 78, -12, -12]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2jwnDEeyeMc5IFmmFhg" id="(0.9035087719298246,0.632183908045977)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2kAnDEeyeMc5IFmmFhg" id="(0.675,0.2)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2kQnDEeyeMc5IFmmFhg" type="4001" element="_I7rMmgnDEeyeMc5IFmmFhg" source="_I7r2EgnDEeyeMc5IFmmFhg" target="_I7r2FQnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2kgnDEeyeMc5IFmmFhg" type="6001" element="_I7rMmgnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2kwnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2lAnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2lQnDEeyeMc5IFmmFhg" points="[0, -2, -123, -4]$[63, -2, -60, -4]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2lgnDEeyeMc5IFmmFhg" id="(1.0,0.4666666666666667)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2lwnDEeyeMc5IFmmFhg" type="4001" element="_I7rMnQnDEeyeMc5IFmmFhg" source="_I7r2GwnDEeyeMc5IFmmFhg" target="_I7r2GAnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2mAnDEeyeMc5IFmmFhg" type="6001" element="_I7rMnQnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2mQnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2mgnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2mwnDEeyeMc5IFmmFhg" points="[-21, 6, -70, 22]$[35, -18, -14, -2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2nAnDEeyeMc5IFmmFhg" id="(1.0,0.813953488372093)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2nQnDEeyeMc5IFmmFhg" id="(0.109375,0.421875)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2ngnDEeyeMc5IFmmFhg" type="4001" element="_I7rMognDEeyeMc5IFmmFhg" source="_I7r2FQnDEeyeMc5IFmmFhg" target="_I7r2JQnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2nwnDEeyeMc5IFmmFhg" type="6001" element="_I7rMognDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2oAnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2oQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2ognDEeyeMc5IFmmFhg" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2ownDEeyeMc5IFmmFhg" id="(1.0,0.5833333333333334)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2pAnDEeyeMc5IFmmFhg" type="4001" element="_I7rMpQnDEeyeMc5IFmmFhg" source="_I7r2GwnDEeyeMc5IFmmFhg" target="_I7r2IgnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2pQnDEeyeMc5IFmmFhg" type="6001" element="_I7rMpQnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2pgnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2pwnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2qAnDEeyeMc5IFmmFhg" points="[-22, -35, -2, 94]$[-22, -96, -2, 33]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2qQnDEeyeMc5IFmmFhg" id="(1.0,0.813953488372093)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2qgnDEeyeMc5IFmmFhg" id="(0.24,0.34)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2qwnDEeyeMc5IFmmFhg" type="4001" element="_I7rMqAnDEeyeMc5IFmmFhg" source="_I7r2GAnDEeyeMc5IFmmFhg" target="_I7r2HwnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2rAnDEeyeMc5IFmmFhg" type="6001" element="_I7rMqAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2rQnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2rgnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2rwnDEeyeMc5IFmmFhg" points="[0, 0, -60, 78]$[86, 0, 26, 78]$[86, -54, 26, 24]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2sAnDEeyeMc5IFmmFhg" id="(1.0,0.5625)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2sQnDEeyeMc5IFmmFhg" id="(0.14655172413793102,0.5862068965517241)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2sgnDEeyeMc5IFmmFhg" type="4001" element="_I7rMqwnDEeyeMc5IFmmFhg" source="_I7r2CwnDEeyeMc5IFmmFhg" target="_I7r2DwnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2swnDEeyeMc5IFmmFhg" type="6001" element="_I7rMqwnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2tAnDEeyeMc5IFmmFhg" x="-6" y="7"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2tQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2tgnDEeyeMc5IFmmFhg" points="[-20, 18, 67, 53]$[-129, 18, -42, 53]$[-129, -7, -42, 28]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2twnDEeyeMc5IFmmFhg" id="(0.46511627906976744,0.2328767123287671)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2uAnDEeyeMc5IFmmFhg" id="(0.9333333333333333,0.5333333333333333)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2uQnDEeyeMc5IFmmFhg" type="4001" element="_I7rMrgnDEeyeMc5IFmmFhg" source="_I7r2HwnDEeyeMc5IFmmFhg" target="_I7r2IgnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2ugnDEeyeMc5IFmmFhg" type="6001" element="_I7rMrgnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2uwnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2vAnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2vQnDEeyeMc5IFmmFhg" points="[-116, -9, 194, 0]$[-301, -10, 9, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2vgnDEeyeMc5IFmmFhg" id="(1.0,0.5344827586206896)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2vwnDEeyeMc5IFmmFhg" id="(0.91,0.44)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2wAnDEeyeMc5IFmmFhg" type="4001" element="_I7rMsQnDEeyeMc5IFmmFhg" source="_I7r2IgnDEeyeMc5IFmmFhg" target="_I7r2CwnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2wQnDEeyeMc5IFmmFhg" type="6001" element="_I7rMsQnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2wgnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2wwnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2xAnDEeyeMc5IFmmFhg" points="[-100, -11, 55, 84]$[-138, -11, 17, 84]$[-138, -87, 17, 8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2xQnDEeyeMc5IFmmFhg" id="(1.0,0.72)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2xgnDEeyeMc5IFmmFhg" type="4001" element="_I7rzUAnDEeyeMc5IFmmFhg" source="_I7r2JQnDEeyeMc5IFmmFhg" target="_I7r2GwnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2xwnDEeyeMc5IFmmFhg" type="6001" element="_I7rzUAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2yAnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2yQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2ygnDEeyeMc5IFmmFhg" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2ywnDEeyeMc5IFmmFhg" type="4001" element="_I7rzUwnDEeyeMc5IFmmFhg" source="_I7r2DwnDEeyeMc5IFmmFhg" target="_I7r2KAnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2zAnDEeyeMc5IFmmFhg" type="6001" element="_I7rzUwnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2zQnDEeyeMc5IFmmFhg" x="-46" y="-13"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2zgnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2zwnDEeyeMc5IFmmFhg" points="[-120, 12, 175, 2]$[-292, 12, 3, 2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r20AnDEeyeMc5IFmmFhg" id="(1.0,0.5333333333333333)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r20QnDEeyeMc5IFmmFhg" id="(0.8666666666666667,0.4)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r20gnDEeyeMc5IFmmFhg" type="4001" element="_I7rzWAnDEeyeMc5IFmmFhg" source="_I7r2KAnDEeyeMc5IFmmFhg" target="_I7r1_gnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r20wnDEeyeMc5IFmmFhg" type="6001" element="_I7rzWAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r21AnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r21QnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r21gnDEeyeMc5IFmmFhg" points="[-20, -1, 108, -82]$[-125, -1, 3, -82]$[-125, 34, 3, -47]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r21wnDEeyeMc5IFmmFhg" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r22AnDEeyeMc5IFmmFhg" id="(0.528,0.20212765957446807)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r22QnDEeyeMc5IFmmFhg" type="4001" element="_I7rzWwnDEeyeMc5IFmmFhg" source="_I7r2DwnDEeyeMc5IFmmFhg" target="_I7r1_gnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r22gnDEeyeMc5IFmmFhg" type="6001" element="_I7rzWwnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r22wnDEeyeMc5IFmmFhg" x="-130" y="12"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r23AnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r23QnDEeyeMc5IFmmFhg" points="[-120, -20, 268, -97]$[-435, -20, -47, -97]$[-435, 53, -47, -24]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r23gnDEeyeMc5IFmmFhg" id="(1.0,0.5333333333333333)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r23wnDEeyeMc5IFmmFhg" id="(0.8303571428571429,0.2823529411764706)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r24AnDEeyeMc5IFmmFhg" type="4001" element="_I7rzYAnDEeyeMc5IFmmFhg" source="_I7r2DwnDEeyeMc5IFmmFhg" target="_ccnbAAsxEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r24QnDEeyeMc5IFmmFhg" type="6001" element="_I7rzYAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r24gnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r24wnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r25AnDEeyeMc5IFmmFhg" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_fEL6MAsxEeyeMc5IFmmFhg" id="(0.13953488372093023,0.4883720930232558)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r25QnDEeyeMc5IFmmFhg" type="4001" element="_I7r1QQnDEeyeMc5IFmmFhg" source="_I7r2PQnDEeyeMc5IFmmFhg" target="_I7r2VQnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r25gnDEeyeMc5IFmmFhg" type="6001" element="_I7r1QQnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r25wnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r26AnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r26QnDEeyeMc5IFmmFhg" points="[-1, -16, -107, 7]$[78, -35, -28, -12]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r26gnDEeyeMc5IFmmFhg" id="(1.0,1.0)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r26wnDEeyeMc5IFmmFhg" type="4001" element="_I7r1RAnDEeyeMc5IFmmFhg" source="_I7r2QQnDEeyeMc5IFmmFhg" target="_I7r2RAnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r27AnDEeyeMc5IFmmFhg" type="6001" element="_I7r1RAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r27QnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r27gnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r27wnDEeyeMc5IFmmFhg" points="[0, -5, -92, 0]$[86, -6, -6, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r28AnDEeyeMc5IFmmFhg" id="(1.0,0.55)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r28QnDEeyeMc5IFmmFhg" id="(0.06,0.46)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r28gnDEeyeMc5IFmmFhg" type="4001" element="_I7r1SAnDEeyeMc5IFmmFhg" source="_I7r2RAnDEeyeMc5IFmmFhg" target="_I7r2RwnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r28wnDEeyeMc5IFmmFhg" type="6001" element="_I7r1SAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r29AnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r29QnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r29gnDEeyeMc5IFmmFhg" points="[0, -10, -86, 1]$[71, -10, -15, 1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r29wnDEeyeMc5IFmmFhg" id="(1.0,0.7)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2-AnDEeyeMc5IFmmFhg" type="4001" element="_I7r1SwnDEeyeMc5IFmmFhg" source="_I7r2RwnDEeyeMc5IFmmFhg" target="_I7r2SwnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r2-QnDEeyeMc5IFmmFhg" type="6001" element="_I7r1SwnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r2-gnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r2-wnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r2_AnDEeyeMc5IFmmFhg" points="[0, -16, -85, 1]$[84, -18, -1, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2_QnDEeyeMc5IFmmFhg" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r2_gnDEeyeMc5IFmmFhg" id="(0.008333333333333333,0.45)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r2_wnDEeyeMc5IFmmFhg" type="4001" element="_I7r1TgnDEeyeMc5IFmmFhg" source="_I7r2SwnDEeyeMc5IFmmFhg" target="_I7r2RwnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r3AAnDEeyeMc5IFmmFhg" type="6001" element="_I7r1TgnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r3AQnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r3AgnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r3AwnDEeyeMc5IFmmFhg" points="[43, 0, 158, -21]$[43, -36, 158, -57]$[-116, -36, -1, -57]$[-116, 14, -1, -7]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r3BAnDEeyeMc5IFmmFhg" id="(0.14166666666666666,0.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r3BQnDEeyeMc5IFmmFhg" id="(0.5333333333333333,0.23333333333333334)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r3BgnDEeyeMc5IFmmFhg" type="4001" element="_I7r1UgnDEeyeMc5IFmmFhg" source="_I7r2SwnDEeyeMc5IFmmFhg" target="_I7r2TgnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r3BwnDEeyeMc5IFmmFhg" type="6001" element="_I7r1UgnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r3CAnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r3CQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r3CgnDEeyeMc5IFmmFhg" points="[0, -6, -104, 0]$[89, -7, -15, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r3CwnDEeyeMc5IFmmFhg" id="(1.0,0.6)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r3DAnDEeyeMc5IFmmFhg" id="(0.12295081967213115,0.4918032786885246)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r3DQnDEeyeMc5IFmmFhg" type="4001" element="_I7r1VQnDEeyeMc5IFmmFhg" source="_I7r2TgnDEeyeMc5IFmmFhg" target="_I7r2UQnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r3DgnDEeyeMc5IFmmFhg" type="6001" element="_I7r1VQnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r3DwnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r3EAnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r3EQnDEeyeMc5IFmmFhg" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r3EgnDEeyeMc5IFmmFhg" type="4001" element="_I7r1WAnDEeyeMc5IFmmFhg" source="_I7r2QQnDEeyeMc5IFmmFhg" target="_I7r2TgnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r3EwnDEeyeMc5IFmmFhg" type="6001" element="_I7r1WAnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r3FAnDEeyeMc5IFmmFhg" x="-255" y="-12"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r3FQnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r3FgnDEeyeMc5IFmmFhg" points="[-47, 25, -675, 7]$[-47, 62, -675, 44]$[641, 62, 13, 44]$[641, 26, 13, 8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r3FwnDEeyeMc5IFmmFhg" id="(1.0,0.5833333333333334)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r3GAnDEeyeMc5IFmmFhg" id="(0.39344262295081966,0.8688524590163934)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_I7r3GQnDEeyeMc5IFmmFhg" type="4001" element="_I7r1WwnDEeyeMc5IFmmFhg" source="_I7r2VQnDEeyeMc5IFmmFhg" target="_I7r2QQnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_I7r3GgnDEeyeMc5IFmmFhg" type="6001" element="_I7r1WwnDEeyeMc5IFmmFhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_I7r3GwnDEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_I7r3HAnDEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_I7r3HQnDEeyeMc5IFmmFhg" points="[0, -3, -59, 0]$[55, -3, -4, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r3HgnDEeyeMc5IFmmFhg" id="(1.0,0.66)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_I7r3HwnDEeyeMc5IFmmFhg" id="(0.03333333333333333,0.5166666666666667)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RAAVIAsuEeyeMc5IFmmFhg" type="4001" element="_Q_9R0AsuEeyeMc5IFmmFhg" source="_LmCm0AsuEeyeMc5IFmmFhg" target="_NknMUAsuEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RABjQAsuEeyeMc5IFmmFhg" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RABjQQsuEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RAAVIQsuEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RAA8MAsuEeyeMc5IFmmFhg" points="[-3, -7, -99, 0]$[82, -10, -14, -3]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RAI4AAsuEeyeMc5IFmmFhg" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RAI4AQsuEeyeMc5IFmmFhg" id="(0.11666666666666667,0.38333333333333336)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_rkDbkAsuEeyeMc5IFmmFhg" type="4001" element="_rkC0gAsuEeyeMc5IFmmFhg" source="_NknMUAsuEeyeMc5IFmmFhg" target="_onSIcAsuEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_rkDbkwsuEeyeMc5IFmmFhg" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_rkDblAsuEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_rkDbkQsuEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_rkDbkgsuEeyeMc5IFmmFhg" points="[0, -4, -105, 0]$[91, -7, -14, -3]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_rkEpsAsuEeyeMc5IFmmFhg" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_rkEpsQsuEeyeMc5IFmmFhg" id="(0.12280701754385964,0.38596491228070173)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_vBWB0wsuEeyeMc5IFmmFhg" type="4001" element="_vBWB0AsuEeyeMc5IFmmFhg" source="_onSIcAsuEeyeMc5IFmmFhg" target="_tSt80AsuEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_vBWB1gsuEeyeMc5IFmmFhg" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_vBWB1wsuEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_vBWB1AsuEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_vBWB1QsuEeyeMc5IFmmFhg" points="[0, -5, -104, 0]$[95, -6, -9, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_vBXP8AsuEeyeMc5IFmmFhg" id="(1.0,0.5789473684210527)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_vBXP8QsuEeyeMc5IFmmFhg" id="(0.09,0.48)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_xDPoIwsuEeyeMc5IFmmFhg" type="4001" element="_xDPoIAsuEeyeMc5IFmmFhg" source="_tSt80AsuEeyeMc5IFmmFhg" target="_xDI6cAsuEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_xDQPMgsuEeyeMc5IFmmFhg" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_xDQPMwsuEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_xDQPMAsuEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_xDQPMQsuEeyeMc5IFmmFhg" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NYei4AswEeyeMc5IFmmFhg" type="4001" element="_NYYcQAswEeyeMc5IFmmFhg" source="_NknMUAsuEeyeMc5IFmmFhg" target="_LmscMAswEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NYei4wswEeyeMc5IFmmFhg" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NYei5AswEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NYei4QswEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NYei4gswEeyeMc5IFmmFhg" points="[-60, 25, -536, -50]$[-60, 79, -536, 4]$[461, 79, -15, 4]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NYfxAAswEeyeMc5IFmmFhg" id="(1.0,0.5833333333333334)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_iElwIAsxEeyeMc5IFmmFhg" type="4001" element="_iEfpgAsxEeyeMc5IFmmFhg" source="_ccnbAAsxEeyeMc5IFmmFhg" target="_I7r2LAnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_iElwIwsxEeyeMc5IFmmFhg" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_iElwJAsxEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_iElwIQsxEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_iElwIgsxEeyeMc5IFmmFhg" points="[0, -12, -238, 8]$[234, -12, -4, 8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_iEm-QAsxEeyeMc5IFmmFhg" id="(1.0,0.7674418604651163)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_iEm-QQsxEeyeMc5IFmmFhg" id="(0.23333333333333334,0.5333333333333333)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_UjzPMAsyEeyeMc5IFmmFhg" type="4001" element="_UjyoIAsyEeyeMc5IFmmFhg" source="_QS-6QAsyEeyeMc5IFmmFhg" target="_I7r2LAnDEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_UjzPMwsyEeyeMc5IFmmFhg" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_UjzPNAsyEeyeMc5IFmmFhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_UjzPMQsyEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_UjzPMgsyEeyeMc5IFmmFhg" points="[0, -4, -49, 49]$[48, -4, -1, 49]$[48, -39, -1, 14]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_Uj5V0AsyEeyeMc5IFmmFhg" id="(1.0,0.559322033898305)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_Yb7XUAsyEeyeMc5IFmmFhg" type="4001" element="_YbJ7QAsyEeyeMc5IFmmFhg" source="_ccnbAAsxEeyeMc5IFmmFhg" target="_QS-6QAsyEeyeMc5IFmmFhg" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_Yb7XUwsyEeyeMc5IFmmFhg" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_Yb7XVAsyEeyeMc5IFmmFhg" x="12" y="-13"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_Yb7XUQsyEeyeMc5IFmmFhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_Yb7XUgsyEeyeMc5IFmmFhg" points="[-22, 13, -124, -47]$[-22, 41, -124, -19]$[95, 41, -7, -19]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_Yb7-YAsyEeyeMc5IFmmFhg" id="(1.0,0.6976744186046512)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_Yb7-YQsyEeyeMc5IFmmFhg" id="(0.05785123966942149,0.8135593220338984)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
