<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_NpiLcCfJEe2wCNxuK7bHtA" name="ExportDataToExcel" version="1.5" author="C6754557" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004" configId="ACED0005740010372E31312E312D303031372E31312E34">
    <elements xmi:type="process:Pool" xmi:id="_NpiLcSfJEe2wCNxuK7bHtA" name="ExportDataToExcel" version="1.5">
      <elements xmi:type="process:Lane" xmi:id="_NpiLcifJEe2wCNxuK7bHtA" name="Export User" actor="_NpiMqCfJEe2wCNxuK7bHtA">
        <elements xmi:type="process:StartEvent" xmi:id="_NpiLcyfJEe2wCNxuK7bHtA" name="Start Export" outgoing="_NpiMfyfJEe2wCNxuK7bHtA _NpiMpCfJEe2wCNxuK7bHtA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_NpiLdCfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_NpiLdSfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_NpiLdifJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_NpiLdyfJEe2wCNxuK7bHtA" name="Export Data from BDM Query" outgoing="_NpiMmyfJEe2wCNxuK7bHtA" incoming="_NpiMfyfJEe2wCNxuK7bHtA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_NpiLeCfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_NpiLeSfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_NpiLeifJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_NpiLeyfJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_NpiLfCfJEe2wCNxuK7bHtA" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_NpiLfSfJEe2wCNxuK7bHtA" name="exportDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_NpiLfifJEe2wCNxuK7bHtA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiLfyfJEe2wCNxuK7bHtA" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_NpiLgCfJEe2wCNxuK7bHtA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiLgSfJEe2wCNxuK7bHtA" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiLgifJEe2wCNxuK7bHtA" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_NpiLgyfJEe2wCNxuK7bHtA" name="exportDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def BusinessObjectDAO dao_instance = null;&#xD;&#xA;def java.lang.reflect.Method find_method = null;&#xD;&#xA;def Object[] method_parameters = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def int page_count=0;&#xD;&#xA;def int page_limit=0;&#x9;// To avoid infinite loop&#xD;&#xA;def int page_size=0;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;// Map objectName (lowercase) -> DAO object&#xD;&#xA;def Map dao_objects_map = [&quot;proposition&quot;: propositionDAO];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Data Export&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get find method parameters&#xD;&#xA;&#x9;def Map find_method_profile = BDMUtility.getFindQuery(objectName,queryName, queryCriteria, dao_objects_map, queryListIds);&#xD;&#xA;&#x9;error_message = find_method_profile['errorMessage'];&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error while retrieving find method: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;dao_instance = find_method_profile['daoInstance'];&#xD;&#xA;&#x9;&#x9;find_method = find_method_profile['findMethod'];&#xD;&#xA;&#x9;&#x9;method_parameters = find_method_profile['parameters'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get Page count / page size values according to the type of query&#xD;&#xA;&#x9;&#x9;if (! formatAllRowsExported.equalsIgnoreCase(rowsExported)) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting only current page according to selected format : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = pageCount;&#xD;&#xA;&#x9;&#x9;&#x9;page_size = pageSize;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit = page_count+1;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting all rows : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = 0;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit=maximumNumberOfQueriedPages;&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;&#x9;&#x9;page_size=queryAllPageSize;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get fields map&#xD;&#xA;&#x9;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, dao_instance: dao_instance, find_method: find_method, method_parameters: method_parameters, page_count: page_count, page_size: page_size, page_limit: page_limit, field_names_list: field_names_list, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiLhCfJEe2wCNxuK7bHtA" name="queryCriteria" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_NpiLhSfJEe2wCNxuK7bHtA" name="propositionDAO" content="propositionDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.PropositionDAO" returnTypeFixed="true"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiLhifJEe2wCNxuK7bHtA" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiLhyfJEe2wCNxuK7bHtA" name="objectName" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiLiCfJEe2wCNxuK7bHtA" name="queryName" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_NpiLiSfJEe2wCNxuK7bHtA" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiLiifJEe2wCNxuK7bHtA" name="pageCount" dataType="_NpiNiifJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_NpiLiyfJEe2wCNxuK7bHtA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiLjCfJEe2wCNxuK7bHtA" name="pageSize" dataType="_NpiNiifJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiLjSfJEe2wCNxuK7bHtA" name="formatAllRowsExported" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiLjifJEe2wCNxuK7bHtA" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiLjyfJEe2wCNxuK7bHtA" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiLkCfJEe2wCNxuK7bHtA" name="fieldsMap" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiLkSfJEe2wCNxuK7bHtA" name="rowsExported" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiLkifJEe2wCNxuK7bHtA" name="applicationPage" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiLkyfJEe2wCNxuK7bHtA" name="outputFormat" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiLlCfJEe2wCNxuK7bHtA" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiLlSfJEe2wCNxuK7bHtA" name="queryListIds" multiple="true" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiLlifJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiLlyfJEe2wCNxuK7bHtA" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiLmCfJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiLmSfJEe2wCNxuK7bHtA" name="executeExport" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def find_method = result['find_method'];&#xD;&#xA;&#x9;def dao_instance = result['dao_instance'];&#xD;&#xA;&#x9;def method_parameters = result['method_parameters'];&#xD;&#xA;&#x9;def int page_count =  result['page_count'];&#xD;&#xA;&#x9;def int page_limit = result['page_limit'];&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;def int page_size = result['page_size'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;while ((has_more) &amp;&amp; (page_count&lt;page_limit) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Executing query with &quot; + String.valueOf(method_parameters.size()) + &quot; parameters for page &quot; + String.valueOf(page_count) + &quot; and page size=&quot; + String.valueOf(page_size));&#xD;&#xA;&#x9;&#x9;def Map find_result = BDMUtility.executeFindMethod(dao_instance, find_method, method_parameters, page_count, page_size);&#xD;&#xA;&#x9;&#x9;error_message = find_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;def records_list = find_result['records'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Error detected on query page &quot; + String.valueOf(page_count) + &quot; : &quot; + error_message);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (records_list == null) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : records list is null&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def nb_records = records_list.size();&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : found &quot;  + String.valueOf(nb_records) + &quot; records&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Export list to Excel&#xD;&#xA;&#x9;&#x9;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ExcelFile.addExcelDataRow(worksheet, records_list[i], field_names_list, row_index, dateStyle);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;if (nb_records&lt;page_size) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Next page&#xD;&#xA;&#x9;&#x9;page_count = page_count +1;&#xD;&#xA;&#x9;} // end while&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_NpiLmifJEe2wCNxuK7bHtA" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_NpiLmyfJEe2wCNxuK7bHtA" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_NpiLnCfJEe2wCNxuK7bHtA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiLnSfJEe2wCNxuK7bHtA" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiLnifJEe2wCNxuK7bHtA" name="logClass" typeClassname="java.lang.String"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiLnyfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiLoCfJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiLoSfJEe2wCNxuK7bHtA" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiLoifJEe2wCNxuK7bHtA" name="errorMessage" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiLoyfJEe2wCNxuK7bHtA" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiLpCfJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiLpSfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiLpifJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiLpyfJEe2wCNxuK7bHtA" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiLqCfJEe2wCNxuK7bHtA" name="documentStorageId" dataType="_NpiNiyfJEe2wCNxuK7bHtA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiLqSfJEe2wCNxuK7bHtA" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiLqifJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiLqyfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiLrCfJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiLrSfJEe2wCNxuK7bHtA" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiLrifJEe2wCNxuK7bHtA" name="filepath" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiLryfJEe2wCNxuK7bHtA" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiLsCfJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiLsSfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiLsifJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiLsyfJEe2wCNxuK7bHtA" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiLtCfJEe2wCNxuK7bHtA" name="errorDetected" dataType="_NpiNiCfJEe2wCNxuK7bHtA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiLtSfJEe2wCNxuK7bHtA" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiLtifJEe2wCNxuK7bHtA" name="errorMessage" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiLtyfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_NpiLuCfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_NpiLuSfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_NpiLuifJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_NpiLuyfJEe2wCNxuK7bHtA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_NpiLvCfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_NpiLvSfJEe2wCNxuK7bHtA" name="ExportError" outgoing="_NpiMiCfJEe2wCNxuK7bHtA"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_NpiLvifJEe2wCNxuK7bHtA" name="Display Output File" outgoing="_NpiMhSfJEe2wCNxuK7bHtA" incoming="_NpiMgifJEe2wCNxuK7bHtA" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_NpiLvyfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_NpiLwCfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_NpiLwSfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_NpiLwifJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_NpiLwyfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_NpiLxCfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_NpiLxSfJEe2wCNxuK7bHtA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_NpiLxifJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_NpiLxyfJEe2wCNxuK7bHtA" name="TimerTermination" outgoing="_NpiMlSfJEe2wCNxuK7bHtA">
            <condition xmi:type="expression:Expression" xmi:id="_NpiLyCfJEe2wCNxuK7bHtA" name="delayBeforeCaseCompletionInMinutes" content="return 60000L * delayBeforeCaseCompletionInMinutes;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiLySfJEe2wCNxuK7bHtA" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
            </condition>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_NpiLyifJEe2wCNxuK7bHtA">
            <targetForm xmi:type="expression:Expression" xmi:id="_NpiLyyfJEe2wCNxuK7bHtA" name="DisplayExportFile" content="8d9a9132-635d-4604-b63e-711933a32b41" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_NpiLzCfJEe2wCNxuK7bHtA"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_NpiLzSfJEe2wCNxuK7bHtA" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_NpiLzifJEe2wCNxuK7bHtA" name="Display Error" outgoing="_NpiMiyfJEe2wCNxuK7bHtA" incoming="_NpiMiCfJEe2wCNxuK7bHtA _NpiMjifJEe2wCNxuK7bHtA _NpiMoSfJEe2wCNxuK7bHtA" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_NpiLzyfJEe2wCNxuK7bHtA" name="displayName()" content="return &quot;Echec de l'export de données&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_NpiL0CfJEe2wCNxuK7bHtA" name="dynamicDescription()" content="return errorMessage.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_NpiL0SfJEe2wCNxuK7bHtA" name="errorMessage" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_NpiL0ifJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_NpiL0yfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_NpiL1CfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_NpiL1SfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_NpiL1ifJEe2wCNxuK7bHtA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_NpiL1yfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_NpiL2CfJEe2wCNxuK7bHtA" name="Error Expiry" outgoing="_NpiMmCfJEe2wCNxuK7bHtA">
            <condition xmi:type="expression:Expression" xmi:id="_NpiL2SfJEe2wCNxuK7bHtA" name="00:05:00" content="300000L" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long"/>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_NpiL2ifJEe2wCNxuK7bHtA">
            <targetForm xmi:type="expression:Expression" xmi:id="_NpiL2yfJEe2wCNxuK7bHtA" name="DisplayExportError" content="591192bc-c8ec-41e5-b987-f74165738cb6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_NpiL3CfJEe2wCNxuK7bHtA"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_NpiL3SfJEe2wCNxuK7bHtA" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_NpiL3ifJEe2wCNxuK7bHtA" name="Purge Document" outgoing="_NpiMkifJEe2wCNxuK7bHtA" incoming="_NpiMhSfJEe2wCNxuK7bHtA _NpiMlSfJEe2wCNxuK7bHtA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_NpiL3yfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_NpiL4CfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_NpiL4SfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_NpiL4ifJEe2wCNxuK7bHtA" name="purgeDocumentAndFile" definitionId="scripting-groovy-script" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_NpiL4yfJEe2wCNxuK7bHtA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiL5CfJEe2wCNxuK7bHtA" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_NpiL5SfJEe2wCNxuK7bHtA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiL5ifJEe2wCNxuK7bHtA" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiL5yfJEe2wCNxuK7bHtA" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_NpiL6CfJEe2wCNxuK7bHtA" name="purgeDocumentAndFile" content="import org.bonitasoft.engine.api.APIAccessor;&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Delete temporary file&#xD;&#xA;&#x9;if (! filepath.isEmpty()) {&#xD;&#xA;&#x9;&#x9;FileUtility.deleteFile(filepath);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Remove document&#xD;&#xA;&#x9;if (documentStorageId != null) {&#xD;&#xA;&#x9;&#x9;FileUtility.removeDocument(documentStorageId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;logError(log_file, &quot;Failed to purge document: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiL6SfJEe2wCNxuK7bHtA" name="documentStorageId" dataType="_NpiNiyfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_NpiL6ifJEe2wCNxuK7bHtA" name="filepath" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_NpiL6yfJEe2wCNxuK7bHtA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiL7CfJEe2wCNxuK7bHtA" name="logClass" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiL7SfJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiL7ifJEe2wCNxuK7bHtA" content=""/>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiL7yfJEe2wCNxuK7bHtA" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_NpiL8CfJEe2wCNxuK7bHtA" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiL8SfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_NpiL8ifJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_NpiL8yfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_NpiL9CfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_NpiL9SfJEe2wCNxuK7bHtA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_NpiL9ifJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_NpiL9yfJEe2wCNxuK7bHtA" name="End Error" incoming="_NpiMiyfJEe2wCNxuK7bHtA _NpiMmCfJEe2wCNxuK7bHtA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_NpiL-CfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_NpiL-SfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_NpiL-ifJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_NpiL-yfJEe2wCNxuK7bHtA" name="End Export" incoming="_NpiMkifJEe2wCNxuK7bHtA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_NpiL_CfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_NpiL_SfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_NpiL_ifJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_NpiL_yfJEe2wCNxuK7bHtA" name="is OK?" outgoing="_NpiMgifJEe2wCNxuK7bHtA _NpiMjifJEe2wCNxuK7bHtA" incoming="_NpiMmyfJEe2wCNxuK7bHtA _NpiMnifJEe2wCNxuK7bHtA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_NpiMACfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_NpiMASfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_NpiMAifJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_NpiMAyfJEe2wCNxuK7bHtA" name="Export Data from Input" outgoing="_NpiMnifJEe2wCNxuK7bHtA" incoming="_NpiMpCfJEe2wCNxuK7bHtA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_NpiMBCfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_NpiMBSfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_NpiMBifJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_NpiMByfJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMCCfJEe2wCNxuK7bHtA" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_NpiMCSfJEe2wCNxuK7bHtA" name="exportInputDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_NpiMCifJEe2wCNxuK7bHtA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiMCyfJEe2wCNxuK7bHtA" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_NpiMDCfJEe2wCNxuK7bHtA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiMDSfJEe2wCNxuK7bHtA" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiMDifJEe2wCNxuK7bHtA" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_NpiMDyfJEe2wCNxuK7bHtA" name="exportInputDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def List&lt;Integer> field_values_index = null;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Export from data provided in contract&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get fields map&#xD;&#xA;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// For each field name, get the corresponding index of fields values&#xD;&#xA;&#x9;&#x9;field_values_index = buildFieldValuesIndex(dataRowsToExport[0].get('fieldNames'), field_names_list);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, field_names_list: field_names_list, field_values_index: field_values_index, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Remove suffix after _ if present&#xD;&#xA;&#x9;&#x9;int pos_suffix = pageName.indexOf('_');&#xD;&#xA;&#x9;&#x9;if (pos_suffix > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;pageName = pageName.substring(0, pos_suffix);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;Integer> buildFieldValuesIndex(List&lt;String> dataRowsFieldNames, List&lt;String> field_names_list) {&#xD;&#xA;&#x9;def List&lt;Integer> list_fields_values_index = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// We need at list one record of data&#xD;&#xA;&#x9;if (dataRowsFieldNames != null) {&#xD;&#xA;&#x9;&#x9;def int nb_fields_values = dataRowsFieldNames.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Loop through each field from field_names_list&#xD;&#xA;&#x9;&#x9;def int nb_fields_names = field_names_list.size();&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields_names; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;// Search the field name in the record values&#xD;&#xA;&#x9;&#x9;&#x9;def String one_field_name = field_names_list[i];&#xD;&#xA;&#x9;&#x9;&#x9;def Integer field_value_index = null;&#xD;&#xA;&#x9;&#x9;&#x9;for (int j=0; j&lt;nb_fields_values; j++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def value_field_name = dataRowsFieldNames[j];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (one_field_name.equalsIgnoreCase(value_field_name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Field has been found in record values&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;field_value_index = Integer.valueOf(j);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Store the field index found, or null if not found&#xD;&#xA;&#x9;&#x9;&#x9;list_fields_values_index.push(field_value_index);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return list_fields_values_index;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_EctdQCfOEe2wCNxuK7bHtA" name="fieldsMap" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_EctdQSfOEe2wCNxuK7bHtA" name="applicationPage" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_EctdQifOEe2wCNxuK7bHtA" name="objectName" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_EctdQyfOEe2wCNxuK7bHtA" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_EcuEUCfOEe2wCNxuK7bHtA" name="outputFormat" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_EcuEUSfOEe2wCNxuK7bHtA" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_EcuEUifOEe2wCNxuK7bHtA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_EcuEUyfOEe2wCNxuK7bHtA" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_EcuEVCfOEe2wCNxuK7bHtA" name="dataRowsToExport" multiple="true" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiMGSfJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiMGifJEe2wCNxuK7bHtA" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiMGyfJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiMHCfJEe2wCNxuK7bHtA" name="executeExportOfInputData" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def List&lt;Integer> field_values_index = result['field_values_index'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Export list to Excel&#xD;&#xA;&#x9;List&lt;Map> data_records = dataRowsToExport[0].get('records');&#xD;&#xA;&#x9;def int nb_records = data_records.size();&#xD;&#xA;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get the record values and add the row to the speadsheet&#xD;&#xA;&#x9;&#x9;def List&lt;Object> one_record_values = data_records[i].get(&quot;values&quot;);&#xD;&#xA;&#x9;&#x9;def List&lt;Object> record_values = getRecordValues(one_record_values, field_values_index, log_file);&#xD;&#xA;&#x9;&#x9;ExcelFile.addExcelFieldValuesRow(worksheet, record_values, field_names_list, row_index, dateStyle)&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;def List&lt;Object> getRecordValues(List&lt;Object> one_row_to_export, List&lt;Integer> field_values_index, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;Object> record_values = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def int nb_fields = field_values_index.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;def Integer value_index = field_values_index[i];&#xD;&#xA;&#x9;&#x9;&#x9;if ((value_index == null) || (value_index >= one_row_to_export.size())) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Field not found&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(null);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Get the field value&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def Object string_value = one_row_to_export[value_index];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def Object field_value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// CFR 30/05/2022 - BPM-814 : Handle Boolean values received as a String true/false&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (string_value instanceof String) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (string_value.equals(&quot;true&quot;) || string_value.equals(&quot;false&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = Boolean.valueOf(string_value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = string_value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = string_value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(field_value);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getRecordValues: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return record_values;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_NpiMHSfJEe2wCNxuK7bHtA" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_NpiMHifJEe2wCNxuK7bHtA" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_NpiMHyfJEe2wCNxuK7bHtA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiMICfJEe2wCNxuK7bHtA" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiMISfJEe2wCNxuK7bHtA" name="dataRowsToExport" multiple="true" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiMIifJEe2wCNxuK7bHtA" name="logClass" typeClassname="java.lang.String"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiMIyfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiMJCfJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiMJSfJEe2wCNxuK7bHtA" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiMJifJEe2wCNxuK7bHtA" name="errorMessage" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiMJyfJEe2wCNxuK7bHtA" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiMKCfJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiMKSfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiMKifJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiMKyfJEe2wCNxuK7bHtA" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiMLCfJEe2wCNxuK7bHtA" name="documentStorageId" dataType="_NpiNiyfJEe2wCNxuK7bHtA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiMLSfJEe2wCNxuK7bHtA" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiMLifJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiMLyfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiMMCfJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiMMSfJEe2wCNxuK7bHtA" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiMMifJEe2wCNxuK7bHtA" name="filepath" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiMMyfJEe2wCNxuK7bHtA" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiMNCfJEe2wCNxuK7bHtA" name="exportResult" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiMNSfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_NpiMNifJEe2wCNxuK7bHtA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_NpiMNyfJEe2wCNxuK7bHtA" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiMOCfJEe2wCNxuK7bHtA" name="errorDetected" dataType="_NpiNiCfJEe2wCNxuK7bHtA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_NpiMOSfJEe2wCNxuK7bHtA" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_NpiMOifJEe2wCNxuK7bHtA" name="errorMessage" dataType="_NpiNjSfJEe2wCNxuK7bHtA"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_NpiMOyfJEe2wCNxuK7bHtA" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_NpiMPCfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_NpiMPSfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_NpiMPifJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_NpiMPyfJEe2wCNxuK7bHtA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_NpiMQCfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_NpiMQSfJEe2wCNxuK7bHtA" name="ExportFromInputError" outgoing="_NpiMoSfJEe2wCNxuK7bHtA"/>
        </elements>
        <filters xmi:type="process:ActorFilter" xmi:id="_NpiMQifJEe2wCNxuK7bHtA" name="initiator" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_NpiMQyfJEe2wCNxuK7bHtA" definitionId="bonita-actorfilter-initiator" version="1.0">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_NpiMRCfJEe2wCNxuK7bHtA" key="autoAssign">
              <expression xmi:type="expression:Expression" xmi:id="_NpiMRSfJEe2wCNxuK7bHtA" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
          </configuration>
        </filters>
      </elements>
      <data xmi:type="process:Data" xmi:id="_NpiMRifJEe2wCNxuK7bHtA" name="errorDetected" dataType="_NpiNiCfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMRyfJEe2wCNxuK7bHtA" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMSCfJEe2wCNxuK7bHtA" name="errorMessage" dataType="_NpiNjSfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMSSfJEe2wCNxuK7bHtA" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMSifJEe2wCNxuK7bHtA" name="objectName" dataType="_NpiNjSfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMSyfJEe2wCNxuK7bHtA" name="contractObjectName" content="contractObjectName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMTCfJEe2wCNxuK7bHtA" name="contractObjectName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMTSfJEe2wCNxuK7bHtA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMTifJEe2wCNxuK7bHtA" name="queryName" dataType="_NpiNjSfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMTyfJEe2wCNxuK7bHtA" name="contractQueryName" content="contractQueryName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMUCfJEe2wCNxuK7bHtA" name="contractQueryName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMUSfJEe2wCNxuK7bHtA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMUifJEe2wCNxuK7bHtA" name="queryCriteria" dataType="_NpiNjSfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMUyfJEe2wCNxuK7bHtA" name="contractQueryCriteria" content="contractQueryCriteria" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMVCfJEe2wCNxuK7bHtA" name="contractQueryCriteria">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMVSfJEe2wCNxuK7bHtA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMVifJEe2wCNxuK7bHtA" name="outputFormat" dataType="_NpiNjSfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMVyfJEe2wCNxuK7bHtA" name="contractOutputFormat" content="contractOutputFormat" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMWCfJEe2wCNxuK7bHtA" name="contractOutputFormat">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMWSfJEe2wCNxuK7bHtA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMWifJEe2wCNxuK7bHtA" name="pageCount" dataType="_NpiNiifJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMWyfJEe2wCNxuK7bHtA" name="contractPageCount" content="contractPageCount" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMXCfJEe2wCNxuK7bHtA" name="contractPageCount" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMXSfJEe2wCNxuK7bHtA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMXifJEe2wCNxuK7bHtA" name="pageSize" dataType="_NpiNiifJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMXyfJEe2wCNxuK7bHtA" name="contractPageSize" content="contractPageSize" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMYCfJEe2wCNxuK7bHtA" name="contractPageSize" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMYSfJEe2wCNxuK7bHtA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMYifJEe2wCNxuK7bHtA" name="rowsExported" dataType="_NpiNjSfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMYyfJEe2wCNxuK7bHtA" name="contractRowsExported" content="contractRowsExported" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMZCfJEe2wCNxuK7bHtA" name="contractRowsExported">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMZSfJEe2wCNxuK7bHtA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_NpiMZifJEe2wCNxuK7bHtA" name="fieldsMap" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMZyfJEe2wCNxuK7bHtA" name="getFieldsMap" content="def proposition_header_fields = [&#xD;&#xA;&#x9;&quot;persistenceId&quot; : &quot;Numéro proposition&quot;,&#xD;&#xA;&#x9;&quot;typeProposition&quot; : &quot;Motif&quot;,&#xD;&#xA;&#x9;&quot;propositionStatus&quot; : &quot;Statut proposition&quot;,&#xD;&#xA;&#x9;&quot;statusMacroEtapes&quot; : &quot;Macro-statut&quot;,&#xD;&#xA;&#x9;&quot;typeWorkflow&quot; : &quot;Type de workflow&quot;,&#xD;&#xA;&#x9;&quot;budgetYear&quot; : &quot;Exercice&quot;,&#xD;&#xA;&#x9;&quot;initialBudgetYear&quot; : &quot;Exercice initial&quot;,&#xD;&#xA;&#x9;&quot;typeAcquisition&quot; : &quot;Type d'acquisition&quot;,&#xD;&#xA;&#x9;&quot;requestSource&quot; : &quot;Source de la proposition&quot;,&#xD;&#xA;&#x9;&quot;propositionAmount&quot; : &quot;Montant proposition initial&quot;,&#xD;&#xA;&#x9;&quot;actualRequestAmount&quot; : &quot;Montant proposition actualisé&quot;,&#xD;&#xA;&#x9;&quot;creationDate&quot;: &quot;Date de création&quot;,&#xD;&#xA;&#x9;&quot;creatorName&quot;: &quot;Nom du créateur&quot;,&#xD;&#xA;&#x9;&quot;agencyCode&quot;: &quot;Code de l'agence&quot;,&#xD;&#xA;&#x9;&quot;agencyName&quot; : &quot;Nom de l'agence&quot;,&#xD;&#xA;&#x9;&quot;siteCode&quot;: &quot;Code du site&quot;,&#xD;&#xA;&#x9;&quot;siteName&quot;: &quot;Nom du site&quot;,&#xD;&#xA;&#x9;&quot;sectorCode&quot;: &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;sectorName&quot; : &quot;Nom du secteur&quot;,&#xD;&#xA;&#x9;&quot;entiteCode&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;entiteName&quot; : &quot;Nom entité&quot;,&#xD;&#xA;&#x9;&quot;territoryCode&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;territoryName&quot; : &quot;Nom territoire&quot;,&#xD;&#xA;&#x9;&quot;existing&quot; : &quot;Matériel existant&quot;,&#xD;&#xA;&#x9;&quot;materialNumber&quot; : &quot;Numéro de matériel&quot;,&#xD;&#xA;&#x9;&quot;typeMaterial&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;typeMaterialName&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterial&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterialName&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;generalStatusMaterial&quot; : &quot;Etat général&quot;,&#xD;&#xA;&#x9;&quot;materialFamily&quot; : &quot;Famille de matériel&quot;,&#xD;&#xA;&#x9;&quot;currentEnergyCode&quot; : &quot;Code énergie actuelle&quot;,&#xD;&#xA;&#x9;&quot;currentEnergyName&quot; : &quot;Energie actuelle&quot;,&#xD;&#xA;&#x9;&quot;futureEnergyCode&quot; : &quot;Code énergie future&quot;,&#xD;&#xA;&#x9;&quot;futureEnergyName&quot; : &quot;Energie future&quot;,&#xD;&#xA;&#x9;&quot;currentRetrofitable&quot; : &quot;Retrofitable biofuel&quot;,&#xD;&#xA;&#x9;&quot;futureRetrofitable&quot; : &quot;Retrofitable biofuel futur&quot;,&#xD;&#xA;&#x9;&quot;currentBiofuelB100&quot; : &quot;Biofuel B100&quot;,&#xD;&#xA;&#x9;&quot;futureBiofuelB100&quot; : &quot;Biofuel B100 futur&quot;,&#xD;&#xA;&#x9;&quot;currentBiofuelXTL&quot; : &quot;Biofuel XTL&quot;,&#xD;&#xA;&#x9;&quot;futureBiofuelXTL&quot; : &quot;Biofuel XTL futur&quot;,&#xD;&#xA;&#x9;&quot;isBudgetRespected&quot; : &quot;Inclus au budget&quot;,&#xD;&#xA;&#x9;&quot;commentSmart&quot; : &quot;Observation SMARTE&quot;,&#xD;&#xA;&#x9;&quot;nbMonth&quot; : &quot;Nombre de mois&quot;,&#xD;&#xA;&#x9;&quot;monthlyAmount&quot; : &quot;Mensualité&quot;,&#xD;&#xA;&#x9;&quot;monthlyPropositionAmount&quot; : &quot;Mensualité future&quot;,&#xD;&#xA;&#x9;&quot;estimatedDeliveryDate&quot; : &quot;Date de livraison prévue&quot;,&#xD;&#xA;&#x9;&quot;pitchSmart&quot; : &quot;Argumentaire SMARTE&quot;,&#xD;&#xA;&#x9;&quot;percentage&quot; : &quot;Pourcentage&quot;];&#xD;&#xA;&#xD;&#xA;def proposition_all_fields = proposition_header_fields + [&#xD;&#xA;&#x9;&quot;creatorId&quot;: &quot;Identifiant du créateur&quot;,&#xD;&#xA;&#x9;&quot;caseId&quot; : &quot;CaseId Bonita&quot;,&#xD;&#xA;&#x9;&quot;sponsor&quot; : &quot;Sponsor&quot;,&#xD;&#xA;&#x9;&quot;isIsBudgetPropositionApproved&quot;: &quot;Budget approuvé&quot;,&#xD;&#xA;&#x9;&quot;lyrePreOrderCreationStatus&quot; : &quot;Statut de création commande dans Lyre&quot;,&#xD;&#xA;&#x9;&quot;parentPropositionId&quot; : &quot;Proposition parent&quot;,&#xD;&#xA;&#x9;&quot;dddRenewChildPropositionId&quot; : &quot;Proposition DDD Renouvellement fille&quot;,&#xD;&#xA;&#x9;&quot;dddRenewStartDate&quot; : &quot;Date planifiée de DDD Renouvellement&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverName&quot; : &quot;Approbation 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverRole&quot; : &quot;Approbation 1-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].dateAction&quot; : &quot;Approbation 1-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].decision&quot; : &quot;Approbation 1-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].comments&quot; : &quot;Approbation 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverName&quot; : &quot;Approbation 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverRole&quot; : &quot;Approbation 2-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].dateAction&quot; : &quot;Approbation 2-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].decision&quot; : &quot;Approbation 2-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].comments&quot; : &quot;Approbation 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverName&quot; : &quot;Approbation 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverRole&quot; : &quot;Approbation 3-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].dateAction&quot; : &quot;Approbation 3-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].decision&quot; : &quot;Approbation 3-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].comments&quot; : &quot;Approbation 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverName&quot; : &quot;Approbation 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverRole&quot; : &quot;Approbation 4-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].dateAction&quot; : &quot;Approbation 4-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].decision&quot; : &quot;Approbation 4-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].comments&quot; : &quot;Approbation 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverName&quot; : &quot;Approbation 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverRole&quot; : &quot;Approbation 5-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].dateAction&quot; : &quot;Approbation 5-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].decision&quot; : &quot;Approbation 5-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].comments&quot; : &quot;Approbation 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverName&quot; : &quot;Approbation 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverRole&quot; : &quot;Approbation 6-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].dateAction&quot; : &quot;Approbation 6-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].decision&quot; : &quot;Approbation 6-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].comments&quot; : &quot;Approbation 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverName&quot; : &quot;Approbation 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverRole&quot; : &quot;Approbation 7-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].dateAction&quot; : &quot;Approbation 7-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].decision&quot; : &quot;Approbation 7-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].comments&quot; : &quot;Approbation 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverName&quot; : &quot;Approbation 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverRole&quot; : &quot;Approbation 8-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].dateAction&quot; : &quot;Approbation 8-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].decision&quot; : &quot;Approbation 8-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].comments&quot; : &quot;Approbation 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverName&quot; : &quot;Approbation 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverRole&quot; : &quot;Approbation 9-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].dateAction&quot; : &quot;Approbation 9-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].decision&quot; : &quot;Approbation 9-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].comments&quot; : &quot;Approbation 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverName&quot; : &quot;Approbation 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverRole&quot; : &quot;Approbation 10-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].dateAction&quot; : &quot;Approbation 10-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].decision&quot; : &quot;Approbation 10-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].comments&quot; : &quot;Approbation 10-Commentaire&quot;,&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&quot;comments[1].userName&quot;: &quot;Commentaire 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[1].dateAdded&quot;: &quot;Commentaire 1-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[1].userComment&quot;: &quot;Commentaire 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userName&quot;: &quot;Commentaire 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[2].dateAdded&quot;: &quot;Commentaire 2-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userComment&quot;: &quot;Commentaire 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userName&quot;: &quot;Commentaire 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[3].dateAdded&quot;: &quot;Commentaire 3-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userComment&quot;: &quot;Commentaire 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userName&quot;: &quot;Commentaire 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[4].dateAdded&quot;: &quot;Commentaire 4-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userComment&quot;: &quot;Commentaire 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userName&quot;: &quot;Commentaire 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[5].dateAdded&quot;: &quot;Commentaire 5-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userComment&quot;: &quot;Commentaire 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userName&quot;: &quot;Commentaire 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[6].dateAdded&quot;: &quot;Commentaire 6-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userComment&quot;: &quot;Commentaire 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userName&quot;: &quot;Commentaire 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[7].dateAdded&quot;: &quot;Commentaire 7-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userComment&quot;: &quot;Commentaire 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userName&quot;: &quot;Commentaire 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[8].dateAdded&quot;: &quot;Commentaire 8-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userComment&quot;: &quot;Commentaire 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userName&quot;: &quot;Commentaire 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[9].dateAdded&quot;: &quot;Commentaire 9-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userComment&quot;: &quot;Commentaire 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userName&quot;: &quot;Commentaire 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[10].dateAdded&quot;: &quot;Commentaire 10-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userComment&quot;: &quot;Commentaire 10-Commentaire&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;def plan_materials_all_fields = [&#xD;&#xA;&#x9;&quot;numMat&quot; : &quot;Numéro matériel&quot;,&#xD;&#xA;&#x9;&quot;codeAgence&quot; : &quot;Code agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceAffectation&quot; : &quot;Agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;causeEligibilite&quot;: &quot;Cause éligibilité&quot;,&#xD;&#xA;&#x9;&quot;genre&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;libelleGenre&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;codeSousGenre&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;libelleSousGenre&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;marque&quot; : &quot;Marque&quot;,&#xD;&#xA;&#x9;&quot;modele&quot; : &quot;Modèle&quot;,&#xD;&#xA;&#x9;&quot;typeAchat&quot; : &quot;Type achat&quot;,&#xD;&#xA;&#x9;&quot;codeEnergie&quot; : &quot;Code énergie&quot;,&#xD;&#xA;&#x9;&quot;libelleEnergie&quot; : &quot;Libellé énergie&quot;,&#xD;&#xA;&#x9;&quot;b100&quot; : &quot;Biofuel B100&quot;,&#xD;&#xA;&#x9;&quot;xtl&quot; : &quot;Biofuel XTL&quot;,&#xD;&#xA;&#x9;&quot;retrofitB100&quot; : &quot;Rétrofitable biofuel&quot;,&#xD;&#xA;&#x9;&quot;montantRetrofit&quot; : &quot;Montant rétrofit&quot;,&#xD;&#xA;&#x9;&quot;critair&quot; : &quot;Crit'Air&quot;,&#xD;&#xA;&#x9;&quot;zfe&quot; : &quot;ZFE&quot;,&#xD;&#xA;&#x9;&quot;dateEntree&quot; : &quot;Date entrée&quot;,&#xD;&#xA;&#x9;&quot;dateCirculation&quot; : &quot;Date circulation&quot;,&#xD;&#xA;&#x9;&quot;compteur&quot; : &quot;Compteur&quot;,&#xD;&#xA;&#x9;&quot;dateDbtContratLoc&quot; : &quot;Date début contrat loc&quot;,&#xD;&#xA;&#x9;&quot;dateFinContratLoc&quot; : &quot;Date fin contrat loc&quot;,&#xD;&#xA;&#x9;&quot;valeurAchat&quot; : &quot;Valeur d'achat&quot;,&#xD;&#xA;&#x9;&quot;coutsSAVTotal&quot; : &quot;Coût SAV total&quot;,&#xD;&#xA;&#x9;&quot;engagementReprise&quot; : &quot;Engagement reprise&quot;,&#xD;&#xA;&#x9;&quot;loyerFinancementMensuel&quot; : &quot;Loyer financement mensuel&quot;,&#xD;&#xA;&#x9;&quot;codeTerritoire&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;libelleTerritoire&quot; : &quot;Territoire&quot;,&#xD;&#xA;&#x9;&quot;codeEntite&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;libelleEntite&quot; : &quot;Entité&quot;,&#xD;&#xA;&#x9;&quot;codeRegion&quot; : &quot;Code région&quot;,&#xD;&#xA;&#x9;&quot;libelleRegion&quot; : &quot;Région&quot;,&#xD;&#xA;&#x9;&quot;codeSecteur&quot; : &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;libelleSecteur&quot; : &quot;Secteur&quot;,&#xD;&#xA;&#x9;&quot;codeSite&quot; : &quot;Code site&quot;,&#xD;&#xA;&#x9;&quot;libelleSite&quot; : &quot;Site&quot;,&#xD;&#xA;&#x9;&quot;codeAgenceLoc&quot; : &quot;Code agence de localisation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceLoc&quot; : &quot;Agence de localisation&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;def eligible_materials_all_fields = plan_materials_all_fields.clone();&#xD;&#xA;eligible_materials_all_fields &lt;&lt; [&quot;zfeName&quot; : &quot;ZFE Name&quot; ];&#xD;&#xA;&#xD;&#xA;def plan_synthesis_all_fields = [&#xD;&#xA;&#x9;&quot;annee&quot; : &quot;Année&quot;,&#xD;&#xA;&#x9;&quot;nbMateriels&quot; : &quot;Nombre de matériels&quot;,&#xD;&#xA;&#x9;&quot;genre.cam&quot; : &quot;Genre CAM&quot;,&#xD;&#xA;&#x9;&quot;genre.acccam&quot; : &quot;Genre ACCCAM&quot;,&#xD;&#xA;&#x9;&quot;genre.accchar&quot;: &quot;Genre ACCCHAR&quot;,&#xD;&#xA;&#x9;&quot;genre.chargeuse&quot; : &quot;Genre CHARGEUSE&quot;,&#xD;&#xA;&#x9;&quot;genre.nacelle&quot; : &quot;Genre NACELLE&quot;,&#xD;&#xA;&#x9;&quot;genre.transpal&quot; : &quot;Genre TRANSPAL&quot;,&#xD;&#xA;&#x9;&quot;genre.ctte&quot; : &quot;Genre CTTE&quot;,&#xD;&#xA;&#x9;&quot;genre.rem&quot; : &quot;Genre REM&quot;,&#xD;&#xA;&#x9;&quot;genre.resm&quot; : &quot;Genre RESM&quot;,&#xD;&#xA;&#x9;&quot;genre.trr&quot; : &quot;Genre TRR&quot;,&#xD;&#xA;&#x9;&quot;genre.grue&quot; : &quot;Genre GRUE&quot;,&#xD;&#xA;&#x9;&quot;genre.tapis&quot; : &quot;Genre TAPIS&quot;,&#xD;&#xA;&#x9;&quot;genre.toupie&quot; : &quot;Genre TOUPIE&quot;,&#xD;&#xA;&#x9;&quot;genre.pompe&quot; : &quot;Genre POMPE&quot;,&#xD;&#xA;&#x9;&quot;genre.mixopompe&quot; : &quot;Genre MIXOPOMPE&quot;,&#xD;&#xA;&#x9;&quot;genre.enginchantier&quot; : &quot;Genre ENGIN CHANTIER&quot;,&#xD;&#xA;&#x9;&quot;genre.charlav&quot; : &quot;Genre CHARLAV&quot;,&#xD;&#xA;&#x9;&quot;genre.autre&quot; : &quot;Genre AUTRE&quot;,&#xD;&#xA;&#x9;&quot;genre.char&quot; : &quot;Genre CHAR&quot;,&#xD;&#xA;&#x9;&quot;energie.es&quot; : &quot;Energie ES&quot;,&#xD;&#xA;&#x9;&quot;energie.go&quot; : &quot;Energie GO&quot;,&#xD;&#xA;&#x9;&quot;energie.retrofit.retrofitables&quot; : &quot;Energie Rétrofitables&quot;,&#xD;&#xA;&#x9;&quot;energie.retrofit.b100&quot; : &quot;Energie B100&quot;,&#xD;&#xA;&#x9;&quot;energie.retrofit.xtl&quot; : &quot;Energie XTL&quot;,&#xD;&#xA;&#x9;&quot;energie.el&quot; : &quot;Energie EL&quot;,&#xD;&#xA;&#x9;&quot;energie.gaz&quot; : &quot;Energie  Gaz&quot;,&#xD;&#xA;&#x9;&quot;energie.gnr&quot; : &quot;Energie GNR&quot;,&#xD;&#xA;&#x9;&quot;energie.eh&quot; : &quot;Energie  EH&quot;,&#xD;&#xA;&#x9;&quot;energie.gh&quot; : &quot;Energie  GH&quot;,&#xD;&#xA;&#x9;&quot;energie.gn&quot; : &quot;Energie  GN&quot;,&#xD;&#xA;&#x9;&quot;energie.gl&quot; : &quot;Energie GL&quot;,&#xD;&#xA;&#x9;&quot;energie.meca&quot; : &quot;Energie MECA&quot;,&#xD;&#xA;&#x9;&quot;energie.sans&quot; : &quot;Energie SANS&quot;,&#xD;&#xA;&#x9;&quot;contrat.creditBail&quot; : &quot;Contrat CreditBail&quot;,&#xD;&#xA;&#x9;&quot;contrat.locFi&quot; : &quot;Contrat LocFi&quot;,&#xD;&#xA;&#x9;&quot;contrat.lcd&quot; : 'Contrat LCD',&#xD;&#xA;&#x9;&quot;contrat.lld&quot; : &quot;Contrat LLD&quot;,&#xD;&#xA;&#x9;&quot;contrat.lldac&quot; : &quot;Contrat LLDAC&quot;,&#xD;&#xA;&#x9;&quot;contrat.lcdac&quot; : &quot;Contrat LCDAC&quot;,&#xD;&#xA;&#x9;&quot;contrat.lmd&quot; : &quot;Contrat LMD&quot;,&#xD;&#xA;&#x9;&quot;contrat.ldmixte&quot; : &quot;Contrat LMDMIXTE&quot;,&#xD;&#xA;&#x9;&quot;rachat.creditBail&quot; : &quot;Rachat CreditBail&quot;,&#xD;&#xA;&#x9;&quot;rachat.locFi&quot; : &quot;Rachat LocFi&quot;&#xD;&#xA;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;return [&#xD;&#xA;&quot;searchPropositions&quot;:&#xD;&#xA;&#x9;[&quot;ALL_FIELDS&quot;: proposition_header_fields, //FOR ALL: proposition_all_fields,&#xD;&#xA;&#x9; &quot;HEADER_FIELDS&quot; : proposition_header_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;eligibleMaterials&quot;: [&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: eligible_materials_all_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;planMaterials&quot;: [&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: eligible_materials_all_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;planSynthesis&quot;:[&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: plan_synthesis_all_fields&#xD;&#xA;&#x9;]&#xD;&#xA;&#xD;&#xA;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMaCfJEe2wCNxuK7bHtA" name="applicationPage" dataType="_NpiNjSfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMaSfJEe2wCNxuK7bHtA" name="contractApplicationPage" content="contractApplicationPage" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMaifJEe2wCNxuK7bHtA" name="contractApplicationPage">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMayfJEe2wCNxuK7bHtA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_NpiMbCfJEe2wCNxuK7bHtA" name="bdm_object" multiple="true" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.lang.Object">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMbSfJEe2wCNxuK7bHtA" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMbifJEe2wCNxuK7bHtA" name="documentStorageId" dataType="_NpiNiyfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMbyfJEe2wCNxuK7bHtA" content="" returnType="java.lang.Long"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMcCfJEe2wCNxuK7bHtA" name="filepath" dataType="_NpiNjSfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMcSfJEe2wCNxuK7bHtA" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_NpiMcifJEe2wCNxuK7bHtA" name="queryListIds" multiple="true" dataType="_NpiNiyfJEe2wCNxuK7bHtA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMcyfJEe2wCNxuK7bHtA" name="init_queryListIds()" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def List&lt;Long> persistence_ids_list = [];&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;for (int i=0; i&lt;contractQueryListIds.size(); i++) {&#xD;&#xA;&#x9;&#x9;def Long long_value = Long.valueOf(contractQueryListIds[i]);&#xD;&#xA;&#x9;&#x9;persistence_ids_list.add(long_value);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_queryListIds&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return persistence_ids_list;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMdCfJEe2wCNxuK7bHtA" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMdSfJEe2wCNxuK7bHtA"/>
          </referencedElements>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_NpiMdifJEe2wCNxuK7bHtA" name="logClass" typeClassname="java.lang.String"/>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_NpiMdyfJEe2wCNxuK7bHtA" name="dataRowsToExport" multiple="true" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_NpiMeCfJEe2wCNxuK7bHtA" name="contractExportDataRows" content="contractExportDataRows" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_NpiMeSfJEe2wCNxuK7bHtA" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiMeifJEe2wCNxuK7bHtA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_NpiMeyfJEe2wCNxuK7bHtA">
        <targetForm xmi:type="expression:Expression" xmi:id="_NpiMfCfJEe2wCNxuK7bHtA" name="ExportDataForm" content="19410973-849c-4315-a1c1-347402af24b6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_NpiMfSfJEe2wCNxuK7bHtA" type="NONE">
        <targetForm xmi:type="expression:Expression" xmi:id="_NpiMfifJEe2wCNxuK7bHtA" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMfyfJEe2wCNxuK7bHtA" target="_NpiLdyfJEe2wCNxuK7bHtA" source="_NpiLcyfJEe2wCNxuK7bHtA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMgCfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMgSfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMgifJEe2wCNxuK7bHtA" name="OK" target="_NpiLvifJEe2wCNxuK7bHtA" source="_NpiL_yfJEe2wCNxuK7bHtA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMgyfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMhCfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMhSfJEe2wCNxuK7bHtA" target="_NpiL3ifJEe2wCNxuK7bHtA" source="_NpiLvifJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMhifJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMhyfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMiCfJEe2wCNxuK7bHtA" target="_NpiLzifJEe2wCNxuK7bHtA" source="_NpiLvSfJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMiSfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMiifJEe2wCNxuK7bHtA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMiyfJEe2wCNxuK7bHtA" target="_NpiL9yfJEe2wCNxuK7bHtA" source="_NpiLzifJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMjCfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMjSfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMjifJEe2wCNxuK7bHtA" name="Error" target="_NpiLzifJEe2wCNxuK7bHtA" source="_NpiL_yfJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMjyfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMkCfJEe2wCNxuK7bHtA" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_NpiMkSfJEe2wCNxuK7bHtA" name="errorDetected" dataType="_NpiNiCfJEe2wCNxuK7bHtA"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMkifJEe2wCNxuK7bHtA" target="_NpiL-yfJEe2wCNxuK7bHtA" source="_NpiL3ifJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMkyfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMlCfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMlSfJEe2wCNxuK7bHtA" target="_NpiL3ifJEe2wCNxuK7bHtA" source="_NpiLxyfJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMlifJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMlyfJEe2wCNxuK7bHtA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMmCfJEe2wCNxuK7bHtA" target="_NpiL9yfJEe2wCNxuK7bHtA" source="_NpiL2CfJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMmSfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMmifJEe2wCNxuK7bHtA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMmyfJEe2wCNxuK7bHtA" target="_NpiL_yfJEe2wCNxuK7bHtA" source="_NpiLdyfJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMnCfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMnSfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMnifJEe2wCNxuK7bHtA" target="_NpiL_yfJEe2wCNxuK7bHtA" source="_NpiMAyfJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMnyfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMoCfJEe2wCNxuK7bHtA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMoSfJEe2wCNxuK7bHtA" target="_NpiLzifJEe2wCNxuK7bHtA" source="_NpiMQSfJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMoifJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMoyfJEe2wCNxuK7bHtA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_NpiMpCfJEe2wCNxuK7bHtA" name="Has input data" target="_NpiMAyfJEe2wCNxuK7bHtA" source="_NpiLcyfJEe2wCNxuK7bHtA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_NpiMpSfJEe2wCNxuK7bHtA"/>
        <condition xmi:type="expression:Expression" xmi:id="_NpiMpifJEe2wCNxuK7bHtA" name="hasRowsToExport" content="return (dataRowsToExport.size() > 0) ? true : false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:JavaObjectData" xmi:id="_NpiMpyfJEe2wCNxuK7bHtA" name="dataRowsToExport" multiple="true" dataType="_NpiNjifJEe2wCNxuK7bHtA" className="java.util.Map"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_NpiMqCfJEe2wCNxuK7bHtA" name="ExportUser" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_NpiMqSfJEe2wCNxuK7bHtA" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_NpiMqifJEe2wCNxuK7bHtA">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_NpiMqyfJEe2wCNxuK7bHtA" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_NpiMrCfJEe2wCNxuK7bHtA"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_NpiMrSfJEe2wCNxuK7bHtA"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_NpiMrifJEe2wCNxuK7bHtA">
              <role>pop3pAppprover</role>
              <role>pop3pReadOnly</role>
              <role>user</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_NpiMryfJEe2wCNxuK7bHtA"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_NpiMsCfJEe2wCNxuK7bHtA" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_NpiMsSfJEe2wCNxuK7bHtA" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiMsifJEe2wCNxuK7bHtA" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_NpiMsyfJEe2wCNxuK7bHtA" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMtCfJEe2wCNxuK7bHtA" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiMtSfJEe2wCNxuK7bHtA" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_JE1DUIEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_JFd8gIEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiMuCfJEe2wCNxuK7bHtA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMuSfJEe2wCNxuK7bHtA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMuifJEe2wCNxuK7bHtA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMuyfJEe2wCNxuK7bHtA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMvCfJEe2wCNxuK7bHtA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMvSfJEe2wCNxuK7bHtA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMvifJEe2wCNxuK7bHtA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMvyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMwCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMwSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMwifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMwyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMxCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMxSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMxifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMxyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMyCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMySfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMyifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMyyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMzCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMzSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMzifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiMzyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM0CfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiM0SfJEe2wCNxuK7bHtA" id="OTHER">
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM0ifJEe2wCNxuK7bHtA" key="poi-4.0.0.jar" value="poi-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM0yfJEe2wCNxuK7bHtA" key="poi-ooxml-4.0.0.jar" value="poi-ooxml-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM1CfJEe2wCNxuK7bHtA" key="poi-scratchpad-4.0.0.jar" value="poi-scratchpad-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM1SfJEe2wCNxuK7bHtA" key="xmlbeans-2.6.0.jar" value="xmlbeans-2.6.0.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM1ifJEe2wCNxuK7bHtA" key="commons-collections4-4.2.jar" value="commons-collections4-4.2.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM1yfJEe2wCNxuK7bHtA" key="commons-compress-1.21.jar" value="commons-compress-1.21.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM2CfJEe2wCNxuK7bHtA" key="poi-ooxml-schemas-4.0.0.jar" value="poi-ooxml-schemas-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM2SfJEe2wCNxuK7bHtA" key="commons-codec-1.11.jar" value="commons-codec-1.11.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM2ifJEe2wCNxuK7bHtA" key="commons-logging-1.2.jar" value="commons-logging-1.2.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM2yfJEe2wCNxuK7bHtA" key="commons-math3-3.6.1.jar" value="commons-math3-3.6.1.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM3CfJEe2wCNxuK7bHtA" key="curvesapi-1.05.jar" value="curvesapi-1.05.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM3SfJEe2wCNxuK7bHtA" key="xmlbeans-3.0.1.jar" value="xmlbeans-3.0.1.jar" type="JAR"/>
        </processDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiM3ifJEe2wCNxuK7bHtA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM3yfJEe2wCNxuK7bHtA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM4CfJEe2wCNxuK7bHtA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM4SfJEe2wCNxuK7bHtA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM4ifJEe2wCNxuK7bHtA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM4yfJEe2wCNxuK7bHtA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM5CfJEe2wCNxuK7bHtA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM5SfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM5ifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM5yfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM6CfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM6SfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM6ifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM6yfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM7CfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM7SfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM7ifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM7yfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM8CfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM8SfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM8ifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM8yfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM9CfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM9SfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiM9ifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiM9yfJEe2wCNxuK7bHtA" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiM-CfJEe2wCNxuK7bHtA" name="logClass" value="ExportDataToExcel" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiM-SfJEe2wCNxuK7bHtA" name="formatAllRowsExported" value="ALL" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiM-ifJEe2wCNxuK7bHtA" name="queryAllPageSize" value="500" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiM-yfJEe2wCNxuK7bHtA" name="maximumNumberOfQueriedPages" value="1000" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiM_CfJEe2wCNxuK7bHtA" name="outputDirectory" value="/tmp" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiM_SfJEe2wCNxuK7bHtA" name="delayBeforeCaseCompletionInMinutes" value="5" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiM_ifJEe2wCNxuK7bHtA" name="excelDateFormat" value="dd/mm/yyyy" typeClassname="java.lang.String"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_NpiM_yfJEe2wCNxuK7bHtA" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_NpiNACfJEe2wCNxuK7bHtA">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_NpiNASfJEe2wCNxuK7bHtA" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_NpiNAifJEe2wCNxuK7bHtA"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_NpiNAyfJEe2wCNxuK7bHtA"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_NpiNBCfJEe2wCNxuK7bHtA"/>
            <users xmi:type="actormapping:Users" xmi:id="_NpiNBSfJEe2wCNxuK7bHtA"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_NpiNBifJEe2wCNxuK7bHtA" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_NpiNByfJEe2wCNxuK7bHtA" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiNCCfJEe2wCNxuK7bHtA" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_NpiNCSfJEe2wCNxuK7bHtA" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNCifJEe2wCNxuK7bHtA" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiNCyfJEe2wCNxuK7bHtA" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_JGtSoIEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_JHXZ8IEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiNDifJEe2wCNxuK7bHtA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNDyfJEe2wCNxuK7bHtA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNECfJEe2wCNxuK7bHtA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNESfJEe2wCNxuK7bHtA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNEifJEe2wCNxuK7bHtA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNEyfJEe2wCNxuK7bHtA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNFCfJEe2wCNxuK7bHtA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNFSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNFifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNFyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNGCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNGSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNGifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNGyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNHCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNHSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNHifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNHyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNICfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNISfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNIifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNIyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNJCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNJSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNJifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiNJyfJEe2wCNxuK7bHtA" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiNKCfJEe2wCNxuK7bHtA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNKSfJEe2wCNxuK7bHtA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNKifJEe2wCNxuK7bHtA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNKyfJEe2wCNxuK7bHtA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNLCfJEe2wCNxuK7bHtA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNLSfJEe2wCNxuK7bHtA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNLifJEe2wCNxuK7bHtA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNLyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNMCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNMSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNMifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNMyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNNCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNNSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNNifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNNyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNOCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNOSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNOifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNOyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNPCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNPSfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNPifJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNPyfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_NpiNQCfJEe2wCNxuK7bHtA" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_NpiNQSfJEe2wCNxuK7bHtA" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNQifJEe2wCNxuK7bHtA" name="logClass" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNQyfJEe2wCNxuK7bHtA" name="formatAllRowsExported" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNRCfJEe2wCNxuK7bHtA" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNRSfJEe2wCNxuK7bHtA" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNRifJEe2wCNxuK7bHtA" name="outputDirectory" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNRyfJEe2wCNxuK7bHtA" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNSCfJEe2wCNxuK7bHtA" name="excelDateFormat" typeClassname="java.lang.String"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNSSfJEe2wCNxuK7bHtA" name="logClass" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNSifJEe2wCNxuK7bHtA" name="formatAllRowsExported" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNSyfJEe2wCNxuK7bHtA" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNTCfJEe2wCNxuK7bHtA" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNTSfJEe2wCNxuK7bHtA" name="outputDirectory" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNTifJEe2wCNxuK7bHtA" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_NpiNTyfJEe2wCNxuK7bHtA" name="excelDateFormat" typeClassname="java.lang.String"/>
      <contract xmi:type="process:Contract" xmi:id="_NpiNUCfJEe2wCNxuK7bHtA">
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNUSfJEe2wCNxuK7bHtA" name="contractObjectName" description="BDM Object name for a BDM Query, or name of main object exported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNUifJEe2wCNxuK7bHtA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNUyfJEe2wCNxuK7bHtA" name="contractQueryName" description="BDM Query name for a BDM Query, empty otherwise">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNVCfJEe2wCNxuK7bHtA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNVSfJEe2wCNxuK7bHtA" name="contractQueryCriteria" description="BDM Query criteria for a BDM Query, empty if contractExportDataRows is provided">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNVifJEe2wCNxuK7bHtA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNVyfJEe2wCNxuK7bHtA" name="contractOutputFormat">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNWCfJEe2wCNxuK7bHtA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNWSfJEe2wCNxuK7bHtA" name="contractRowsExported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNWifJEe2wCNxuK7bHtA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNWyfJEe2wCNxuK7bHtA" name="contractPageCount" type="INTEGER" description="Page number for a BDM query, starting at 0">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNXCfJEe2wCNxuK7bHtA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNXSfJEe2wCNxuK7bHtA" name="contractPageSize" type="INTEGER" description="Maximum number of rows">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNXifJEe2wCNxuK7bHtA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNXyfJEe2wCNxuK7bHtA" name="contractApplicationPage">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNYCfJEe2wCNxuK7bHtA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNYSfJEe2wCNxuK7bHtA" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNYifJEe2wCNxuK7bHtA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_NpiNYyfJEe2wCNxuK7bHtA" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNZCfJEe2wCNxuK7bHtA"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_NpiNZSfJEe2wCNxuK7bHtA" name="fieldNames" description="List of field names" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNZifJEe2wCNxuK7bHtA"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_NpiNZyfJEe2wCNxuK7bHtA" name="name">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNaCfJEe2wCNxuK7bHtA"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_NpiNaSfJEe2wCNxuK7bHtA" name="value">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNaifJEe2wCNxuK7bHtA"/>
            </inputs>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_NpiNayfJEe2wCNxuK7bHtA" name="records" type="COMPLEX" description="List of records" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNbCfJEe2wCNxuK7bHtA"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_NpiNbSfJEe2wCNxuK7bHtA" name="values" description="List of values of each record" multiple="true">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNbifJEe2wCNxuK7bHtA"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_NpiNbyfJEe2wCNxuK7bHtA" name="textValue">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNcCfJEe2wCNxuK7bHtA"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_NpiNcSfJEe2wCNxuK7bHtA" name="boolValue" type="BOOLEAN">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNcifJEe2wCNxuK7bHtA"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_NpiNcyfJEe2wCNxuK7bHtA" name="dateValue" type="LOCALDATE">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_NpiNdCfJEe2wCNxuK7bHtA"/>
              </inputs>
            </inputs>
          </inputs>
        </inputs>
      </contract>
      <documents xmi:type="process:Document" xmi:id="_NpiNdSfJEe2wCNxuK7bHtA" name="exportFile">
        <mimeType xmi:type="expression:Expression" xmi:id="_NpiNdifJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_NpiNdyfJEe2wCNxuK7bHtA" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_NpiNeCfJEe2wCNxuK7bHtA" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_NpiNeSfJEe2wCNxuK7bHtA">
        <name xmi:type="expression:Expression" xmi:id="_NpiNeifJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_NpiNeyfJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_NpiNfCfJEe2wCNxuK7bHtA">
        <name xmi:type="expression:Expression" xmi:id="_NpiNfSfJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_NpiNfifJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_NpiNfyfJEe2wCNxuK7bHtA">
        <name xmi:type="expression:Expression" xmi:id="_NpiNgCfJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_NpiNgSfJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_NpiNgifJEe2wCNxuK7bHtA">
        <name xmi:type="expression:Expression" xmi:id="_NpiNgyfJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_NpiNhCfJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_NpiNhSfJEe2wCNxuK7bHtA">
        <name xmi:type="expression:Expression" xmi:id="_NpiNhifJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_NpiNhyfJEe2wCNxuK7bHtA" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_NpiNiCfJEe2wCNxuK7bHtA" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_NpiNiSfJEe2wCNxuK7bHtA" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_NpiNiifJEe2wCNxuK7bHtA" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_NpiNiyfJEe2wCNxuK7bHtA" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_NpiNjCfJEe2wCNxuK7bHtA" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_NpiNjSfJEe2wCNxuK7bHtA" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_NpiNjifJEe2wCNxuK7bHtA" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_NpiNjyfJEe2wCNxuK7bHtA" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_NpiNkCfJEe2wCNxuK7bHtA" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_NpiNkSfJEe2wCNxuK7bHtA" type="Process" element="_NpiLcCfJEe2wCNxuK7bHtA" name="MonDiagramme1" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_NpiNkifJEe2wCNxuK7bHtA" type="2007" element="_NpiLcSfJEe2wCNxuK7bHtA">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiNkyfJEe2wCNxuK7bHtA" type="5008" element="_NpiLcSfJEe2wCNxuK7bHtA"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiNlCfJEe2wCNxuK7bHtA" type="7001" element="_NpiLcSfJEe2wCNxuK7bHtA">
        <children xmi:type="notation:Node" xmi:id="_NpiNlSfJEe2wCNxuK7bHtA" type="3007" element="_NpiLcifJEe2wCNxuK7bHtA">
          <children xmi:type="notation:DecorationNode" xmi:id="_NpiNlifJEe2wCNxuK7bHtA" type="5007" element="_NpiLcifJEe2wCNxuK7bHtA"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_NpiNlyfJEe2wCNxuK7bHtA" type="7002" element="_NpiLcifJEe2wCNxuK7bHtA">
            <children xmi:type="notation:Shape" xmi:id="_NpiNmCfJEe2wCNxuK7bHtA" type="3002" element="_NpiLcyfJEe2wCNxuK7bHtA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_NpiNmSfJEe2wCNxuK7bHtA" type="5024" element="_NpiLcyfJEe2wCNxuK7bHtA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiNmifJEe2wCNxuK7bHtA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNmyfJEe2wCNxuK7bHtA" x="60" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_NpiNnCfJEe2wCNxuK7bHtA" type="3027" element="_NpiLdyfJEe2wCNxuK7bHtA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_NpiNnSfJEe2wCNxuK7bHtA" type="5017" element="_NpiLdyfJEe2wCNxuK7bHtA"/>
              <children xmi:type="notation:Shape" xmi:id="_NpiNnifJEe2wCNxuK7bHtA" type="3032" element="_NpiLvSfJEe2wCNxuK7bHtA" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_NpiNnyfJEe2wCNxuK7bHtA" type="5062" element="_NpiLvSfJEe2wCNxuK7bHtA">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiNoCfJEe2wCNxuK7bHtA" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNoSfJEe2wCNxuK7bHtA" x="91" y="52"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNoifJEe2wCNxuK7bHtA" x="160" y="60" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_NpiNoyfJEe2wCNxuK7bHtA" type="3005" element="_NpiLvifJEe2wCNxuK7bHtA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_NpiNpCfJEe2wCNxuK7bHtA" type="5005" element="_NpiLvifJEe2wCNxuK7bHtA"/>
              <children xmi:type="notation:Shape" xmi:id="_NpiNpSfJEe2wCNxuK7bHtA" type="3043" element="_NpiLxyfJEe2wCNxuK7bHtA" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_NpiNpifJEe2wCNxuK7bHtA" type="5055" element="_NpiLxyfJEe2wCNxuK7bHtA">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiNpyfJEe2wCNxuK7bHtA" x="77" y="-38"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNqCfJEe2wCNxuK7bHtA" x="44" y="-17"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNqSfJEe2wCNxuK7bHtA" x="501" y="54" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_NpiNqifJEe2wCNxuK7bHtA" type="3005" element="_NpiLzifJEe2wCNxuK7bHtA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_NpiNqyfJEe2wCNxuK7bHtA" type="5005" element="_NpiLzifJEe2wCNxuK7bHtA"/>
              <children xmi:type="notation:Shape" xmi:id="_NpiNrCfJEe2wCNxuK7bHtA" type="3043" element="_NpiL2CfJEe2wCNxuK7bHtA" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_NpiNrSfJEe2wCNxuK7bHtA" type="5055" element="_NpiL2CfJEe2wCNxuK7bHtA">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiNrifJEe2wCNxuK7bHtA" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNryfJEe2wCNxuK7bHtA"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNsCfJEe2wCNxuK7bHtA" x="498" y="138" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_NpiNsSfJEe2wCNxuK7bHtA" type="3027" element="_NpiL3ifJEe2wCNxuK7bHtA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_NpiNsifJEe2wCNxuK7bHtA" type="5017" element="_NpiL3ifJEe2wCNxuK7bHtA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNsyfJEe2wCNxuK7bHtA" x="688" y="56" width="124" height="62"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_NpiNtCfJEe2wCNxuK7bHtA" type="3062" element="_NpiL9yfJEe2wCNxuK7bHtA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_NpiNtSfJEe2wCNxuK7bHtA" type="5090" element="_NpiL9yfJEe2wCNxuK7bHtA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiNtifJEe2wCNxuK7bHtA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNtyfJEe2wCNxuK7bHtA" x="840" y="165" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_NpiNuCfJEe2wCNxuK7bHtA" type="3062" element="_NpiL-yfJEe2wCNxuK7bHtA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_NpiNuSfJEe2wCNxuK7bHtA" type="5090" element="_NpiL-yfJEe2wCNxuK7bHtA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiNuifJEe2wCNxuK7bHtA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNuyfJEe2wCNxuK7bHtA" x="855" y="72" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_NpiNvCfJEe2wCNxuK7bHtA" type="3008" element="_NpiL_yfJEe2wCNxuK7bHtA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_NpiNvSfJEe2wCNxuK7bHtA" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiNvifJEe2wCNxuK7bHtA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNvyfJEe2wCNxuK7bHtA" x="327" y="103"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_NpiNwCfJEe2wCNxuK7bHtA" type="3027" element="_NpiMAyfJEe2wCNxuK7bHtA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_NpiNwSfJEe2wCNxuK7bHtA" type="5017" element="_NpiMAyfJEe2wCNxuK7bHtA"/>
              <children xmi:type="notation:Shape" xmi:id="_NpiNwifJEe2wCNxuK7bHtA" type="3032" element="_NpiMQSfJEe2wCNxuK7bHtA" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_NpiNwyfJEe2wCNxuK7bHtA" type="5062" element="_NpiMQSfJEe2wCNxuK7bHtA">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiNxCfJEe2wCNxuK7bHtA" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNxSfJEe2wCNxuK7bHtA" x="250" y="215"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNxifJEe2wCNxuK7bHtA" x="160" y="198" width="120" height="60"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_NpiNxyfJEe2wCNxuK7bHtA"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_NpiNyCfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_NpiNySfJEe2wCNxuK7bHtA"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_NpiNyifJEe2wCNxuK7bHtA"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiNyyfJEe2wCNxuK7bHtA" x="23" y="10" width="1657" height="343"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_NpiNzCfJEe2wCNxuK7bHtA"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiNzSfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_NpiNzifJEe2wCNxuK7bHtA"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_NpiNzyfJEe2wCNxuK7bHtA"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_NpiN0CfJEe2wCNxuK7bHtA" width="1680" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_NpiN0SfJEe2wCNxuK7bHtA"/>
    <edges xmi:type="notation:Connector" xmi:id="_NpiN0ifJEe2wCNxuK7bHtA" type="4001" element="_NpiMfyfJEe2wCNxuK7bHtA" source="_NpiNmCfJEe2wCNxuK7bHtA" target="_NpiNnCfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiN0yfJEe2wCNxuK7bHtA" type="6001" element="_NpiMfyfJEe2wCNxuK7bHtA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiN1CfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiN1SfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiN1ifJEe2wCNxuK7bHtA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiN1yfJEe2wCNxuK7bHtA" type="4001" element="_NpiMgifJEe2wCNxuK7bHtA" source="_NpiNvCfJEe2wCNxuK7bHtA" target="_NpiNoyfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiN2CfJEe2wCNxuK7bHtA" type="6001" element="_NpiMgifJEe2wCNxuK7bHtA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiN2SfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiN2ifJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiN2yfJEe2wCNxuK7bHtA" points="[-12, -26, -174, 24]$[-12, -44, -174, 6]$[141, -44, -21, 6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiN3CfJEe2wCNxuK7bHtA" id="(0.7674418604651163,0.6046511627906976)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiN3SfJEe2wCNxuK7bHtA" id="(0.18421052631578946,0.43859649122807015)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiN3ifJEe2wCNxuK7bHtA" type="4001" element="_NpiMhSfJEe2wCNxuK7bHtA" source="_NpiNoyfJEe2wCNxuK7bHtA" target="_NpiNsSfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiN3yfJEe2wCNxuK7bHtA" type="6001" element="_NpiMhSfJEe2wCNxuK7bHtA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiN4CfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiN4SfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiN4ifJEe2wCNxuK7bHtA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiN4yfJEe2wCNxuK7bHtA" type="4001" element="_NpiMiCfJEe2wCNxuK7bHtA" source="_NpiNnifJEe2wCNxuK7bHtA" target="_NpiNqifJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiN5CfJEe2wCNxuK7bHtA" type="6001" element="_NpiMiCfJEe2wCNxuK7bHtA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiN5SfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiN5ifJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiN5yfJEe2wCNxuK7bHtA" points="[0, 0, -157, -40]$[147, 41, -10, 1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiN6CfJEe2wCNxuK7bHtA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiN6SfJEe2wCNxuK7bHtA" id="(0.08771929824561403,0.631578947368421)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiN6ifJEe2wCNxuK7bHtA" type="4001" element="_NpiMiyfJEe2wCNxuK7bHtA" source="_NpiNqifJEe2wCNxuK7bHtA" target="_NpiNtCfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiN6yfJEe2wCNxuK7bHtA" type="6001" element="_NpiMiyfJEe2wCNxuK7bHtA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiN7CfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiN7SfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiN7ifJEe2wCNxuK7bHtA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiN7yfJEe2wCNxuK7bHtA" type="4001" element="_NpiMjifJEe2wCNxuK7bHtA" source="_NpiNvCfJEe2wCNxuK7bHtA" target="_NpiNqifJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiN8CfJEe2wCNxuK7bHtA" type="6001" element="_NpiMjifJEe2wCNxuK7bHtA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiN8SfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiN8ifJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiN8yfJEe2wCNxuK7bHtA" points="[0, 4, -120, -35]$[0, 39, -120, 0]$[120, 39, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiN9CfJEe2wCNxuK7bHtA" id="(0.7674418604651163,0.20930232558139536)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiN9SfJEe2wCNxuK7bHtA" id="(0.0,0.24561403508771928)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiN9ifJEe2wCNxuK7bHtA" type="4001" element="_NpiMkifJEe2wCNxuK7bHtA" source="_NpiNsSfJEe2wCNxuK7bHtA" target="_NpiNuCfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiN9yfJEe2wCNxuK7bHtA" type="6001" element="_NpiMkifJEe2wCNxuK7bHtA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiN-CfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiN-SfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiN-ifJEe2wCNxuK7bHtA" points="[0, -3, -98, 0]$[92, -5, -6, -2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiN-yfJEe2wCNxuK7bHtA" id="(1.0,0.4838709677419355)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiN_CfJEe2wCNxuK7bHtA" id="(0.2,0.43333333333333335)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiN_SfJEe2wCNxuK7bHtA" type="4001" element="_NpiMlSfJEe2wCNxuK7bHtA" source="_NpiNpSfJEe2wCNxuK7bHtA" target="_NpiNsSfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiN_ifJEe2wCNxuK7bHtA" type="6001" element="_NpiMlSfJEe2wCNxuK7bHtA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiN_yfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiOACfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiOASfJEe2wCNxuK7bHtA" points="[0, -25, -213, -49]$[0, -48, -213, -72]$[257, -48, 44, -72]$[257, -8, 44, -32]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOAifJEe2wCNxuK7bHtA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOAyfJEe2wCNxuK7bHtA" id="(0.14516129032258066,0.5161290322580645)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiOBCfJEe2wCNxuK7bHtA" type="4001" element="_NpiMmCfJEe2wCNxuK7bHtA" source="_NpiNrCfJEe2wCNxuK7bHtA" target="_NpiNtCfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiOBSfJEe2wCNxuK7bHtA" type="6001" element="_NpiMmCfJEe2wCNxuK7bHtA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiOBifJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiOByfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiOCCfJEe2wCNxuK7bHtA" points="[0, -2, -163, 43]$[163, -2, 0, 43]$[163, -31, 0, 14]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOCSfJEe2wCNxuK7bHtA" id="(1.0,1.0)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiOCifJEe2wCNxuK7bHtA" type="4001" element="_NpiMmyfJEe2wCNxuK7bHtA" source="_NpiNnCfJEe2wCNxuK7bHtA" target="_NpiNvCfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiOCyfJEe2wCNxuK7bHtA" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiODCfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiODSfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiODifJEe2wCNxuK7bHtA" points="[0, 6, -52, -33]$[28, 6, -24, -33]$[28, 33, -24, -6]$[47, 33, -5, -6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiODyfJEe2wCNxuK7bHtA" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOECfJEe2wCNxuK7bHtA" id="(0.11627906976744186,0.627906976744186)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiOESfJEe2wCNxuK7bHtA" type="4001" element="_NpiMnifJEe2wCNxuK7bHtA" source="_NpiNwCfJEe2wCNxuK7bHtA" target="_NpiNvCfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiOEifJEe2wCNxuK7bHtA" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiOEyfJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiOFCfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiOFSfJEe2wCNxuK7bHtA" points="[0, -2, -56, 94]$[28, -2, -28, 94]$[28, -96, -28, 0]$[55, -96, -1, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOFifJEe2wCNxuK7bHtA" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOFyfJEe2wCNxuK7bHtA" id="(0.20930232558139536,0.6976744186046512)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiOGCfJEe2wCNxuK7bHtA" type="4001" element="_NpiMoSfJEe2wCNxuK7bHtA" source="_NpiNwifJEe2wCNxuK7bHtA" target="_NpiNqifJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiOGSfJEe2wCNxuK7bHtA" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiOGifJEe2wCNxuK7bHtA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiOGyfJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiOHCfJEe2wCNxuK7bHtA" points="[0, -13, -230, 75]$[97, -13, -133, 75]$[97, -96, -133, -8]$[226, -96, -4, -8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOHSfJEe2wCNxuK7bHtA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOHifJEe2wCNxuK7bHtA" id="(0.03508771929824561,0.8596491228070176)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_NpiOHyfJEe2wCNxuK7bHtA" type="4001" element="_NpiMpCfJEe2wCNxuK7bHtA" source="_NpiNmCfJEe2wCNxuK7bHtA" target="_NpiNwCfJEe2wCNxuK7bHtA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_NpiOICfJEe2wCNxuK7bHtA" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_NpiOISfJEe2wCNxuK7bHtA" x="14" y="-44"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_NpiOIifJEe2wCNxuK7bHtA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_NpiOIyfJEe2wCNxuK7bHtA" points="[-15, -1, -89, -139]$[-15, 129, -89, -9]$[70, 129, -4, -9]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOJCfJEe2wCNxuK7bHtA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_NpiOJSfJEe2wCNxuK7bHtA" id="(0.03333333333333333,0.6333333333333333)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
