<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_uczPYK4fEe2xoPEc8OUh0w" name="ExportDataToExcel" version="1.7" author="C6754557" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004" configId="ACED0005740010372E31312E312D303031372E31312E34">
    <elements xmi:type="process:Pool" xmi:id="_uczPYa4fEe2xoPEc8OUh0w" name="ExportDataToExcel" version="1.7">
      <elements xmi:type="process:Lane" xmi:id="_uczPYq4fEe2xoPEc8OUh0w" name="Export User" actor="_ucz3j64fEe2xoPEc8OUh0w">
        <elements xmi:type="process:StartEvent" xmi:id="_uczPY64fEe2xoPEc8OUh0w" name="Start Export" outgoing="_ucz3Zq4fEe2xoPEc8OUh0w _ucz3i64fEe2xoPEc8OUh0w">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_uczPZK4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_uczPZa4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_uczPZq4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_uczPZ64fEe2xoPEc8OUh0w" name="Export Data from BDM Query" outgoing="_ucz3gq4fEe2xoPEc8OUh0w" incoming="_ucz3Zq4fEe2xoPEc8OUh0w">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_uczPaK4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_uczPaa4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_uczPaq4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_uczPa64fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_uczPbK4fEe2xoPEc8OUh0w" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_uczPba4fEe2xoPEc8OUh0w" name="exportDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_uczPbq4fEe2xoPEc8OUh0w" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_uczPb64fEe2xoPEc8OUh0w" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_uczPcK4fEe2xoPEc8OUh0w" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_uczPca4fEe2xoPEc8OUh0w" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_uczPcq4fEe2xoPEc8OUh0w" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_uczPc64fEe2xoPEc8OUh0w" name="exportDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def BusinessObjectDAO dao_instance = null;&#xD;&#xA;def java.lang.reflect.Method find_method = null;&#xD;&#xA;def Object[] method_parameters = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def int page_count=0;&#xD;&#xA;def int page_limit=0;&#x9;// To avoid infinite loop&#xD;&#xA;def int page_size=0;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;// Map objectName (lowercase) -> DAO object&#xD;&#xA;def Map dao_objects_map = [&quot;proposition&quot;: propositionDAO];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Data Export&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get find method parameters&#xD;&#xA;&#x9;def Map find_method_profile = BDMUtility.getFindQuery(objectName,queryName, queryCriteria, dao_objects_map, queryListIds);&#xD;&#xA;&#x9;error_message = find_method_profile['errorMessage'];&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error while retrieving find method: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;dao_instance = find_method_profile['daoInstance'];&#xD;&#xA;&#x9;&#x9;find_method = find_method_profile['findMethod'];&#xD;&#xA;&#x9;&#x9;method_parameters = find_method_profile['parameters'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get Page count / page size values according to the type of query&#xD;&#xA;&#x9;&#x9;if (! formatAllRowsExported.equalsIgnoreCase(rowsExported)) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting only current page according to selected format : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = pageCount;&#xD;&#xA;&#x9;&#x9;&#x9;page_size = pageSize;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit = page_count+1;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting all rows : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = 0;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit=maximumNumberOfQueriedPages;&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;&#x9;&#x9;page_size=queryAllPageSize;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get fields map&#xD;&#xA;&#x9;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, dao_instance: dao_instance, find_method: find_method, method_parameters: method_parameters, page_count: page_count, page_size: page_size, page_limit: page_limit, field_names_list: field_names_list, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_uczPdK4fEe2xoPEc8OUh0w" name="queryCriteria" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_uczPda4fEe2xoPEc8OUh0w" name="propositionDAO" content="propositionDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.PropositionDAO" returnTypeFixed="true"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_uczPdq4fEe2xoPEc8OUh0w" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_uczPd64fEe2xoPEc8OUh0w" name="objectName" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_uczPeK4fEe2xoPEc8OUh0w" name="queryName" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_ucz2cK4fEe2xoPEc8OUh0w" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_ucz2ca4fEe2xoPEc8OUh0w" name="pageCount" dataType="_uc0dxa4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_ucz2cq4fEe2xoPEc8OUh0w" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_ucz2c64fEe2xoPEc8OUh0w" name="pageSize" dataType="_uc0dxa4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz2dK4fEe2xoPEc8OUh0w" name="formatAllRowsExported" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz2da4fEe2xoPEc8OUh0w" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz2dq4fEe2xoPEc8OUh0w" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz2d64fEe2xoPEc8OUh0w" name="fieldsMap" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_ucz2eK4fEe2xoPEc8OUh0w" name="rowsExported" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_ucz2ea4fEe2xoPEc8OUh0w" name="applicationPage" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_ucz2eq4fEe2xoPEc8OUh0w" name="outputFormat" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz2e64fEe2xoPEc8OUh0w" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_ucz2fK4fEe2xoPEc8OUh0w" name="queryListIds" multiple="true" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz2fa4fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz2fq4fEe2xoPEc8OUh0w" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz2f64fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz2gK4fEe2xoPEc8OUh0w" name="executeExport" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def find_method = result['find_method'];&#xD;&#xA;&#x9;def dao_instance = result['dao_instance'];&#xD;&#xA;&#x9;def method_parameters = result['method_parameters'];&#xD;&#xA;&#x9;def int page_count =  result['page_count'];&#xD;&#xA;&#x9;def int page_limit = result['page_limit'];&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;def int page_size = result['page_size'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;while ((has_more) &amp;&amp; (page_count&lt;page_limit) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Executing query with &quot; + String.valueOf(method_parameters.size()) + &quot; parameters for page &quot; + String.valueOf(page_count) + &quot; and page size=&quot; + String.valueOf(page_size));&#xD;&#xA;&#x9;&#x9;def Map find_result = BDMUtility.executeFindMethod(dao_instance, find_method, method_parameters, page_count, page_size);&#xD;&#xA;&#x9;&#x9;error_message = find_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;def records_list = find_result['records'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Error detected on query page &quot; + String.valueOf(page_count) + &quot; : &quot; + error_message);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (records_list == null) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : records list is null&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def nb_records = records_list.size();&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : found &quot;  + String.valueOf(nb_records) + &quot; records&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Export list to Excel&#xD;&#xA;&#x9;&#x9;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ExcelFile.addExcelDataRow(worksheet, records_list[i], field_names_list, row_index, dateStyle);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;if (nb_records&lt;page_size) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Next page&#xD;&#xA;&#x9;&#x9;page_count = page_count +1;&#xD;&#xA;&#x9;} // end while&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_ucz2ga4fEe2xoPEc8OUh0w" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_ucz2gq4fEe2xoPEc8OUh0w" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_ucz2g64fEe2xoPEc8OUh0w" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz2hK4fEe2xoPEc8OUh0w" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz2ha4fEe2xoPEc8OUh0w" name="logClass" typeClassname="java.lang.String"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz2hq4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz2h64fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz2iK4fEe2xoPEc8OUh0w" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz2ia4fEe2xoPEc8OUh0w" name="errorMessage" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz2iq4fEe2xoPEc8OUh0w" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz2i64fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz2jK4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz2ja4fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz2jq4fEe2xoPEc8OUh0w" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz2j64fEe2xoPEc8OUh0w" name="documentStorageId" dataType="_uc0dxq4fEe2xoPEc8OUh0w"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz2kK4fEe2xoPEc8OUh0w" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz2ka4fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz2kq4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz2k64fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz2lK4fEe2xoPEc8OUh0w" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz2la4fEe2xoPEc8OUh0w" name="filepath" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz2lq4fEe2xoPEc8OUh0w" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz2l64fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz2mK4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz2ma4fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz2mq4fEe2xoPEc8OUh0w" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz2m64fEe2xoPEc8OUh0w" name="errorDetected" dataType="_uc0dw64fEe2xoPEc8OUh0w"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz2nK4fEe2xoPEc8OUh0w" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz2na4fEe2xoPEc8OUh0w" name="errorMessage" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz2nq4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_ucz2n64fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_ucz2oK4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_ucz2oa4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_ucz2oq4fEe2xoPEc8OUh0w" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_ucz2o64fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_ucz2pK4fEe2xoPEc8OUh0w" name="ExportError" outgoing="_ucz3b64fEe2xoPEc8OUh0w"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_ucz2pa4fEe2xoPEc8OUh0w" name="Display Output File" outgoing="_ucz3bK4fEe2xoPEc8OUh0w" incoming="_ucz3aa4fEe2xoPEc8OUh0w" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_ucz2pq4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_ucz2p64fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_ucz2qK4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_ucz2qa4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_ucz2qq4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_ucz2q64fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_ucz2rK4fEe2xoPEc8OUh0w" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_ucz2ra4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_ucz2rq4fEe2xoPEc8OUh0w" name="TimerTermination" outgoing="_ucz3fK4fEe2xoPEc8OUh0w">
            <condition xmi:type="expression:Expression" xmi:id="_ucz2r64fEe2xoPEc8OUh0w" name="delayBeforeCaseCompletionInMinutes" content="return 60000L * delayBeforeCaseCompletionInMinutes;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz2sK4fEe2xoPEc8OUh0w" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
            </condition>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_ucz2sa4fEe2xoPEc8OUh0w">
            <targetForm xmi:type="expression:Expression" xmi:id="_ucz2sq4fEe2xoPEc8OUh0w" name="DisplayExportFile" content="8d9a9132-635d-4604-b63e-711933a32b41" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_ucz2s64fEe2xoPEc8OUh0w"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_ucz2tK4fEe2xoPEc8OUh0w" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_ucz2ta4fEe2xoPEc8OUh0w" name="Display Error" outgoing="_ucz3cq4fEe2xoPEc8OUh0w" incoming="_ucz3b64fEe2xoPEc8OUh0w _ucz3da4fEe2xoPEc8OUh0w _ucz3iK4fEe2xoPEc8OUh0w" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_ucz2tq4fEe2xoPEc8OUh0w" name="displayName()" content="return &quot;Echec de l'export de données&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_ucz2t64fEe2xoPEc8OUh0w" name="dynamicDescription()" content="return errorMessage.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_ucz2uK4fEe2xoPEc8OUh0w" name="errorMessage" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_ucz2ua4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_ucz2uq4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_ucz2u64fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_ucz2vK4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_ucz2va4fEe2xoPEc8OUh0w" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_ucz2vq4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_ucz2v64fEe2xoPEc8OUh0w" name="Error Expiry" outgoing="_ucz3f64fEe2xoPEc8OUh0w">
            <condition xmi:type="expression:Expression" xmi:id="_ucz2wK4fEe2xoPEc8OUh0w" name="00:05:00" content="300000L" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long"/>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_ucz2wa4fEe2xoPEc8OUh0w">
            <targetForm xmi:type="expression:Expression" xmi:id="_ucz2wq4fEe2xoPEc8OUh0w" name="DisplayExportError" content="591192bc-c8ec-41e5-b987-f74165738cb6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_ucz2w64fEe2xoPEc8OUh0w"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_ucz2xK4fEe2xoPEc8OUh0w" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_ucz2xa4fEe2xoPEc8OUh0w" name="Purge Document" outgoing="_ucz3ea4fEe2xoPEc8OUh0w" incoming="_ucz3bK4fEe2xoPEc8OUh0w _ucz3fK4fEe2xoPEc8OUh0w">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_ucz2xq4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_ucz2x64fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_ucz2yK4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_ucz2ya4fEe2xoPEc8OUh0w" name="purgeDocumentAndFile" definitionId="scripting-groovy-script" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_ucz2yq4fEe2xoPEc8OUh0w" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_ucz2y64fEe2xoPEc8OUh0w" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_ucz2zK4fEe2xoPEc8OUh0w" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_ucz2za4fEe2xoPEc8OUh0w" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_ucz2zq4fEe2xoPEc8OUh0w" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_ucz2z64fEe2xoPEc8OUh0w" name="purgeDocumentAndFile" content="import org.bonitasoft.engine.api.APIAccessor;&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Delete temporary file&#xD;&#xA;&#x9;if (! filepath.isEmpty()) {&#xD;&#xA;&#x9;&#x9;FileUtility.deleteFile(filepath);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Remove document&#xD;&#xA;&#x9;if (documentStorageId != null) {&#xD;&#xA;&#x9;&#x9;FileUtility.removeDocument(documentStorageId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;logError(log_file, &quot;Failed to purge document: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_ucz20K4fEe2xoPEc8OUh0w" name="documentStorageId" dataType="_uc0dxq4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_ucz20a4fEe2xoPEc8OUh0w" name="filepath" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_ucz20q4fEe2xoPEc8OUh0w" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz2064fEe2xoPEc8OUh0w" name="logClass" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz21K4fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz21a4fEe2xoPEc8OUh0w" content=""/>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz21q4fEe2xoPEc8OUh0w" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_ucz2164fEe2xoPEc8OUh0w" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz22K4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_ucz22a4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_ucz22q4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_ucz2264fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_ucz23K4fEe2xoPEc8OUh0w" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_ucz23a4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_ucz23q4fEe2xoPEc8OUh0w" name="End Error" incoming="_ucz3cq4fEe2xoPEc8OUh0w _ucz3f64fEe2xoPEc8OUh0w">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_ucz2364fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_ucz24K4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_ucz24a4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_ucz24q4fEe2xoPEc8OUh0w" name="End Export" incoming="_ucz3ea4fEe2xoPEc8OUh0w">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_ucz2464fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_ucz25K4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_ucz25a4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_ucz25q4fEe2xoPEc8OUh0w" name="is OK?" outgoing="_ucz3aa4fEe2xoPEc8OUh0w _ucz3da4fEe2xoPEc8OUh0w" incoming="_ucz3gq4fEe2xoPEc8OUh0w _ucz3ha4fEe2xoPEc8OUh0w">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_ucz2564fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_ucz26K4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_ucz26a4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_ucz26q4fEe2xoPEc8OUh0w" name="Export Data from Input" outgoing="_ucz3ha4fEe2xoPEc8OUh0w" incoming="_ucz3i64fEe2xoPEc8OUh0w">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_ucz2664fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_ucz27K4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_ucz27a4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_ucz27q4fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_ucz2764fEe2xoPEc8OUh0w" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_ucz28K4fEe2xoPEc8OUh0w" name="exportInputDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_ucz28a4fEe2xoPEc8OUh0w" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_ucz28q4fEe2xoPEc8OUh0w" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_ucz2864fEe2xoPEc8OUh0w" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_ucz29K4fEe2xoPEc8OUh0w" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_ucz29a4fEe2xoPEc8OUh0w" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_ucz29q4fEe2xoPEc8OUh0w" name="exportInputDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def List&lt;Integer> field_values_index = null;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Export from data provided in contract&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get fields map&#xD;&#xA;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// For each field name, get the corresponding index of fields values&#xD;&#xA;&#x9;&#x9;field_values_index = buildFieldValuesIndex(dataRowsToExport[0].get('fieldNames'), field_names_list);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, field_names_list: field_names_list, field_values_index: field_values_index, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Remove suffix after _ if present&#xD;&#xA;&#x9;&#x9;int pos_suffix = pageName.indexOf('_');&#xD;&#xA;&#x9;&#x9;if (pos_suffix > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;pageName = pageName.substring(0, pos_suffix);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;Integer> buildFieldValuesIndex(List&lt;String> dataRowsFieldNames, List&lt;String> field_names_list) {&#xD;&#xA;&#x9;def List&lt;Integer> list_fields_values_index = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// We need at list one record of data&#xD;&#xA;&#x9;if (dataRowsFieldNames != null) {&#xD;&#xA;&#x9;&#x9;def int nb_fields_values = dataRowsFieldNames.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Loop through each field from field_names_list&#xD;&#xA;&#x9;&#x9;def int nb_fields_names = field_names_list.size();&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields_names; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;// Search the field name in the record values&#xD;&#xA;&#x9;&#x9;&#x9;def String one_field_name = field_names_list[i];&#xD;&#xA;&#x9;&#x9;&#x9;def Integer field_value_index = null;&#xD;&#xA;&#x9;&#x9;&#x9;for (int j=0; j&lt;nb_fields_values; j++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def value_field_name = dataRowsFieldNames[j];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (one_field_name.equalsIgnoreCase(value_field_name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Field has been found in record values&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;field_value_index = Integer.valueOf(j);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Store the field index found, or null if not found&#xD;&#xA;&#x9;&#x9;&#x9;// CFR 16/02/2023 - BPM-904 : Behavior of push() method changed in Groovy 2.5 to align with Java, use add() method instead to get the old behavior &#xD;&#xA;&#x9;&#x9;&#x9;// WAS : list_fields_values_index.push(field_value_index);&#xD;&#xA;&#x9;&#x9;&#x9;list_fields_values_index.add(field_value_index);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return list_fields_values_index;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_6uE-UK4gEe2xoPEc8OUh0w" name="fieldsMap" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_6uE-Ua4gEe2xoPEc8OUh0w" name="applicationPage" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_6uE-Uq4gEe2xoPEc8OUh0w" name="objectName" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_6uE-U64gEe2xoPEc8OUh0w" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_6uE-VK4gEe2xoPEc8OUh0w" name="outputFormat" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_6uE-Va4gEe2xoPEc8OUh0w" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_6uE-Vq4gEe2xoPEc8OUh0w" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_6uFlYK4gEe2xoPEc8OUh0w" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_6uFlYa4gEe2xoPEc8OUh0w" name="dataRowsToExport" multiple="true" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz3AK4fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz3Aa4fEe2xoPEc8OUh0w" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz3Aq4fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz3A64fEe2xoPEc8OUh0w" name="executeExportOfInputData" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def List&lt;Integer> field_values_index = result['field_values_index'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Export list to Excel&#xD;&#xA;&#x9;List&lt;Map> data_records = dataRowsToExport[0].get('records');&#xD;&#xA;&#x9;def int nb_records = data_records.size();&#xD;&#xA;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get the record values and add the row to the speadsheet&#xD;&#xA;&#x9;&#x9;def List&lt;Object> one_record_values = data_records[i].get(&quot;values&quot;);&#xD;&#xA;&#x9;&#x9;def List&lt;Object> record_values = getRecordValues(one_record_values, field_values_index, log_file);&#xD;&#xA;&#x9;&#x9;ExcelFile.addExcelFieldValuesRow(worksheet, record_values, field_names_list, row_index, dateStyle)&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;def List&lt;Object> getRecordValues(List&lt;Object> one_row_to_export, List&lt;Integer> field_values_index, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;Object> record_values = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def int nb_fields = field_values_index.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;def Integer value_index = field_values_index[i];&#xD;&#xA;&#x9;&#x9;&#x9;if ((value_index == null) || (value_index >= one_row_to_export.size())) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Field not found&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(null);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Get the field value&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def Object string_value = one_row_to_export[value_index];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def Object field_value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// CFR 30/05/2022 - BPM-814 : Handle Boolean values received as a String true/false&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (string_value instanceof String) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (string_value.equals(&quot;true&quot;) || string_value.equals(&quot;false&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = Boolean.valueOf(string_value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (string_value.isInteger()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// Cell is a number&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = Integer.parseInt(string_value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (string_value.isLong()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// Cell is a number&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = Integer.parseLong(string_value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} else if (string_value.isDouble()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// Cell is a number&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = Double.parseDouble(string_value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = string_value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = string_value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(field_value);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getRecordValues: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return record_values;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_ucz3BK4fEe2xoPEc8OUh0w" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_ucz3Ba4fEe2xoPEc8OUh0w" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_ucz3Bq4fEe2xoPEc8OUh0w" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz3B64fEe2xoPEc8OUh0w" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz3CK4fEe2xoPEc8OUh0w" name="dataRowsToExport" multiple="true" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz3Ca4fEe2xoPEc8OUh0w" name="logClass" typeClassname="java.lang.String"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz3Cq4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz3C64fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz3DK4fEe2xoPEc8OUh0w" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz3Da4fEe2xoPEc8OUh0w" name="errorMessage" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz3Dq4fEe2xoPEc8OUh0w" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz3D64fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz3EK4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz3Ea4fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz3Eq4fEe2xoPEc8OUh0w" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz3E64fEe2xoPEc8OUh0w" name="documentStorageId" dataType="_uc0dxq4fEe2xoPEc8OUh0w"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz3FK4fEe2xoPEc8OUh0w" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz3Fa4fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz3Fq4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz3F64fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz3GK4fEe2xoPEc8OUh0w" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz3Ga4fEe2xoPEc8OUh0w" name="filepath" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz3Gq4fEe2xoPEc8OUh0w" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz3G64fEe2xoPEc8OUh0w" name="exportResult" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz3HK4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_ucz3Ha4fEe2xoPEc8OUh0w">
              <leftOperand xmi:type="expression:Expression" xmi:id="_ucz3Hq4fEe2xoPEc8OUh0w" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz3H64fEe2xoPEc8OUh0w" name="errorDetected" dataType="_uc0dw64fEe2xoPEc8OUh0w"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_ucz3IK4fEe2xoPEc8OUh0w" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_ucz3Ia4fEe2xoPEc8OUh0w" name="errorMessage" dataType="_uc0dyK4fEe2xoPEc8OUh0w"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_ucz3Iq4fEe2xoPEc8OUh0w" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_ucz3I64fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_ucz3JK4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_ucz3Ja4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_ucz3Jq4fEe2xoPEc8OUh0w" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_ucz3J64fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_ucz3KK4fEe2xoPEc8OUh0w" name="ExportFromInputError" outgoing="_ucz3iK4fEe2xoPEc8OUh0w"/>
        </elements>
        <filters xmi:type="process:ActorFilter" xmi:id="_ucz3Ka4fEe2xoPEc8OUh0w" name="initiator" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_ucz3Kq4fEe2xoPEc8OUh0w" definitionId="bonita-actorfilter-initiator" version="1.0">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_ucz3K64fEe2xoPEc8OUh0w" key="autoAssign">
              <expression xmi:type="expression:Expression" xmi:id="_ucz3LK4fEe2xoPEc8OUh0w" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
          </configuration>
        </filters>
      </elements>
      <data xmi:type="process:Data" xmi:id="_ucz3La4fEe2xoPEc8OUh0w" name="errorDetected" dataType="_uc0dw64fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Lq4fEe2xoPEc8OUh0w" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3L64fEe2xoPEc8OUh0w" name="errorMessage" dataType="_uc0dyK4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3MK4fEe2xoPEc8OUh0w" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3Ma4fEe2xoPEc8OUh0w" name="objectName" dataType="_uc0dyK4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Mq4fEe2xoPEc8OUh0w" name="contractObjectName" content="contractObjectName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3M64fEe2xoPEc8OUh0w" name="contractObjectName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3NK4fEe2xoPEc8OUh0w"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3Na4fEe2xoPEc8OUh0w" name="queryName" dataType="_uc0dyK4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Nq4fEe2xoPEc8OUh0w" name="contractQueryName" content="contractQueryName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3N64fEe2xoPEc8OUh0w" name="contractQueryName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3OK4fEe2xoPEc8OUh0w"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3Oa4fEe2xoPEc8OUh0w" name="queryCriteria" dataType="_uc0dyK4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Oq4fEe2xoPEc8OUh0w" name="contractQueryCriteria" content="contractQueryCriteria" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3O64fEe2xoPEc8OUh0w" name="contractQueryCriteria">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3PK4fEe2xoPEc8OUh0w"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3Pa4fEe2xoPEc8OUh0w" name="outputFormat" dataType="_uc0dyK4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Pq4fEe2xoPEc8OUh0w" name="contractOutputFormat" content="contractOutputFormat" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3P64fEe2xoPEc8OUh0w" name="contractOutputFormat">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3QK4fEe2xoPEc8OUh0w"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3Qa4fEe2xoPEc8OUh0w" name="pageCount" dataType="_uc0dxa4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Qq4fEe2xoPEc8OUh0w" name="contractPageCount" content="contractPageCount" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3Q64fEe2xoPEc8OUh0w" name="contractPageCount" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3RK4fEe2xoPEc8OUh0w"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3Ra4fEe2xoPEc8OUh0w" name="pageSize" dataType="_uc0dxa4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Rq4fEe2xoPEc8OUh0w" name="contractPageSize" content="contractPageSize" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3R64fEe2xoPEc8OUh0w" name="contractPageSize" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3SK4fEe2xoPEc8OUh0w"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3Sa4fEe2xoPEc8OUh0w" name="rowsExported" dataType="_uc0dyK4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Sq4fEe2xoPEc8OUh0w" name="contractRowsExported" content="contractRowsExported" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3S64fEe2xoPEc8OUh0w" name="contractRowsExported">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3TK4fEe2xoPEc8OUh0w"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_ucz3Ta4fEe2xoPEc8OUh0w" name="fieldsMap" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Tq4fEe2xoPEc8OUh0w" name="getFieldsMap" content="def proposition_header_fields = [&#xD;&#xA;&#x9;&quot;persistenceId&quot; : &quot;Numéro proposition&quot;,&#xD;&#xA;&#x9;&quot;typeProposition&quot; : &quot;Motif&quot;,&#xD;&#xA;&#x9;&quot;propositionStatus&quot; : &quot;Statut proposition&quot;,&#xD;&#xA;&#x9;&quot;statusMacroEtapes&quot; : &quot;Macro-statut&quot;,&#xD;&#xA;&#x9;&quot;typeWorkflow&quot; : &quot;Type de workflow&quot;,&#xD;&#xA;&#x9;&quot;budgetYear&quot; : &quot;Exercice&quot;,&#xD;&#xA;&#x9;&quot;initialBudgetYear&quot; : &quot;Exercice initial&quot;,&#xD;&#xA;&#x9;&quot;typeAcquisition&quot; : &quot;Type d'acquisition&quot;,&#xD;&#xA;&#x9;&quot;requestSource&quot; : &quot;Source de la proposition&quot;,&#xD;&#xA;&#x9;&quot;propositionAmount&quot; : &quot;Montant proposition initial&quot;,&#xD;&#xA;&#x9;&quot;actualRequestAmount&quot; : &quot;Montant proposition actualisé&quot;,&#xD;&#xA;&#x9;&quot;creationDate&quot;: &quot;Date de création&quot;,&#xD;&#xA;&#x9;&quot;creatorName&quot;: &quot;Nom du créateur&quot;,&#xD;&#xA;&#x9;&quot;agencyCode&quot;: &quot;Code de l'agence&quot;,&#xD;&#xA;&#x9;&quot;agencyName&quot; : &quot;Nom de l'agence&quot;,&#xD;&#xA;&#x9;&quot;siteCode&quot;: &quot;Code du site&quot;,&#xD;&#xA;&#x9;&quot;siteName&quot;: &quot;Nom du site&quot;,&#xD;&#xA;&#x9;&quot;sectorCode&quot;: &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;sectorName&quot; : &quot;Nom du secteur&quot;,&#xD;&#xA;&#x9;&quot;entiteCode&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;entiteName&quot; : &quot;Nom entité&quot;,&#xD;&#xA;&#x9;&quot;territoryCode&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;territoryName&quot; : &quot;Nom territoire&quot;,&#xD;&#xA;&#x9;&quot;existing&quot; : &quot;Matériel existant&quot;,&#xD;&#xA;&#x9;&quot;materialNumber&quot; : &quot;Numéro de matériel&quot;,&#xD;&#xA;&#x9;&quot;typeMaterial&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;typeMaterialName&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterial&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterialName&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;generalStatusMaterial&quot; : &quot;Etat général&quot;,&#xD;&#xA;&#x9;&quot;materialFamily&quot; : &quot;Famille de matériel&quot;,&#xD;&#xA;&#x9;&quot;currentEnergyCode&quot; : &quot;Code énergie actuelle&quot;,&#xD;&#xA;&#x9;&quot;currentEnergyName&quot; : &quot;Energie actuelle&quot;,&#xD;&#xA;&#x9;&quot;futureEnergyCode&quot; : &quot;Code énergie future&quot;,&#xD;&#xA;&#x9;&quot;futureEnergyName&quot; : &quot;Energie future&quot;,&#xD;&#xA;&#x9;&quot;currentRetrofitable&quot; : &quot;Retrofitable biofuel&quot;,&#xD;&#xA;&#x9;&quot;futureRetrofitable&quot; : &quot;Retrofitable biofuel futur&quot;,&#xD;&#xA;&#x9;&quot;currentBiofuelB100&quot; : &quot;Biofuel B100&quot;,&#xD;&#xA;&#x9;&quot;futureBiofuelB100&quot; : &quot;Biofuel B100 futur&quot;,&#xD;&#xA;&#x9;&quot;currentBiofuelXTL&quot; : &quot;Biofuel XTL&quot;,&#xD;&#xA;&#x9;&quot;futureBiofuelXTL&quot; : &quot;Biofuel XTL futur&quot;,&#xD;&#xA;&#x9;&quot;isBudgetRespected&quot; : &quot;Inclus au budget&quot;,&#xD;&#xA;&#x9;&quot;commentSmart&quot; : &quot;Observation SMARTE&quot;,&#xD;&#xA;&#x9;&quot;nbMonth&quot; : &quot;Nombre de mois&quot;,&#xD;&#xA;&#x9;&quot;monthlyAmount&quot; : &quot;Mensualité&quot;,&#xD;&#xA;&#x9;&quot;monthlyPropositionAmount&quot; : &quot;Mensualité future&quot;,&#xD;&#xA;&#x9;&quot;estimatedDeliveryDate&quot; : &quot;Date de livraison prévue&quot;,&#xD;&#xA;&#x9;&quot;pitchSmart&quot; : &quot;Argumentaire SMARTE&quot;,&#xD;&#xA;&#x9;&quot;percentage&quot; : &quot;Pourcentage&quot;];&#xD;&#xA;&#xD;&#xA;def proposition_all_fields = proposition_header_fields + [&#xD;&#xA;&#x9;&quot;creatorId&quot;: &quot;Identifiant du créateur&quot;,&#xD;&#xA;&#x9;&quot;caseId&quot; : &quot;CaseId Bonita&quot;,&#xD;&#xA;&#x9;&quot;sponsor&quot; : &quot;Sponsor&quot;,&#xD;&#xA;&#x9;&quot;isIsBudgetPropositionApproved&quot;: &quot;Budget approuvé&quot;,&#xD;&#xA;&#x9;&quot;lyrePreOrderCreationStatus&quot; : &quot;Statut de création commande dans Lyre&quot;,&#xD;&#xA;&#x9;&quot;parentPropositionId&quot; : &quot;Proposition parent&quot;,&#xD;&#xA;&#x9;&quot;dddRenewChildPropositionId&quot; : &quot;Proposition DDD Renouvellement fille&quot;,&#xD;&#xA;&#x9;&quot;dddRenewStartDate&quot; : &quot;Date planifiée de DDD Renouvellement&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverName&quot; : &quot;Approbation 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverRole&quot; : &quot;Approbation 1-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].dateAction&quot; : &quot;Approbation 1-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].decision&quot; : &quot;Approbation 1-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].comments&quot; : &quot;Approbation 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverName&quot; : &quot;Approbation 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverRole&quot; : &quot;Approbation 2-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].dateAction&quot; : &quot;Approbation 2-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].decision&quot; : &quot;Approbation 2-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].comments&quot; : &quot;Approbation 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverName&quot; : &quot;Approbation 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverRole&quot; : &quot;Approbation 3-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].dateAction&quot; : &quot;Approbation 3-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].decision&quot; : &quot;Approbation 3-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].comments&quot; : &quot;Approbation 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverName&quot; : &quot;Approbation 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverRole&quot; : &quot;Approbation 4-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].dateAction&quot; : &quot;Approbation 4-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].decision&quot; : &quot;Approbation 4-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].comments&quot; : &quot;Approbation 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverName&quot; : &quot;Approbation 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverRole&quot; : &quot;Approbation 5-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].dateAction&quot; : &quot;Approbation 5-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].decision&quot; : &quot;Approbation 5-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].comments&quot; : &quot;Approbation 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverName&quot; : &quot;Approbation 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverRole&quot; : &quot;Approbation 6-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].dateAction&quot; : &quot;Approbation 6-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].decision&quot; : &quot;Approbation 6-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].comments&quot; : &quot;Approbation 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverName&quot; : &quot;Approbation 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverRole&quot; : &quot;Approbation 7-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].dateAction&quot; : &quot;Approbation 7-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].decision&quot; : &quot;Approbation 7-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].comments&quot; : &quot;Approbation 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverName&quot; : &quot;Approbation 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverRole&quot; : &quot;Approbation 8-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].dateAction&quot; : &quot;Approbation 8-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].decision&quot; : &quot;Approbation 8-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].comments&quot; : &quot;Approbation 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverName&quot; : &quot;Approbation 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverRole&quot; : &quot;Approbation 9-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].dateAction&quot; : &quot;Approbation 9-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].decision&quot; : &quot;Approbation 9-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].comments&quot; : &quot;Approbation 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverName&quot; : &quot;Approbation 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverRole&quot; : &quot;Approbation 10-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].dateAction&quot; : &quot;Approbation 10-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].decision&quot; : &quot;Approbation 10-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].comments&quot; : &quot;Approbation 10-Commentaire&quot;,&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&quot;comments[1].userName&quot;: &quot;Commentaire 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[1].dateAdded&quot;: &quot;Commentaire 1-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[1].userComment&quot;: &quot;Commentaire 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userName&quot;: &quot;Commentaire 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[2].dateAdded&quot;: &quot;Commentaire 2-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userComment&quot;: &quot;Commentaire 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userName&quot;: &quot;Commentaire 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[3].dateAdded&quot;: &quot;Commentaire 3-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userComment&quot;: &quot;Commentaire 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userName&quot;: &quot;Commentaire 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[4].dateAdded&quot;: &quot;Commentaire 4-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userComment&quot;: &quot;Commentaire 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userName&quot;: &quot;Commentaire 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[5].dateAdded&quot;: &quot;Commentaire 5-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userComment&quot;: &quot;Commentaire 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userName&quot;: &quot;Commentaire 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[6].dateAdded&quot;: &quot;Commentaire 6-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userComment&quot;: &quot;Commentaire 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userName&quot;: &quot;Commentaire 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[7].dateAdded&quot;: &quot;Commentaire 7-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userComment&quot;: &quot;Commentaire 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userName&quot;: &quot;Commentaire 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[8].dateAdded&quot;: &quot;Commentaire 8-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userComment&quot;: &quot;Commentaire 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userName&quot;: &quot;Commentaire 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[9].dateAdded&quot;: &quot;Commentaire 9-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userComment&quot;: &quot;Commentaire 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userName&quot;: &quot;Commentaire 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[10].dateAdded&quot;: &quot;Commentaire 10-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userComment&quot;: &quot;Commentaire 10-Commentaire&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;def plan_materials_all_fields = [&#xD;&#xA;&#x9;&quot;numMat&quot; : &quot;Numéro matériel&quot;,&#xD;&#xA;&#x9;&quot;codeAgence&quot; : &quot;Code agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceAffectation&quot; : &quot;Agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;causeEligibilite&quot;: &quot;Cause éligibilité&quot;,&#xD;&#xA;&#x9;&quot;genre&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;libelleGenre&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;codeSousGenre&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;libelleSousGenre&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;marque&quot; : &quot;Marque&quot;,&#xD;&#xA;&#x9;&quot;modele&quot; : &quot;Modèle&quot;,&#xD;&#xA;&#x9;&quot;typeAchat&quot; : &quot;Type achat&quot;,&#xD;&#xA;&#x9;&quot;codeEnergie&quot; : &quot;Code énergie&quot;,&#xD;&#xA;&#x9;&quot;libelleEnergie&quot; : &quot;Libellé énergie&quot;,&#xD;&#xA;&#x9;&quot;b100&quot; : &quot;Biofuel B100&quot;,&#xD;&#xA;&#x9;&quot;xtl&quot; : &quot;Biofuel XTL&quot;,&#xD;&#xA;&#x9;&quot;retrofitB100&quot; : &quot;Rétrofitable biofuel&quot;,&#xD;&#xA;&#x9;&quot;montantRetrofit&quot; : &quot;Montant rétrofit&quot;,&#xD;&#xA;&#x9;&quot;critair&quot; : &quot;Crit'Air&quot;,&#xD;&#xA;&#x9;&quot;zfe&quot; : &quot;ZFE&quot;,&#xD;&#xA;&#x9;&quot;dateEntree&quot; : &quot;Date entrée&quot;,&#xD;&#xA;&#x9;&quot;dateCirculation&quot; : &quot;Date circulation&quot;,&#xD;&#xA;&#x9;&quot;compteur&quot; : &quot;Compteur&quot;,&#xD;&#xA;&#x9;&quot;dateDbtContratLoc&quot; : &quot;Date début contrat loc&quot;,&#xD;&#xA;&#x9;&quot;dateFinContratLoc&quot; : &quot;Date fin contrat loc&quot;,&#xD;&#xA;&#x9;&quot;valeurAchat&quot; : &quot;Valeur d'achat&quot;,&#xD;&#xA;&#x9;&quot;coutsSAVTotal&quot; : &quot;Coût SAV total&quot;,&#xD;&#xA;&#x9;&quot;engagementReprise&quot; : &quot;Engagement reprise&quot;,&#xD;&#xA;&#x9;&quot;loyerFinancementMensuel&quot; : &quot;Loyer financement mensuel&quot;,&#xD;&#xA;&#x9;&quot;codeTerritoire&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;libelleTerritoire&quot; : &quot;Territoire&quot;,&#xD;&#xA;&#x9;&quot;codeEntite&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;libelleEntite&quot; : &quot;Entité&quot;,&#xD;&#xA;&#x9;&quot;codeRegion&quot; : &quot;Code région&quot;,&#xD;&#xA;&#x9;&quot;libelleRegion&quot; : &quot;Région&quot;,&#xD;&#xA;&#x9;&quot;codeSecteur&quot; : &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;libelleSecteur&quot; : &quot;Secteur&quot;,&#xD;&#xA;&#x9;&quot;codeSite&quot; : &quot;Code site&quot;,&#xD;&#xA;&#x9;&quot;libelleSite&quot; : &quot;Site&quot;,&#xD;&#xA;&#x9;&quot;codeAgenceLoc&quot; : &quot;Code agence de localisation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceLoc&quot; : &quot;Agence de localisation&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;def eligible_materials_all_fields = plan_materials_all_fields.clone();&#xD;&#xA;eligible_materials_all_fields &lt;&lt; [&quot;zfeName&quot; : &quot;ZFE Name&quot; ];&#xD;&#xA;&#xD;&#xA;def plan_synthesis_all_fields = [&#xD;&#xA;&#x9;&quot;annee&quot; : &quot;Année&quot;,&#xD;&#xA;&#x9;&quot;nbMateriels&quot; : &quot;Nombre de matériels&quot;,&#xD;&#xA;&#x9;&quot;genre.cam&quot; : &quot;Genre CAM&quot;,&#xD;&#xA;&#x9;&quot;genre.acccam&quot; : &quot;Genre ACCCAM&quot;,&#xD;&#xA;&#x9;&quot;genre.accchar&quot;: &quot;Genre ACCCHAR&quot;,&#xD;&#xA;&#x9;&quot;genre.chargeuse&quot; : &quot;Genre CHARGEUSE&quot;,&#xD;&#xA;&#x9;&quot;genre.nacelle&quot; : &quot;Genre NACELLE&quot;,&#xD;&#xA;&#x9;&quot;genre.transpal&quot; : &quot;Genre TRANSPAL&quot;,&#xD;&#xA;&#x9;&quot;genre.ctte&quot; : &quot;Genre CTTE&quot;,&#xD;&#xA;&#x9;&quot;genre.rem&quot; : &quot;Genre REM&quot;,&#xD;&#xA;&#x9;&quot;genre.resm&quot; : &quot;Genre RESM&quot;,&#xD;&#xA;&#x9;&quot;genre.trr&quot; : &quot;Genre TRR&quot;,&#xD;&#xA;&#x9;&quot;genre.grue&quot; : &quot;Genre GRUE&quot;,&#xD;&#xA;&#x9;&quot;genre.tapis&quot; : &quot;Genre TAPIS&quot;,&#xD;&#xA;&#x9;&quot;genre.toupie&quot; : &quot;Genre TOUPIE&quot;,&#xD;&#xA;&#x9;&quot;genre.pompe&quot; : &quot;Genre POMPE&quot;,&#xD;&#xA;&#x9;&quot;genre.mixopompe&quot; : &quot;Genre MIXOPOMPE&quot;,&#xD;&#xA;&#x9;&quot;genre.enginchantier&quot; : &quot;Genre ENGIN CHANTIER&quot;,&#xD;&#xA;&#x9;&quot;genre.charlav&quot; : &quot;Genre CHARLAV&quot;,&#xD;&#xA;&#x9;&quot;genre.autre&quot; : &quot;Genre AUTRE&quot;,&#xD;&#xA;&#x9;&quot;genre.char&quot; : &quot;Genre CHAR&quot;,&#xD;&#xA;&#x9;&quot;energie.es&quot; : &quot;Energie ES&quot;,&#xD;&#xA;&#x9;&quot;energie.go&quot; : &quot;Energie GO&quot;,&#xD;&#xA;&#x9;&quot;energie.retrofit.retrofitables&quot; : &quot;Energie Rétrofitables&quot;,&#xD;&#xA;&#x9;&quot;energie.retrofit.b100&quot; : &quot;Energie B100&quot;,&#xD;&#xA;&#x9;&quot;energie.retrofit.xtl&quot; : &quot;Energie XTL&quot;,&#xD;&#xA;&#x9;&quot;energie.el&quot; : &quot;Energie EL&quot;,&#xD;&#xA;&#x9;&quot;energie.gaz&quot; : &quot;Energie  Gaz&quot;,&#xD;&#xA;&#x9;&quot;energie.gnr&quot; : &quot;Energie GNR&quot;,&#xD;&#xA;&#x9;&quot;energie.eh&quot; : &quot;Energie  EH&quot;,&#xD;&#xA;&#x9;&quot;energie.gh&quot; : &quot;Energie  GH&quot;,&#xD;&#xA;&#x9;&quot;energie.gn&quot; : &quot;Energie  GN&quot;,&#xD;&#xA;&#x9;&quot;energie.gl&quot; : &quot;Energie GL&quot;,&#xD;&#xA;&#x9;&quot;energie.meca&quot; : &quot;Energie MECA&quot;,&#xD;&#xA;&#x9;&quot;energie.sans&quot; : &quot;Energie SANS&quot;,&#xD;&#xA;&#x9;&quot;contrat.creditBail&quot; : &quot;Contrat CreditBail&quot;,&#xD;&#xA;&#x9;&quot;contrat.locFi&quot; : &quot;Contrat LocFi&quot;,&#xD;&#xA;&#x9;&quot;contrat.lcd&quot; : 'Contrat LCD',&#xD;&#xA;&#x9;&quot;contrat.lld&quot; : &quot;Contrat LLD&quot;,&#xD;&#xA;&#x9;&quot;contrat.lldac&quot; : &quot;Contrat LLDAC&quot;,&#xD;&#xA;&#x9;&quot;contrat.lcdac&quot; : &quot;Contrat LCDAC&quot;,&#xD;&#xA;&#x9;&quot;contrat.lmd&quot; : &quot;Contrat LMD&quot;,&#xD;&#xA;&#x9;&quot;contrat.ldmixte&quot; : &quot;Contrat LMDMIXTE&quot;,&#xD;&#xA;&#x9;&quot;rachat.creditBail&quot; : &quot;Rachat CreditBail&quot;,&#xD;&#xA;&#x9;&quot;rachat.locFi&quot; : &quot;Rachat LocFi&quot;&#xD;&#xA;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;return [&#xD;&#xA;&quot;searchPropositions&quot;:&#xD;&#xA;&#x9;[&quot;ALL_FIELDS&quot;: proposition_header_fields, //FOR ALL: proposition_all_fields,&#xD;&#xA;&#x9; &quot;HEADER_FIELDS&quot; : proposition_header_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;eligibleMaterials&quot;: [&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: eligible_materials_all_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;planMaterials&quot;: [&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: plan_materials_all_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;planSynthesis&quot;:[&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: plan_synthesis_all_fields&#xD;&#xA;&#x9;]&#xD;&#xA;&#xD;&#xA;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3T64fEe2xoPEc8OUh0w" name="applicationPage" dataType="_uc0dyK4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3UK4fEe2xoPEc8OUh0w" name="contractApplicationPage" content="contractApplicationPage" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3Ua4fEe2xoPEc8OUh0w" name="contractApplicationPage">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3Uq4fEe2xoPEc8OUh0w"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_ucz3U64fEe2xoPEc8OUh0w" name="bdm_object" multiple="true" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.lang.Object">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3VK4fEe2xoPEc8OUh0w" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3Va4fEe2xoPEc8OUh0w" name="documentStorageId" dataType="_uc0dxq4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Vq4fEe2xoPEc8OUh0w" content="" returnType="java.lang.Long"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3V64fEe2xoPEc8OUh0w" name="filepath" dataType="_uc0dyK4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3WK4fEe2xoPEc8OUh0w" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_ucz3Wa4fEe2xoPEc8OUh0w" name="queryListIds" multiple="true" dataType="_uc0dxq4fEe2xoPEc8OUh0w">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3Wq4fEe2xoPEc8OUh0w" name="init_queryListIds()" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def List&lt;Long> persistence_ids_list = [];&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;for (int i=0; i&lt;contractQueryListIds.size(); i++) {&#xD;&#xA;&#x9;&#x9;def Long long_value = Long.valueOf(contractQueryListIds[i]);&#xD;&#xA;&#x9;&#x9;persistence_ids_list.add(long_value);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_queryListIds&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return persistence_ids_list;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3W64fEe2xoPEc8OUh0w" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3XK4fEe2xoPEc8OUh0w"/>
          </referencedElements>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_ucz3Xa4fEe2xoPEc8OUh0w" name="logClass" typeClassname="java.lang.String"/>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_ucz3Xq4fEe2xoPEc8OUh0w" name="dataRowsToExport" multiple="true" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_ucz3X64fEe2xoPEc8OUh0w" name="contractExportDataRows" content="contractExportDataRows" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_ucz3YK4fEe2xoPEc8OUh0w" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_ucz3Ya4fEe2xoPEc8OUh0w"/>
          </referencedElements>
        </defaultValue>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_ucz3Yq4fEe2xoPEc8OUh0w">
        <targetForm xmi:type="expression:Expression" xmi:id="_ucz3Y64fEe2xoPEc8OUh0w" name="ExportDataForm" content="19410973-849c-4315-a1c1-347402af24b6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_ucz3ZK4fEe2xoPEc8OUh0w" type="NONE">
        <targetForm xmi:type="expression:Expression" xmi:id="_ucz3Za4fEe2xoPEc8OUh0w" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3Zq4fEe2xoPEc8OUh0w" target="_uczPZ64fEe2xoPEc8OUh0w" source="_uczPY64fEe2xoPEc8OUh0w" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3Z64fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3aK4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3aa4fEe2xoPEc8OUh0w" name="OK" target="_ucz2pa4fEe2xoPEc8OUh0w" source="_ucz25q4fEe2xoPEc8OUh0w" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3aq4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3a64fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3bK4fEe2xoPEc8OUh0w" target="_ucz2xa4fEe2xoPEc8OUh0w" source="_ucz2pa4fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3ba4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3bq4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3b64fEe2xoPEc8OUh0w" target="_ucz2ta4fEe2xoPEc8OUh0w" source="_ucz2pK4fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3cK4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3ca4fEe2xoPEc8OUh0w" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3cq4fEe2xoPEc8OUh0w" target="_ucz23q4fEe2xoPEc8OUh0w" source="_ucz2ta4fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3c64fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3dK4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3da4fEe2xoPEc8OUh0w" name="Error" target="_ucz2ta4fEe2xoPEc8OUh0w" source="_ucz25q4fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3dq4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3d64fEe2xoPEc8OUh0w" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_ucz3eK4fEe2xoPEc8OUh0w" name="errorDetected" dataType="_uc0dw64fEe2xoPEc8OUh0w"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3ea4fEe2xoPEc8OUh0w" target="_ucz24q4fEe2xoPEc8OUh0w" source="_ucz2xa4fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3eq4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3e64fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3fK4fEe2xoPEc8OUh0w" target="_ucz2xa4fEe2xoPEc8OUh0w" source="_ucz2rq4fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3fa4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3fq4fEe2xoPEc8OUh0w" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3f64fEe2xoPEc8OUh0w" target="_ucz23q4fEe2xoPEc8OUh0w" source="_ucz2v64fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3gK4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3ga4fEe2xoPEc8OUh0w" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3gq4fEe2xoPEc8OUh0w" target="_ucz25q4fEe2xoPEc8OUh0w" source="_uczPZ64fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3g64fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3hK4fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3ha4fEe2xoPEc8OUh0w" target="_ucz25q4fEe2xoPEc8OUh0w" source="_ucz26q4fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3hq4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3h64fEe2xoPEc8OUh0w" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3iK4fEe2xoPEc8OUh0w" target="_ucz2ta4fEe2xoPEc8OUh0w" source="_ucz3KK4fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3ia4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3iq4fEe2xoPEc8OUh0w" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_ucz3i64fEe2xoPEc8OUh0w" name="Has input data" target="_ucz26q4fEe2xoPEc8OUh0w" source="_uczPY64fEe2xoPEc8OUh0w">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_ucz3jK4fEe2xoPEc8OUh0w"/>
        <condition xmi:type="expression:Expression" xmi:id="_ucz3ja4fEe2xoPEc8OUh0w" name="hasRowsToExport" content="return (dataRowsToExport.size() > 0) ? true : false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:JavaObjectData" xmi:id="_ucz3jq4fEe2xoPEc8OUh0w" name="dataRowsToExport" multiple="true" dataType="_uc0dya4fEe2xoPEc8OUh0w" className="java.util.Map"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_ucz3j64fEe2xoPEc8OUh0w" name="ExportUser" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_ucz3kK4fEe2xoPEc8OUh0w" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_ucz3ka4fEe2xoPEc8OUh0w">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_ucz3kq4fEe2xoPEc8OUh0w" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_ucz3k64fEe2xoPEc8OUh0w"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_ucz3lK4fEe2xoPEc8OUh0w"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_ucz3la4fEe2xoPEc8OUh0w">
              <role>pop3pAppprover</role>
              <role>pop3pReadOnly</role>
              <role>user</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_ucz3lq4fEe2xoPEc8OUh0w"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_ucz3l64fEe2xoPEc8OUh0w" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_ucz3mK4fEe2xoPEc8OUh0w" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz3ma4fEe2xoPEc8OUh0w" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_ucz3mq4fEe2xoPEc8OUh0w" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3m64fEe2xoPEc8OUh0w" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz3nK4fEe2xoPEc8OUh0w" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_ucz3na4fEe2xoPEc8OUh0w" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3nq4fEe2xoPEc8OUh0w" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz3n64fEe2xoPEc8OUh0w" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3oK4fEe2xoPEc8OUh0w" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3oa4fEe2xoPEc8OUh0w" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3oq4fEe2xoPEc8OUh0w" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3o64fEe2xoPEc8OUh0w" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3pK4fEe2xoPEc8OUh0w" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3pa4fEe2xoPEc8OUh0w" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3pq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3p64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3qK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3qa4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3qq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3q64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3rK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3ra4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3rq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3r64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3sK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3sa4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3sq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3s64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3tK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3ta4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3tq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3t64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz3uK4fEe2xoPEc8OUh0w" id="OTHER">
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3ua4fEe2xoPEc8OUh0w" key="poi-4.0.0.jar" value="poi-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3uq4fEe2xoPEc8OUh0w" key="poi-ooxml-4.0.0.jar" value="poi-ooxml-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3u64fEe2xoPEc8OUh0w" key="poi-scratchpad-4.0.0.jar" value="poi-scratchpad-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3va4fEe2xoPEc8OUh0w" key="commons-collections4-4.2.jar" value="commons-collections4-4.2.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3vq4fEe2xoPEc8OUh0w" key="commons-compress-1.21.jar" value="commons-compress-1.21.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3v64fEe2xoPEc8OUh0w" key="poi-ooxml-schemas-4.0.0.jar" value="poi-ooxml-schemas-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3wK4fEe2xoPEc8OUh0w" key="commons-codec-1.11.jar" value="commons-codec-1.11.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3wa4fEe2xoPEc8OUh0w" key="commons-logging-1.2.jar" value="commons-logging-1.2.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3wq4fEe2xoPEc8OUh0w" key="commons-math3-3.6.1.jar" value="commons-math3-3.6.1.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3w64fEe2xoPEc8OUh0w" key="curvesapi-1.05.jar" value="curvesapi-1.05.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3xK4fEe2xoPEc8OUh0w" key="xmlbeans-3.0.1.jar" value="xmlbeans-3.0.1.jar" type="JAR"/>
        </processDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz3xa4fEe2xoPEc8OUh0w" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3xq4fEe2xoPEc8OUh0w" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3x64fEe2xoPEc8OUh0w" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3yK4fEe2xoPEc8OUh0w" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3ya4fEe2xoPEc8OUh0w" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3yq4fEe2xoPEc8OUh0w" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3y64fEe2xoPEc8OUh0w" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3zK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3za4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3zq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3z64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz30K4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz30a4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz30q4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3064fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz31K4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz31a4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz31q4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3164fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz32K4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz32a4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz32q4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3264fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz33K4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz33a4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz33q4fEe2xoPEc8OUh0w" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz3364fEe2xoPEc8OUh0w" name="logClass" value="ExportDataToExcel" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz34K4fEe2xoPEc8OUh0w" name="formatAllRowsExported" value="ALL" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz34a4fEe2xoPEc8OUh0w" name="queryAllPageSize" value="500" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz34q4fEe2xoPEc8OUh0w" name="maximumNumberOfQueriedPages" value="1000" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz3464fEe2xoPEc8OUh0w" name="outputDirectory" value="/tmp" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz35K4fEe2xoPEc8OUh0w" name="delayBeforeCaseCompletionInMinutes" value="5" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz35a4fEe2xoPEc8OUh0w" name="excelDateFormat" value="dd/mm/yyyy" typeClassname="java.lang.String"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_ucz35q4fEe2xoPEc8OUh0w" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_ucz3564fEe2xoPEc8OUh0w">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_ucz36K4fEe2xoPEc8OUh0w" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_ucz36a4fEe2xoPEc8OUh0w"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_ucz36q4fEe2xoPEc8OUh0w"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_ucz3664fEe2xoPEc8OUh0w"/>
            <users xmi:type="actormapping:Users" xmi:id="_ucz37K4fEe2xoPEc8OUh0w"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_ucz37a4fEe2xoPEc8OUh0w" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_ucz37q4fEe2xoPEc8OUh0w" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz3764fEe2xoPEc8OUh0w" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_ucz38K4fEe2xoPEc8OUh0w" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_ucz38a4fEe2xoPEc8OUh0w" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz38q4fEe2xoPEc8OUh0w" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_ucz3864fEe2xoPEc8OUh0w" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_ucz39K4fEe2xoPEc8OUh0w" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz39a4fEe2xoPEc8OUh0w" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz39q4fEe2xoPEc8OUh0w" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3964fEe2xoPEc8OUh0w" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3-K4fEe2xoPEc8OUh0w" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3-a4fEe2xoPEc8OUh0w" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3-q4fEe2xoPEc8OUh0w" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3-64fEe2xoPEc8OUh0w" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3_K4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3_a4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3_q4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz3_64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4AK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Aa4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Aq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4A64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4BK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Ba4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Bq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4B64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4CK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Ca4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Cq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4C64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4DK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Da4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz4Dq4fEe2xoPEc8OUh0w" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz4D64fEe2xoPEc8OUh0w" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4EK4fEe2xoPEc8OUh0w" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Ea4fEe2xoPEc8OUh0w" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Eq4fEe2xoPEc8OUh0w" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4E64fEe2xoPEc8OUh0w" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4FK4fEe2xoPEc8OUh0w" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Fa4fEe2xoPEc8OUh0w" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Fq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4F64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4GK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Ga4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Gq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4G64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4HK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Ha4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Hq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4H64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4IK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Ia4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Iq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4I64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4JK4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Ja4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4Jq4fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_ucz4J64fEe2xoPEc8OUh0w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_ucz4KK4fEe2xoPEc8OUh0w" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz4Ka4fEe2xoPEc8OUh0w" name="logClass" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz4Kq4fEe2xoPEc8OUh0w" name="formatAllRowsExported" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_ucz4K64fEe2xoPEc8OUh0w" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_uc0dgK4fEe2xoPEc8OUh0w" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_uc0dga4fEe2xoPEc8OUh0w" name="outputDirectory" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_uc0dgq4fEe2xoPEc8OUh0w" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_uc0dg64fEe2xoPEc8OUh0w" name="excelDateFormat" typeClassname="java.lang.String"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_uc0dhK4fEe2xoPEc8OUh0w" name="logClass" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_uc0dha4fEe2xoPEc8OUh0w" name="formatAllRowsExported" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_uc0dhq4fEe2xoPEc8OUh0w" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_uc0dh64fEe2xoPEc8OUh0w" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_uc0diK4fEe2xoPEc8OUh0w" name="outputDirectory" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_uc0dia4fEe2xoPEc8OUh0w" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_uc0diq4fEe2xoPEc8OUh0w" name="excelDateFormat" typeClassname="java.lang.String"/>
      <contract xmi:type="process:Contract" xmi:id="_uc0di64fEe2xoPEc8OUh0w">
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0djK4fEe2xoPEc8OUh0w" name="contractObjectName" description="BDM Object name for a BDM Query, or name of main object exported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dja4fEe2xoPEc8OUh0w"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0djq4fEe2xoPEc8OUh0w" name="contractQueryName" description="BDM Query name for a BDM Query, empty otherwise">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dj64fEe2xoPEc8OUh0w"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0dkK4fEe2xoPEc8OUh0w" name="contractQueryCriteria" description="BDM Query criteria for a BDM Query, empty if contractExportDataRows is provided">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dka4fEe2xoPEc8OUh0w"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0dkq4fEe2xoPEc8OUh0w" name="contractOutputFormat">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dk64fEe2xoPEc8OUh0w"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0dlK4fEe2xoPEc8OUh0w" name="contractRowsExported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dla4fEe2xoPEc8OUh0w"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0dlq4fEe2xoPEc8OUh0w" name="contractPageCount" type="INTEGER" description="Page number for a BDM query, starting at 0">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dl64fEe2xoPEc8OUh0w"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0dmK4fEe2xoPEc8OUh0w" name="contractPageSize" type="INTEGER" description="Maximum number of rows">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dma4fEe2xoPEc8OUh0w"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0dmq4fEe2xoPEc8OUh0w" name="contractApplicationPage">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dm64fEe2xoPEc8OUh0w"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0dnK4fEe2xoPEc8OUh0w" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dna4fEe2xoPEc8OUh0w"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_uc0dnq4fEe2xoPEc8OUh0w" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dn64fEe2xoPEc8OUh0w"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_uc0doK4fEe2xoPEc8OUh0w" name="fieldNames" description="List of field names" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0doa4fEe2xoPEc8OUh0w"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_uc0doq4fEe2xoPEc8OUh0w" name="name">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0do64fEe2xoPEc8OUh0w"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_uc0dpK4fEe2xoPEc8OUh0w" name="value">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dpa4fEe2xoPEc8OUh0w"/>
            </inputs>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_uc0dpq4fEe2xoPEc8OUh0w" name="records" type="COMPLEX" description="List of records" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dp64fEe2xoPEc8OUh0w"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_uc0dqK4fEe2xoPEc8OUh0w" name="values" description="List of values of each record" multiple="true">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dqa4fEe2xoPEc8OUh0w"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_uc0dqq4fEe2xoPEc8OUh0w" name="textValue">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dq64fEe2xoPEc8OUh0w"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_uc0drK4fEe2xoPEc8OUh0w" name="boolValue" type="BOOLEAN">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dra4fEe2xoPEc8OUh0w"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_uc0drq4fEe2xoPEc8OUh0w" name="dateValue" type="LOCALDATE">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_uc0dr64fEe2xoPEc8OUh0w"/>
              </inputs>
            </inputs>
          </inputs>
        </inputs>
      </contract>
      <documents xmi:type="process:Document" xmi:id="_uc0dsK4fEe2xoPEc8OUh0w" name="exportFile">
        <mimeType xmi:type="expression:Expression" xmi:id="_uc0dsa4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_uc0dsq4fEe2xoPEc8OUh0w" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_uc0ds64fEe2xoPEc8OUh0w" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_uc0dtK4fEe2xoPEc8OUh0w">
        <name xmi:type="expression:Expression" xmi:id="_uc0dta4fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_uc0dtq4fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_uc0dt64fEe2xoPEc8OUh0w">
        <name xmi:type="expression:Expression" xmi:id="_uc0duK4fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_uc0dua4fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_uc0duq4fEe2xoPEc8OUh0w">
        <name xmi:type="expression:Expression" xmi:id="_uc0du64fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_uc0dvK4fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_uc0dva4fEe2xoPEc8OUh0w">
        <name xmi:type="expression:Expression" xmi:id="_uc0dvq4fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_uc0dv64fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_uc0dwK4fEe2xoPEc8OUh0w">
        <name xmi:type="expression:Expression" xmi:id="_uc0dwa4fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_uc0dwq4fEe2xoPEc8OUh0w" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_uc0dw64fEe2xoPEc8OUh0w" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_uc0dxK4fEe2xoPEc8OUh0w" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_uc0dxa4fEe2xoPEc8OUh0w" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_uc0dxq4fEe2xoPEc8OUh0w" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_uc0dx64fEe2xoPEc8OUh0w" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_uc0dyK4fEe2xoPEc8OUh0w" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_uc0dya4fEe2xoPEc8OUh0w" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_uc0dyq4fEe2xoPEc8OUh0w" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_uc0dy64fEe2xoPEc8OUh0w" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_uc0dzK4fEe2xoPEc8OUh0w" type="Process" element="_uczPYK4fEe2xoPEc8OUh0w" name="MonDiagramme1" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_uc0dza4fEe2xoPEc8OUh0w" type="2007" element="_uczPYa4fEe2xoPEc8OUh0w">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0dzq4fEe2xoPEc8OUh0w" type="5008" element="_uczPYa4fEe2xoPEc8OUh0w"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0dz64fEe2xoPEc8OUh0w" type="7001" element="_uczPYa4fEe2xoPEc8OUh0w">
        <children xmi:type="notation:Node" xmi:id="_uc0d0K4fEe2xoPEc8OUh0w" type="3007" element="_uczPYq4fEe2xoPEc8OUh0w">
          <children xmi:type="notation:DecorationNode" xmi:id="_uc0d0a4fEe2xoPEc8OUh0w" type="5007" element="_uczPYq4fEe2xoPEc8OUh0w"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_uc0d0q4fEe2xoPEc8OUh0w" type="7002" element="_uczPYq4fEe2xoPEc8OUh0w">
            <children xmi:type="notation:Shape" xmi:id="_uc0d064fEe2xoPEc8OUh0w" type="3002" element="_uczPY64fEe2xoPEc8OUh0w" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_uc0d1K4fEe2xoPEc8OUh0w" type="5024" element="_uczPY64fEe2xoPEc8OUh0w">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0d1a4fEe2xoPEc8OUh0w" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d1q4fEe2xoPEc8OUh0w" x="60" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_uc0d164fEe2xoPEc8OUh0w" type="3027" element="_uczPZ64fEe2xoPEc8OUh0w" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_uc0d2K4fEe2xoPEc8OUh0w" type="5017" element="_uczPZ64fEe2xoPEc8OUh0w"/>
              <children xmi:type="notation:Shape" xmi:id="_uc0d2a4fEe2xoPEc8OUh0w" type="3032" element="_ucz2pK4fEe2xoPEc8OUh0w" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_uc0d2q4fEe2xoPEc8OUh0w" type="5062" element="_ucz2pK4fEe2xoPEc8OUh0w">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0d264fEe2xoPEc8OUh0w" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d3K4fEe2xoPEc8OUh0w" x="91" y="52"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d3a4fEe2xoPEc8OUh0w" x="160" y="60" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_uc0d3q4fEe2xoPEc8OUh0w" type="3005" element="_ucz2pa4fEe2xoPEc8OUh0w" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_uc0d364fEe2xoPEc8OUh0w" type="5005" element="_ucz2pa4fEe2xoPEc8OUh0w"/>
              <children xmi:type="notation:Shape" xmi:id="_uc0d4K4fEe2xoPEc8OUh0w" type="3043" element="_ucz2rq4fEe2xoPEc8OUh0w" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_uc0d4a4fEe2xoPEc8OUh0w" type="5055" element="_ucz2rq4fEe2xoPEc8OUh0w">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0d4q4fEe2xoPEc8OUh0w" x="77" y="-38"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d464fEe2xoPEc8OUh0w" x="44" y="-17"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d5K4fEe2xoPEc8OUh0w" x="501" y="54" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_uc0d5a4fEe2xoPEc8OUh0w" type="3005" element="_ucz2ta4fEe2xoPEc8OUh0w" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_uc0d5q4fEe2xoPEc8OUh0w" type="5005" element="_ucz2ta4fEe2xoPEc8OUh0w"/>
              <children xmi:type="notation:Shape" xmi:id="_uc0d564fEe2xoPEc8OUh0w" type="3043" element="_ucz2v64fEe2xoPEc8OUh0w" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_uc0d6K4fEe2xoPEc8OUh0w" type="5055" element="_ucz2v64fEe2xoPEc8OUh0w">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0d6a4fEe2xoPEc8OUh0w" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d6q4fEe2xoPEc8OUh0w"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d664fEe2xoPEc8OUh0w" x="498" y="138" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_uc0d7K4fEe2xoPEc8OUh0w" type="3027" element="_ucz2xa4fEe2xoPEc8OUh0w" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_uc0d7a4fEe2xoPEc8OUh0w" type="5017" element="_ucz2xa4fEe2xoPEc8OUh0w"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d7q4fEe2xoPEc8OUh0w" x="688" y="56" width="124" height="62"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_uc0d764fEe2xoPEc8OUh0w" type="3062" element="_ucz23q4fEe2xoPEc8OUh0w" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_uc0d8K4fEe2xoPEc8OUh0w" type="5090" element="_ucz23q4fEe2xoPEc8OUh0w">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0d8a4fEe2xoPEc8OUh0w" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d8q4fEe2xoPEc8OUh0w" x="840" y="165" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_uc0d864fEe2xoPEc8OUh0w" type="3062" element="_ucz24q4fEe2xoPEc8OUh0w" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_uc0d9K4fEe2xoPEc8OUh0w" type="5090" element="_ucz24q4fEe2xoPEc8OUh0w">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0d9a4fEe2xoPEc8OUh0w" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d9q4fEe2xoPEc8OUh0w" x="855" y="72" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_uc0d964fEe2xoPEc8OUh0w" type="3008" element="_ucz25q4fEe2xoPEc8OUh0w" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_uc0d-K4fEe2xoPEc8OUh0w" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0d-a4fEe2xoPEc8OUh0w" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0d-q4fEe2xoPEc8OUh0w" x="327" y="103"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_uc0d-64fEe2xoPEc8OUh0w" type="3027" element="_ucz26q4fEe2xoPEc8OUh0w" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_uc0d_K4fEe2xoPEc8OUh0w" type="5017" element="_ucz26q4fEe2xoPEc8OUh0w"/>
              <children xmi:type="notation:Shape" xmi:id="_uc0d_a4fEe2xoPEc8OUh0w" type="3032" element="_ucz3KK4fEe2xoPEc8OUh0w" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_uc0d_q4fEe2xoPEc8OUh0w" type="5062" element="_ucz3KK4fEe2xoPEc8OUh0w">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0d_64fEe2xoPEc8OUh0w" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0eAK4fEe2xoPEc8OUh0w" x="250" y="215"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0eAa4fEe2xoPEc8OUh0w" x="160" y="198" width="120" height="60"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_uc0eAq4fEe2xoPEc8OUh0w"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_uc0eA64fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_uc0eBK4fEe2xoPEc8OUh0w"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_uc0eBa4fEe2xoPEc8OUh0w"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0eBq4fEe2xoPEc8OUh0w" x="23" y="10" width="1657" height="343"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_uc0eB64fEe2xoPEc8OUh0w"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eCK4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_uc0eCa4fEe2xoPEc8OUh0w"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_uc0eCq4fEe2xoPEc8OUh0w"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_uc0eC64fEe2xoPEc8OUh0w" width="1680" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_uc0eDK4fEe2xoPEc8OUh0w"/>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eDa4fEe2xoPEc8OUh0w" type="4001" element="_ucz3Zq4fEe2xoPEc8OUh0w" source="_uc0d064fEe2xoPEc8OUh0w" target="_uc0d164fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eDq4fEe2xoPEc8OUh0w" type="6001" element="_ucz3Zq4fEe2xoPEc8OUh0w">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eD64fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eEK4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eEa4fEe2xoPEc8OUh0w" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eEq4fEe2xoPEc8OUh0w" type="4001" element="_ucz3aa4fEe2xoPEc8OUh0w" source="_uc0d964fEe2xoPEc8OUh0w" target="_uc0d3q4fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eE64fEe2xoPEc8OUh0w" type="6001" element="_ucz3aa4fEe2xoPEc8OUh0w">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eFK4fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eFa4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eFq4fEe2xoPEc8OUh0w" points="[-12, -26, -174, 24]$[-12, -44, -174, 6]$[141, -44, -21, 6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eF64fEe2xoPEc8OUh0w" id="(0.7674418604651163,0.6046511627906976)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eGK4fEe2xoPEc8OUh0w" id="(0.18421052631578946,0.43859649122807015)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eGa4fEe2xoPEc8OUh0w" type="4001" element="_ucz3bK4fEe2xoPEc8OUh0w" source="_uc0d3q4fEe2xoPEc8OUh0w" target="_uc0d7K4fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eGq4fEe2xoPEc8OUh0w" type="6001" element="_ucz3bK4fEe2xoPEc8OUh0w">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eG64fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eHK4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eHa4fEe2xoPEc8OUh0w" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eHq4fEe2xoPEc8OUh0w" type="4001" element="_ucz3b64fEe2xoPEc8OUh0w" source="_uc0d2a4fEe2xoPEc8OUh0w" target="_uc0d5a4fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eH64fEe2xoPEc8OUh0w" type="6001" element="_ucz3b64fEe2xoPEc8OUh0w">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eIK4fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eIa4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eIq4fEe2xoPEc8OUh0w" points="[0, 0, -157, -40]$[147, 41, -10, 1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eI64fEe2xoPEc8OUh0w" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eJK4fEe2xoPEc8OUh0w" id="(0.08771929824561403,0.631578947368421)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eJa4fEe2xoPEc8OUh0w" type="4001" element="_ucz3cq4fEe2xoPEc8OUh0w" source="_uc0d5a4fEe2xoPEc8OUh0w" target="_uc0d764fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eJq4fEe2xoPEc8OUh0w" type="6001" element="_ucz3cq4fEe2xoPEc8OUh0w">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eJ64fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eKK4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eKa4fEe2xoPEc8OUh0w" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eKq4fEe2xoPEc8OUh0w" type="4001" element="_ucz3da4fEe2xoPEc8OUh0w" source="_uc0d964fEe2xoPEc8OUh0w" target="_uc0d5a4fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eK64fEe2xoPEc8OUh0w" type="6001" element="_ucz3da4fEe2xoPEc8OUh0w">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eLK4fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eLa4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eLq4fEe2xoPEc8OUh0w" points="[0, 4, -120, -35]$[0, 39, -120, 0]$[120, 39, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eL64fEe2xoPEc8OUh0w" id="(0.7674418604651163,0.20930232558139536)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eMK4fEe2xoPEc8OUh0w" id="(0.0,0.24561403508771928)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eMa4fEe2xoPEc8OUh0w" type="4001" element="_ucz3ea4fEe2xoPEc8OUh0w" source="_uc0d7K4fEe2xoPEc8OUh0w" target="_uc0d864fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eMq4fEe2xoPEc8OUh0w" type="6001" element="_ucz3ea4fEe2xoPEc8OUh0w">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eM64fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eNK4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eNa4fEe2xoPEc8OUh0w" points="[0, -3, -98, 0]$[92, -5, -6, -2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eNq4fEe2xoPEc8OUh0w" id="(1.0,0.4838709677419355)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eN64fEe2xoPEc8OUh0w" id="(0.2,0.43333333333333335)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eOK4fEe2xoPEc8OUh0w" type="4001" element="_ucz3fK4fEe2xoPEc8OUh0w" source="_uc0d4K4fEe2xoPEc8OUh0w" target="_uc0d7K4fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eOa4fEe2xoPEc8OUh0w" type="6001" element="_ucz3fK4fEe2xoPEc8OUh0w">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eOq4fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eO64fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0ePK4fEe2xoPEc8OUh0w" points="[0, -25, -213, -49]$[0, -48, -213, -72]$[257, -48, 44, -72]$[257, -8, 44, -32]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0ePa4fEe2xoPEc8OUh0w" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0ePq4fEe2xoPEc8OUh0w" id="(0.14516129032258066,0.5161290322580645)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eP64fEe2xoPEc8OUh0w" type="4001" element="_ucz3f64fEe2xoPEc8OUh0w" source="_uc0d564fEe2xoPEc8OUh0w" target="_uc0d764fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eQK4fEe2xoPEc8OUh0w" type="6001" element="_ucz3f64fEe2xoPEc8OUh0w">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eQa4fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eQq4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eQ64fEe2xoPEc8OUh0w" points="[0, -2, -163, 43]$[163, -2, 0, 43]$[163, -31, 0, 14]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eRK4fEe2xoPEc8OUh0w" id="(1.0,1.0)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eRa4fEe2xoPEc8OUh0w" type="4001" element="_ucz3gq4fEe2xoPEc8OUh0w" source="_uc0d164fEe2xoPEc8OUh0w" target="_uc0d964fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eRq4fEe2xoPEc8OUh0w" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eR64fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eSK4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eSa4fEe2xoPEc8OUh0w" points="[0, 6, -52, -33]$[28, 6, -24, -33]$[28, 33, -24, -6]$[47, 33, -5, -6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eSq4fEe2xoPEc8OUh0w" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eS64fEe2xoPEc8OUh0w" id="(0.11627906976744186,0.627906976744186)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eTK4fEe2xoPEc8OUh0w" type="4001" element="_ucz3ha4fEe2xoPEc8OUh0w" source="_uc0d-64fEe2xoPEc8OUh0w" target="_uc0d964fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eTa4fEe2xoPEc8OUh0w" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eTq4fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eT64fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eUK4fEe2xoPEc8OUh0w" points="[0, -2, -56, 94]$[28, -2, -28, 94]$[28, -96, -28, 0]$[55, -96, -1, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eUa4fEe2xoPEc8OUh0w" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eUq4fEe2xoPEc8OUh0w" id="(0.20930232558139536,0.6976744186046512)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eU64fEe2xoPEc8OUh0w" type="4001" element="_ucz3iK4fEe2xoPEc8OUh0w" source="_uc0d_a4fEe2xoPEc8OUh0w" target="_uc0d5a4fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eVK4fEe2xoPEc8OUh0w" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eVa4fEe2xoPEc8OUh0w" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eVq4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eV64fEe2xoPEc8OUh0w" points="[0, -13, -230, 75]$[97, -13, -133, 75]$[97, -96, -133, -8]$[226, -96, -4, -8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eWK4fEe2xoPEc8OUh0w" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eWa4fEe2xoPEc8OUh0w" id="(0.03508771929824561,0.8596491228070176)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_uc0eWq4fEe2xoPEc8OUh0w" type="4001" element="_ucz3i64fEe2xoPEc8OUh0w" source="_uc0d064fEe2xoPEc8OUh0w" target="_uc0d-64fEe2xoPEc8OUh0w" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_uc0eW64fEe2xoPEc8OUh0w" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_uc0eXK4fEe2xoPEc8OUh0w" x="14" y="-44"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_uc0eXa4fEe2xoPEc8OUh0w" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_uc0eXq4fEe2xoPEc8OUh0w" points="[-15, -1, -89, -139]$[-15, 129, -89, -9]$[70, 129, -4, -9]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eX64fEe2xoPEc8OUh0w" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_uc0eYK4fEe2xoPEc8OUh0w" id="(0.03333333333333333,0.6333333333333333)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
