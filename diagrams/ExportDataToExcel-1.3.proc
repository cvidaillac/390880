<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_0Cz2UMn5EeycDKiNQAWMXw" name="ExportDataToExcel" version="1.3" author="C6754557" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004" configId="ACED0005740010372E31312E312D303031372E31312E34">
    <elements xmi:type="process:Pool" xmi:id="_0Cz2Ucn5EeycDKiNQAWMXw" name="ExportDataToExcel" version="1.3">
      <elements xmi:type="process:Lane" xmi:id="_0Cz2Usn5EeycDKiNQAWMXw" name="Export User" actor="_0Cz3iMn5EeycDKiNQAWMXw">
        <elements xmi:type="process:StartEvent" xmi:id="_0Cz2U8n5EeycDKiNQAWMXw" name="Start Export" outgoing="_0Cz3X8n5EeycDKiNQAWMXw _0Cz3hMn5EeycDKiNQAWMXw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_0Cz2VMn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_0Cz2Vcn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_0Cz2Vsn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_0Cz2V8n5EeycDKiNQAWMXw" name="Export Data from BDM Query" outgoing="_0Cz3e8n5EeycDKiNQAWMXw" incoming="_0Cz3X8n5EeycDKiNQAWMXw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_0Cz2WMn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_0Cz2Wcn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_0Cz2Wsn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_0Cz2W8n5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz2XMn5EeycDKiNQAWMXw" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_0Cz2Xcn5EeycDKiNQAWMXw" name="exportDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_0Cz2Xsn5EeycDKiNQAWMXw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz2X8n5EeycDKiNQAWMXw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_0Cz2YMn5EeycDKiNQAWMXw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz2Ycn5EeycDKiNQAWMXw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz2Ysn5EeycDKiNQAWMXw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_0Cz2Y8n5EeycDKiNQAWMXw" name="exportDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def BusinessObjectDAO dao_instance = null;&#xD;&#xA;def java.lang.reflect.Method find_method = null;&#xD;&#xA;def Object[] method_parameters = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def int page_count=0;&#xD;&#xA;def int page_limit=0;&#x9;// To avoid infinite loop&#xD;&#xA;def int page_size=0;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;// Map objectName (lowercase) -> DAO object&#xD;&#xA;def Map dao_objects_map = [&quot;proposition&quot;: propositionDAO];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Data Export&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get find method parameters&#xD;&#xA;&#x9;def Map find_method_profile = BDMUtility.getFindQuery(objectName,queryName, queryCriteria, dao_objects_map, queryListIds);&#xD;&#xA;&#x9;error_message = find_method_profile['errorMessage'];&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error while retrieving find method: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;dao_instance = find_method_profile['daoInstance'];&#xD;&#xA;&#x9;&#x9;find_method = find_method_profile['findMethod'];&#xD;&#xA;&#x9;&#x9;method_parameters = find_method_profile['parameters'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get Page count / page size values according to the type of query&#xD;&#xA;&#x9;&#x9;if (! formatAllRowsExported.equalsIgnoreCase(rowsExported)) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting only current page according to selected format : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = pageCount;&#xD;&#xA;&#x9;&#x9;&#x9;page_size = pageSize;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit = page_count+1;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting all rows : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = 0;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit=maximumNumberOfQueriedPages;&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;&#x9;&#x9;page_size=queryAllPageSize;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get fields map&#xD;&#xA;&#x9;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, dao_instance: dao_instance, find_method: find_method, method_parameters: method_parameters, page_count: page_count, page_size: page_size, page_limit: page_limit, field_names_list: field_names_list, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2ZMn5EeycDKiNQAWMXw" name="queryCriteria" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz2Zcn5EeycDKiNQAWMXw" name="propositionDAO" content="propositionDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.PropositionDAO" returnTypeFixed="true"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2Zsn5EeycDKiNQAWMXw" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2Z8n5EeycDKiNQAWMXw" name="objectName" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2aMn5EeycDKiNQAWMXw" name="queryName" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz2acn5EeycDKiNQAWMXw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2asn5EeycDKiNQAWMXw" name="pageCount" dataType="_0Cz4asn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz2a8n5EeycDKiNQAWMXw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2bMn5EeycDKiNQAWMXw" name="pageSize" dataType="_0Cz4asn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2bcn5EeycDKiNQAWMXw" name="formatAllRowsExported" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2bsn5EeycDKiNQAWMXw" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2b8n5EeycDKiNQAWMXw" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz2cMn5EeycDKiNQAWMXw" name="fieldsMap" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2ccn5EeycDKiNQAWMXw" name="rowsExported" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2csn5EeycDKiNQAWMXw" name="applicationPage" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2c8n5EeycDKiNQAWMXw" name="outputFormat" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2dMn5EeycDKiNQAWMXw" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2dcn5EeycDKiNQAWMXw" name="queryListIds" multiple="true" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz2dsn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz2d8n5EeycDKiNQAWMXw" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz2eMn5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz2ecn5EeycDKiNQAWMXw" name="executeExport" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def find_method = result['find_method'];&#xD;&#xA;&#x9;def dao_instance = result['dao_instance'];&#xD;&#xA;&#x9;def method_parameters = result['method_parameters'];&#xD;&#xA;&#x9;def int page_count =  result['page_count'];&#xD;&#xA;&#x9;def int page_limit = result['page_limit'];&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;def int page_size = result['page_size'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;while ((has_more) &amp;&amp; (page_count&lt;page_limit) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Executing query with &quot; + String.valueOf(method_parameters.size()) + &quot; parameters for page &quot; + String.valueOf(page_count) + &quot; and page size=&quot; + String.valueOf(page_size));&#xD;&#xA;&#x9;&#x9;def Map find_result = BDMUtility.executeFindMethod(dao_instance, find_method, method_parameters, page_count, page_size);&#xD;&#xA;&#x9;&#x9;error_message = find_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;def records_list = find_result['records'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Error detected on query page &quot; + String.valueOf(page_count) + &quot; : &quot; + error_message);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (records_list == null) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : records list is null&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def nb_records = records_list.size();&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : found &quot;  + String.valueOf(nb_records) + &quot; records&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Export list to Excel&#xD;&#xA;&#x9;&#x9;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ExcelFile.addExcelDataRow(worksheet, records_list[i], field_names_list, row_index, dateStyle);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;if (nb_records&lt;page_size) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Next page&#xD;&#xA;&#x9;&#x9;page_count = page_count +1;&#xD;&#xA;&#x9;} // end while&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_0Cz2esn5EeycDKiNQAWMXw" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz2e8n5EeycDKiNQAWMXw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz2fMn5EeycDKiNQAWMXw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2fcn5EeycDKiNQAWMXw" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2fsn5EeycDKiNQAWMXw" name="logClass" typeClassname="java.lang.String"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz2f8n5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz2gMn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz2gcn5EeycDKiNQAWMXw" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz2gsn5EeycDKiNQAWMXw" name="errorMessage" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz2g8n5EeycDKiNQAWMXw" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz2hMn5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz2hcn5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz2hsn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz2h8n5EeycDKiNQAWMXw" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz2iMn5EeycDKiNQAWMXw" name="documentStorageId" dataType="_0Cz4a8n5EeycDKiNQAWMXw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz2icn5EeycDKiNQAWMXw" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz2isn5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz2i8n5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz2jMn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz2jcn5EeycDKiNQAWMXw" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz2jsn5EeycDKiNQAWMXw" name="filepath" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz2j8n5EeycDKiNQAWMXw" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz2kMn5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz2kcn5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz2ksn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz2k8n5EeycDKiNQAWMXw" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz2lMn5EeycDKiNQAWMXw" name="errorDetected" dataType="_0Cz4aMn5EeycDKiNQAWMXw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz2lcn5EeycDKiNQAWMXw" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz2lsn5EeycDKiNQAWMXw" name="errorMessage" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz2l8n5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_0Cz2mMn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_0Cz2mcn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_0Cz2msn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_0Cz2m8n5EeycDKiNQAWMXw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_0Cz2nMn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_0Cz2ncn5EeycDKiNQAWMXw" name="ExportError" outgoing="_0Cz3aMn5EeycDKiNQAWMXw"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_0Cz2nsn5EeycDKiNQAWMXw" name="Display Output File" outgoing="_0Cz3Zcn5EeycDKiNQAWMXw" incoming="_0Cz3Ysn5EeycDKiNQAWMXw" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_0Cz2n8n5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_0Cz2oMn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_0Cz2ocn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_0Cz2osn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_0Cz2o8n5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_0Cz2pMn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_0Cz2pcn5EeycDKiNQAWMXw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_0Cz2psn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_0Cz2p8n5EeycDKiNQAWMXw" name="TimerTermination" outgoing="_0Cz3dcn5EeycDKiNQAWMXw">
            <condition xmi:type="expression:Expression" xmi:id="_0Cz2qMn5EeycDKiNQAWMXw" name="delayBeforeCaseCompletionInMinutes" content="return 60000L * delayBeforeCaseCompletionInMinutes;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2qcn5EeycDKiNQAWMXw" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
            </condition>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_0Cz2qsn5EeycDKiNQAWMXw">
            <targetForm xmi:type="expression:Expression" xmi:id="_0Cz2q8n5EeycDKiNQAWMXw" name="DisplayExportFile" content="8d9a9132-635d-4604-b63e-711933a32b41" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_0Cz2rMn5EeycDKiNQAWMXw"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_0Cz2rcn5EeycDKiNQAWMXw" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_0Cz2rsn5EeycDKiNQAWMXw" name="Display Error" outgoing="_0Cz3a8n5EeycDKiNQAWMXw" incoming="_0Cz3aMn5EeycDKiNQAWMXw _0Cz3bsn5EeycDKiNQAWMXw _0Cz3gcn5EeycDKiNQAWMXw" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_0Cz2r8n5EeycDKiNQAWMXw" name="displayName()" content="return &quot;Echec de l'export de données&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_0Cz2sMn5EeycDKiNQAWMXw" name="dynamicDescription()" content="return errorMessage.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_0Cz2scn5EeycDKiNQAWMXw" name="errorMessage" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_0Cz2ssn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_0Cz2s8n5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_0Cz2tMn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_0Cz2tcn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_0Cz2tsn5EeycDKiNQAWMXw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_0Cz2t8n5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_0Cz2uMn5EeycDKiNQAWMXw" name="Error Expiry" outgoing="_0Cz3eMn5EeycDKiNQAWMXw">
            <condition xmi:type="expression:Expression" xmi:id="_0Cz2ucn5EeycDKiNQAWMXw" name="00:05:00" content="300000L" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long"/>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_0Cz2usn5EeycDKiNQAWMXw">
            <targetForm xmi:type="expression:Expression" xmi:id="_0Cz2u8n5EeycDKiNQAWMXw" name="DisplayExportError" content="591192bc-c8ec-41e5-b987-f74165738cb6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_0Cz2vMn5EeycDKiNQAWMXw"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_0Cz2vcn5EeycDKiNQAWMXw" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_0Cz2vsn5EeycDKiNQAWMXw" name="Purge Document" outgoing="_0Cz3csn5EeycDKiNQAWMXw" incoming="_0Cz3Zcn5EeycDKiNQAWMXw _0Cz3dcn5EeycDKiNQAWMXw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_0Cz2v8n5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_0Cz2wMn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_0Cz2wcn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_0Cz2wsn5EeycDKiNQAWMXw" name="purgeDocumentAndFile" definitionId="scripting-groovy-script" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_0Cz2w8n5EeycDKiNQAWMXw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz2xMn5EeycDKiNQAWMXw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_0Cz2xcn5EeycDKiNQAWMXw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz2xsn5EeycDKiNQAWMXw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz2x8n5EeycDKiNQAWMXw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_0Cz2yMn5EeycDKiNQAWMXw" name="purgeDocumentAndFile" content="import org.bonitasoft.engine.api.APIAccessor;&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Delete temporary file&#xD;&#xA;&#x9;if (! filepath.isEmpty()) {&#xD;&#xA;&#x9;&#x9;FileUtility.deleteFile(filepath);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Remove document&#xD;&#xA;&#x9;if (documentStorageId != null) {&#xD;&#xA;&#x9;&#x9;FileUtility.removeDocument(documentStorageId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;logError(log_file, &quot;Failed to purge document: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2ycn5EeycDKiNQAWMXw" name="documentStorageId" dataType="_0Cz4a8n5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz2ysn5EeycDKiNQAWMXw" name="filepath" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz2y8n5EeycDKiNQAWMXw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2zMn5EeycDKiNQAWMXw" name="logClass" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz2zcn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz2zsn5EeycDKiNQAWMXw" content=""/>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz2z8n5EeycDKiNQAWMXw" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_0Cz20Mn5EeycDKiNQAWMXw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz20cn5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_0Cz20sn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_0Cz208n5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_0Cz21Mn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_0Cz21cn5EeycDKiNQAWMXw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_0Cz21sn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_0Cz218n5EeycDKiNQAWMXw" name="End Error" incoming="_0Cz3a8n5EeycDKiNQAWMXw _0Cz3eMn5EeycDKiNQAWMXw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_0Cz22Mn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_0Cz22cn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_0Cz22sn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_0Cz228n5EeycDKiNQAWMXw" name="End Export" incoming="_0Cz3csn5EeycDKiNQAWMXw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_0Cz23Mn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_0Cz23cn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_0Cz23sn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_0Cz238n5EeycDKiNQAWMXw" name="is OK?" outgoing="_0Cz3Ysn5EeycDKiNQAWMXw _0Cz3bsn5EeycDKiNQAWMXw" incoming="_0Cz3e8n5EeycDKiNQAWMXw _0Cz3fsn5EeycDKiNQAWMXw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_0Cz24Mn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_0Cz24cn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_0Cz24sn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_0Cz248n5EeycDKiNQAWMXw" name="Export Data from Input" outgoing="_0Cz3fsn5EeycDKiNQAWMXw" incoming="_0Cz3hMn5EeycDKiNQAWMXw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_0Cz25Mn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_0Cz25cn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_0Cz25sn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_0Cz258n5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz26Mn5EeycDKiNQAWMXw" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_0Cz26cn5EeycDKiNQAWMXw" name="exportInputDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_0Cz26sn5EeycDKiNQAWMXw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz268n5EeycDKiNQAWMXw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_0Cz27Mn5EeycDKiNQAWMXw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz27cn5EeycDKiNQAWMXw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz27sn5EeycDKiNQAWMXw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_0Cz278n5EeycDKiNQAWMXw" name="exportInputDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def List&lt;Integer> field_values_index = null;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Export from data provided in contract&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get fields map&#xD;&#xA;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// For each field name, get the corresponding index of fields values&#xD;&#xA;&#x9;&#x9;field_values_index = buildFieldValuesIndex(dataRowsToExport[0].get('fieldNames'), field_names_list);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, field_names_list: field_names_list, field_values_index: field_values_index, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;Integer> buildFieldValuesIndex(List&lt;String> dataRowsFieldNames, List&lt;String> field_names_list) {&#xD;&#xA;&#x9;def List&lt;Integer> list_fields_values_index = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// We need at list one record of data&#xD;&#xA;&#x9;if (dataRowsFieldNames != null) {&#xD;&#xA;&#x9;&#x9;def int nb_fields_values = dataRowsFieldNames.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Loop through each field from field_names_list&#xD;&#xA;&#x9;&#x9;def int nb_fields_names = field_names_list.size();&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields_names; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;// Search the field name in the record values&#xD;&#xA;&#x9;&#x9;&#x9;def String one_field_name = field_names_list[i];&#xD;&#xA;&#x9;&#x9;&#x9;def Integer field_value_index = null;&#xD;&#xA;&#x9;&#x9;&#x9;for (int j=0; j&lt;nb_fields_values; j++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def value_field_name = dataRowsFieldNames[j];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (one_field_name.equalsIgnoreCase(value_field_name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Field has been found in record values&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;field_value_index = Integer.valueOf(j);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Store the field index found, or null if not found&#xD;&#xA;&#x9;&#x9;&#x9;list_fields_values_index.push(field_value_index);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return list_fields_values_index;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz28Mn5EeycDKiNQAWMXw" name="fieldsMap" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz28cn5EeycDKiNQAWMXw" name="applicationPage" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz28sn5EeycDKiNQAWMXw" name="objectName" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz288n5EeycDKiNQAWMXw" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_0Cz29Mn5EeycDKiNQAWMXw" name="outputFormat" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz29cn5EeycDKiNQAWMXw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz29sn5EeycDKiNQAWMXw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz298n5EeycDKiNQAWMXw" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz2-Mn5EeycDKiNQAWMXw" name="dataRowsToExport" multiple="true" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz2-cn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz2-sn5EeycDKiNQAWMXw" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz2-8n5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz2_Mn5EeycDKiNQAWMXw" name="executeExportOfInputData" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def List&lt;Integer> field_values_index = result['field_values_index'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Export list to Excel&#xD;&#xA;&#x9;List&lt;Map> data_records = dataRowsToExport[0].get('records');&#xD;&#xA;&#x9;def int nb_records = data_records.size();&#xD;&#xA;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get the record values and add the row to the speadsheet&#xD;&#xA;&#x9;&#x9;def List&lt;Object> one_record_values = data_records[i].get(&quot;values&quot;);&#xD;&#xA;&#x9;&#x9;def List&lt;Object> record_values = getRecordValues(one_record_values, field_values_index, log_file);&#xD;&#xA;&#x9;&#x9;ExcelFile.addExcelFieldValuesRow(worksheet, record_values, field_names_list, row_index, dateStyle)&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;def List&lt;Object> getRecordValues(List&lt;Object> one_row_to_export, List&lt;Integer> field_values_index, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;Object> record_values = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def int nb_fields = field_values_index.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;def Integer value_index = field_values_index[i];&#xD;&#xA;&#x9;&#x9;&#x9;if ((value_index == null) || (value_index >= one_row_to_export.size())) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Field not found&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(null);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Get the field value&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def Object field_value = one_row_to_export[value_index];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(field_value);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getRecordValues: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return record_values;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_0Cz2_cn5EeycDKiNQAWMXw" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz2_sn5EeycDKiNQAWMXw" name="logClass" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz2_8n5EeycDKiNQAWMXw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_0Cz3AMn5EeycDKiNQAWMXw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz3Acn5EeycDKiNQAWMXw" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz3Asn5EeycDKiNQAWMXw" name="dataRowsToExport" multiple="true" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz3A8n5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz3BMn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz3Bcn5EeycDKiNQAWMXw" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz3Bsn5EeycDKiNQAWMXw" name="errorMessage" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz3B8n5EeycDKiNQAWMXw" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz3CMn5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz3Ccn5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz3Csn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz3C8n5EeycDKiNQAWMXw" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz3DMn5EeycDKiNQAWMXw" name="documentStorageId" dataType="_0Cz4a8n5EeycDKiNQAWMXw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz3Dcn5EeycDKiNQAWMXw" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz3Dsn5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz3D8n5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz3EMn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz3Ecn5EeycDKiNQAWMXw" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz3Esn5EeycDKiNQAWMXw" name="filepath" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz3E8n5EeycDKiNQAWMXw" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz3FMn5EeycDKiNQAWMXw" name="exportResult" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz3Fcn5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_0Cz3Fsn5EeycDKiNQAWMXw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_0Cz3F8n5EeycDKiNQAWMXw" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz3GMn5EeycDKiNQAWMXw" name="errorDetected" dataType="_0Cz4aMn5EeycDKiNQAWMXw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_0Cz3Gcn5EeycDKiNQAWMXw" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_0Cz3Gsn5EeycDKiNQAWMXw" name="errorMessage" dataType="_0Cz4bcn5EeycDKiNQAWMXw"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_0Cz3G8n5EeycDKiNQAWMXw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_0Cz3HMn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_0Cz3Hcn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_0Cz3Hsn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_0Cz3H8n5EeycDKiNQAWMXw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_0Cz3IMn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_0Cz3Icn5EeycDKiNQAWMXw" name="ExportFromInputError" outgoing="_0Cz3gcn5EeycDKiNQAWMXw"/>
        </elements>
        <filters xmi:type="process:ActorFilter" xmi:id="_0Cz3Isn5EeycDKiNQAWMXw" name="initiator" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_0Cz3I8n5EeycDKiNQAWMXw" definitionId="bonita-actorfilter-initiator" version="1.0">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_0Cz3JMn5EeycDKiNQAWMXw" key="autoAssign">
              <expression xmi:type="expression:Expression" xmi:id="_0Cz3Jcn5EeycDKiNQAWMXw" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
          </configuration>
        </filters>
      </elements>
      <data xmi:type="process:Data" xmi:id="_0Cz3Jsn5EeycDKiNQAWMXw" name="errorDetected" dataType="_0Cz4aMn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3J8n5EeycDKiNQAWMXw" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3KMn5EeycDKiNQAWMXw" name="errorMessage" dataType="_0Cz4bcn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3Kcn5EeycDKiNQAWMXw" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3Ksn5EeycDKiNQAWMXw" name="objectName" dataType="_0Cz4bcn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3K8n5EeycDKiNQAWMXw" name="contractObjectName" content="contractObjectName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3LMn5EeycDKiNQAWMXw" name="contractObjectName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3Lcn5EeycDKiNQAWMXw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3Lsn5EeycDKiNQAWMXw" name="queryName" dataType="_0Cz4bcn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3L8n5EeycDKiNQAWMXw" name="contractQueryName" content="contractQueryName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3MMn5EeycDKiNQAWMXw" name="contractQueryName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3Mcn5EeycDKiNQAWMXw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3Msn5EeycDKiNQAWMXw" name="queryCriteria" dataType="_0Cz4bcn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3M8n5EeycDKiNQAWMXw" name="contractQueryCriteria" content="contractQueryCriteria" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3NMn5EeycDKiNQAWMXw" name="contractQueryCriteria">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3Ncn5EeycDKiNQAWMXw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3Nsn5EeycDKiNQAWMXw" name="outputFormat" dataType="_0Cz4bcn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3N8n5EeycDKiNQAWMXw" name="contractOutputFormat" content="contractOutputFormat" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3OMn5EeycDKiNQAWMXw" name="contractOutputFormat">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3Ocn5EeycDKiNQAWMXw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3Osn5EeycDKiNQAWMXw" name="pageCount" dataType="_0Cz4asn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3O8n5EeycDKiNQAWMXw" name="contractPageCount" content="contractPageCount" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3PMn5EeycDKiNQAWMXw" name="contractPageCount" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3Pcn5EeycDKiNQAWMXw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3Psn5EeycDKiNQAWMXw" name="pageSize" dataType="_0Cz4asn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3P8n5EeycDKiNQAWMXw" name="contractPageSize" content="contractPageSize" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3QMn5EeycDKiNQAWMXw" name="contractPageSize" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3Qcn5EeycDKiNQAWMXw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3Qsn5EeycDKiNQAWMXw" name="rowsExported" dataType="_0Cz4bcn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3Q8n5EeycDKiNQAWMXw" name="contractRowsExported" content="contractRowsExported" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3RMn5EeycDKiNQAWMXw" name="contractRowsExported">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3Rcn5EeycDKiNQAWMXw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_0Cz3Rsn5EeycDKiNQAWMXw" name="fieldsMap" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3R8n5EeycDKiNQAWMXw" name="getFieldsMap" content="def proposition_header_fields = [&#xD;&#xA;&#x9;&quot;persistenceId&quot; : &quot;Numéro proposition&quot;,&#xD;&#xA;&#x9;&quot;typeProposition&quot; : &quot;Motif&quot;,&#xD;&#xA;&#x9;&quot;propositionStatus&quot; : &quot;Statut proposition&quot;,&#xD;&#xA;&#x9;&quot;statusMacroEtapes&quot; : &quot;Macro-statut&quot;,&#xD;&#xA;&#x9;&quot;typeWorkflow&quot; : &quot;Type de workflow&quot;,&#xD;&#xA;&#x9;&quot;budgetYear&quot; : &quot;Exercice&quot;,&#xD;&#xA;&#x9;&quot;initialBudgetYear&quot; : &quot;Exercice initial&quot;,&#xD;&#xA;&#x9;&quot;typeAcquisition&quot; : &quot;Type d'acquisition&quot;,&#xD;&#xA;&#x9;&quot;requestSource&quot; : &quot;Source de la proposition&quot;,&#xD;&#xA;&#x9;&quot;propositionAmount&quot; : &quot;Montant proposition initial&quot;,&#xD;&#xA;&#x9;&quot;actualRequestAmount&quot; : &quot;Montant proposition actualisé&quot;,&#xD;&#xA;&#x9;&quot;creationDate&quot;: &quot;Date de création&quot;,&#xD;&#xA;&#x9;&quot;creatorName&quot;: &quot;Nom du créateur&quot;,&#xD;&#xA;&#x9;&quot;agencyCode&quot;: &quot;Code de l'agence&quot;,&#xD;&#xA;&#x9;&quot;agencyName&quot; : &quot;Nom de l'agence&quot;,&#xD;&#xA;&#x9;&quot;siteCode&quot;: &quot;Code du site&quot;,&#xD;&#xA;&#x9;&quot;siteName&quot;: &quot;Nom du site&quot;,&#xD;&#xA;&#x9;&quot;sectorCode&quot;: &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;sectorName&quot; : &quot;Nom du secteur&quot;,&#xD;&#xA;&#x9;&quot;entiteCode&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;entiteName&quot; : &quot;Nom entité&quot;,&#xD;&#xA;&#x9;&quot;territoryCode&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;territoryName&quot; : &quot;Nom territoire&quot;,&#xD;&#xA;&#x9;&quot;existing&quot; : &quot;Matériel existant&quot;,&#xD;&#xA;&#x9;&quot;materialNumber&quot; : &quot;Numéro de matériel&quot;,&#xD;&#xA;&#x9;&quot;typeMaterial&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;typeMaterialName&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterial&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterialName&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;generalStatusMaterial&quot; : &quot;Etat général&quot;,&#xD;&#xA;&#x9;&quot;materialFamily&quot; : &quot;Famille de matériel&quot;,&#xD;&#xA;&#x9;&quot;currentEnergyCode&quot; : &quot;Code énergie actuelle&quot;,&#xD;&#xA;&#x9;&quot;currentEnergyName&quot; : &quot;Energie actuelle&quot;,&#xD;&#xA;&#x9;&quot;futureEnergyCode&quot; : &quot;Code énergie future&quot;,&#xD;&#xA;&#x9;&quot;futureEnergyName&quot; : &quot;Energie future&quot;,&#xD;&#xA;&#x9;&quot;currentRetrofitable&quot; : &quot;Retrofitable biofuel&quot;,&#xD;&#xA;&#x9;&quot;futureRetrofitable&quot; : &quot;Retrofitable biofuel futur&quot;,&#xD;&#xA;&#x9;&quot;currentBiofuelB100&quot; : &quot;Biofuel B100&quot;,&#xD;&#xA;&#x9;&quot;futureBiofuelB100&quot; : &quot;Biofuel B100 futur&quot;,&#xD;&#xA;&#x9;&quot;currentBiofuelXTL&quot; : &quot;Biofuel XTL&quot;,&#xD;&#xA;&#x9;&quot;futureBiofuelXTL&quot; : &quot;Biofuel XTL futur&quot;,&#xD;&#xA;&#x9;&quot;isBudgetRespected&quot; : &quot;Inclus au budget&quot;,&#xD;&#xA;&#x9;&quot;commentSmart&quot; : &quot;Observation SMARTE&quot;,&#xD;&#xA;&#x9;&quot;nbMonth&quot; : &quot;Nombre de mois&quot;,&#xD;&#xA;&#x9;&quot;monthlyAmount&quot; : &quot;Mensualité&quot;,&#xD;&#xA;&#x9;&quot;monthlyPropositionAmount&quot; : &quot;Mensualité future&quot;,&#xD;&#xA;&#x9;&quot;estimatedDeliveryDate&quot; : &quot;Date de livraison prévue&quot;,&#xD;&#xA;&#x9;&quot;pitchSmart&quot; : &quot;Argumentaire SMARTE&quot;,&#xD;&#xA;&#x9;&quot;percentage&quot; : &quot;Pourcentage&quot;];&#xD;&#xA;&#xD;&#xA;def proposition_all_fields = proposition_header_fields + [&#xD;&#xA;&#x9;&quot;creatorId&quot;: &quot;Identifiant du créateur&quot;,&#xD;&#xA;&#x9;&quot;caseId&quot; : &quot;CaseId Bonita&quot;,&#xD;&#xA;&#x9;&quot;sponsor&quot; : &quot;Sponsor&quot;,&#xD;&#xA;&#x9;&quot;isIsBudgetPropositionApproved&quot;: &quot;Budget approuvé&quot;,&#xD;&#xA;&#x9;&quot;lyrePreOrderCreationStatus&quot; : &quot;Statut de création commande dans Lyre&quot;,&#xD;&#xA;&#x9;&quot;parentPropositionId&quot; : &quot;Proposition parent&quot;,&#xD;&#xA;&#x9;&quot;dddRenewChildPropositionId&quot; : &quot;Proposition DDD Renouvellement fille&quot;,&#xD;&#xA;&#x9;&quot;dddRenewStartDate&quot; : &quot;Date planifiée de DDD Renouvellement&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverName&quot; : &quot;Approbation 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverRole&quot; : &quot;Approbation 1-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].dateAction&quot; : &quot;Approbation 1-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].decision&quot; : &quot;Approbation 1-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].comments&quot; : &quot;Approbation 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverName&quot; : &quot;Approbation 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverRole&quot; : &quot;Approbation 2-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].dateAction&quot; : &quot;Approbation 2-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].decision&quot; : &quot;Approbation 2-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].comments&quot; : &quot;Approbation 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverName&quot; : &quot;Approbation 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverRole&quot; : &quot;Approbation 3-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].dateAction&quot; : &quot;Approbation 3-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].decision&quot; : &quot;Approbation 3-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].comments&quot; : &quot;Approbation 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverName&quot; : &quot;Approbation 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverRole&quot; : &quot;Approbation 4-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].dateAction&quot; : &quot;Approbation 4-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].decision&quot; : &quot;Approbation 4-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].comments&quot; : &quot;Approbation 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverName&quot; : &quot;Approbation 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverRole&quot; : &quot;Approbation 5-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].dateAction&quot; : &quot;Approbation 5-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].decision&quot; : &quot;Approbation 5-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].comments&quot; : &quot;Approbation 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverName&quot; : &quot;Approbation 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverRole&quot; : &quot;Approbation 6-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].dateAction&quot; : &quot;Approbation 6-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].decision&quot; : &quot;Approbation 6-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].comments&quot; : &quot;Approbation 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverName&quot; : &quot;Approbation 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverRole&quot; : &quot;Approbation 7-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].dateAction&quot; : &quot;Approbation 7-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].decision&quot; : &quot;Approbation 7-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].comments&quot; : &quot;Approbation 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverName&quot; : &quot;Approbation 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverRole&quot; : &quot;Approbation 8-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].dateAction&quot; : &quot;Approbation 8-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].decision&quot; : &quot;Approbation 8-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].comments&quot; : &quot;Approbation 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverName&quot; : &quot;Approbation 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverRole&quot; : &quot;Approbation 9-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].dateAction&quot; : &quot;Approbation 9-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].decision&quot; : &quot;Approbation 9-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].comments&quot; : &quot;Approbation 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverName&quot; : &quot;Approbation 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverRole&quot; : &quot;Approbation 10-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].dateAction&quot; : &quot;Approbation 10-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].decision&quot; : &quot;Approbation 10-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].comments&quot; : &quot;Approbation 10-Commentaire&quot;,&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&quot;comments[1].userName&quot;: &quot;Commentaire 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[1].dateAdded&quot;: &quot;Commentaire 1-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[1].userComment&quot;: &quot;Commentaire 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userName&quot;: &quot;Commentaire 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[2].dateAdded&quot;: &quot;Commentaire 2-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userComment&quot;: &quot;Commentaire 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userName&quot;: &quot;Commentaire 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[3].dateAdded&quot;: &quot;Commentaire 3-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userComment&quot;: &quot;Commentaire 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userName&quot;: &quot;Commentaire 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[4].dateAdded&quot;: &quot;Commentaire 4-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userComment&quot;: &quot;Commentaire 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userName&quot;: &quot;Commentaire 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[5].dateAdded&quot;: &quot;Commentaire 5-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userComment&quot;: &quot;Commentaire 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userName&quot;: &quot;Commentaire 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[6].dateAdded&quot;: &quot;Commentaire 6-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userComment&quot;: &quot;Commentaire 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userName&quot;: &quot;Commentaire 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[7].dateAdded&quot;: &quot;Commentaire 7-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userComment&quot;: &quot;Commentaire 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userName&quot;: &quot;Commentaire 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[8].dateAdded&quot;: &quot;Commentaire 8-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userComment&quot;: &quot;Commentaire 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userName&quot;: &quot;Commentaire 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[9].dateAdded&quot;: &quot;Commentaire 9-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userComment&quot;: &quot;Commentaire 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userName&quot;: &quot;Commentaire 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[10].dateAdded&quot;: &quot;Commentaire 10-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userComment&quot;: &quot;Commentaire 10-Commentaire&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;def eligible_materials_all_fields = [&#xD;&#xA;&#x9;&quot;numMat&quot; : &quot;Numéro matériel&quot;,&#xD;&#xA;&#x9;&quot;codeAgence&quot; : &quot;Code agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceAffectation&quot; : &quot;Agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;causeEligibilite&quot;: &quot;Cause éligibilité&quot;,&#xD;&#xA;&#x9;&quot;genre&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;libelleGenre&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;codeSousGenre&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;libelleSousGenre&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;marque&quot; : &quot;Marque&quot;,&#xD;&#xA;&#x9;&quot;modele&quot; : &quot;Modèle&quot;,&#xD;&#xA;&#x9;&quot;typeAchat&quot; : &quot;Type achat&quot;,&#xD;&#xA;&#x9;&quot;codeEnergie&quot; : &quot;Code énergie&quot;,&#xD;&#xA;&#x9;&quot;libelleEnergie&quot; : &quot;Libellé énergie&quot;,&#xD;&#xA;&#x9;&quot;b100&quot; : &quot;Biofuel B100&quot;,&#xD;&#xA;&#x9;&quot;xtl&quot; : &quot;Biofuel XTL&quot;,&#xD;&#xA;&#x9;&quot;retrofitB100&quot; : &quot;Rétrofitable biofuel&quot;,&#xD;&#xA;&#x9;&quot;montantRetrofit&quot; : &quot;Montant rétrofit&quot;,&#xD;&#xA;&#x9;&quot;critair&quot; : &quot;Crit'Air&quot;,&#xD;&#xA;&#x9;&quot;zfe&quot; : &quot;ZFE&quot;,&#xD;&#xA;&#x9;&quot;dateEntree&quot; : &quot;Date entrée&quot;,&#xD;&#xA;&#x9;&quot;dateCirculation&quot; : &quot;Date circulation&quot;,&#xD;&#xA;&#x9;&quot;compteur&quot; : &quot;Compteur&quot;,&#xD;&#xA;&#x9;&quot;dateDbtContratLoc&quot; : &quot;Date début contrat loc&quot;,&#xD;&#xA;&#x9;&quot;dateFinContratLoc&quot; : &quot;Date fin contrat loc&quot;,&#xD;&#xA;&#x9;&quot;valeurAchat&quot; : &quot;Valeur d'achat&quot;,&#xD;&#xA;&#x9;&quot;coutsSAVTotal&quot; : &quot;Coût SAV total&quot;,&#xD;&#xA;&#x9;&quot;engagementReprise&quot; : &quot;Engagement reprise&quot;,&#xD;&#xA;&#x9;&quot;loyerFinancementMensuel&quot; : &quot;Loyer financement mensuel&quot;,&#xD;&#xA;&#x9;&quot;codeTerritoire&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;libelleTerritoire&quot; : &quot;Territoire&quot;,&#xD;&#xA;&#x9;&quot;codeEntite&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;libelleEntite&quot; : &quot;Entité&quot;,&#xD;&#xA;&#x9;&quot;codeRegion&quot; : &quot;Code région&quot;,&#xD;&#xA;&#x9;&quot;libelleRegion&quot; : &quot;Région&quot;,&#xD;&#xA;&#x9;&quot;codeSecteur&quot; : &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;libelleSecteur&quot; : &quot;Secteur&quot;,&#xD;&#xA;&#x9;&quot;codeSite&quot; : &quot;Code site&quot;,&#xD;&#xA;&#x9;&quot;libelleSite&quot; : &quot;Site&quot;,&#xD;&#xA;&#x9;&quot;codeAgenceLoc&quot; : &quot;Code agence de localisation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceLoc&quot; : &quot;Agence de localisation&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;return [&#xD;&#xA;&quot;searchPropositions&quot;:&#xD;&#xA;&#x9;[&quot;ALL_FIELDS&quot;: proposition_header_fields, //FOR ALL: proposition_all_fields,&#xD;&#xA;&#x9; &quot;HEADER_FIELDS&quot; : proposition_header_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;eligibleMaterials&quot;:&#xD;&#xA;&#x9;[&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: eligible_materials_all_fields&#xD;&#xA;&#x9;]&#xD;&#xA;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3SMn5EeycDKiNQAWMXw" name="applicationPage" dataType="_0Cz4bcn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3Scn5EeycDKiNQAWMXw" name="contractApplicationPage" content="contractApplicationPage" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3Ssn5EeycDKiNQAWMXw" name="contractApplicationPage">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3S8n5EeycDKiNQAWMXw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_0Cz3TMn5EeycDKiNQAWMXw" name="bdm_object" multiple="true" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.lang.Object">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3Tcn5EeycDKiNQAWMXw" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3Tsn5EeycDKiNQAWMXw" name="documentStorageId" dataType="_0Cz4a8n5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3T8n5EeycDKiNQAWMXw" content="" returnType="java.lang.Long"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3UMn5EeycDKiNQAWMXw" name="filepath" dataType="_0Cz4bcn5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3Ucn5EeycDKiNQAWMXw" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_0Cz3Usn5EeycDKiNQAWMXw" name="queryListIds" multiple="true" dataType="_0Cz4a8n5EeycDKiNQAWMXw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3U8n5EeycDKiNQAWMXw" name="init_queryListIds()" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def List&lt;Long> persistence_ids_list = [];&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;for (int i=0; i&lt;contractQueryListIds.size(); i++) {&#xD;&#xA;&#x9;&#x9;def Long long_value = Long.valueOf(contractQueryListIds[i]);&#xD;&#xA;&#x9;&#x9;persistence_ids_list.add(long_value);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_queryListIds&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return persistence_ids_list;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3VMn5EeycDKiNQAWMXw" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3Vcn5EeycDKiNQAWMXw"/>
          </referencedElements>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_0Cz3Vsn5EeycDKiNQAWMXw" name="logClass" typeClassname="java.lang.String"/>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_0Cz3V8n5EeycDKiNQAWMXw" name="dataRowsToExport" multiple="true" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_0Cz3WMn5EeycDKiNQAWMXw" name="contractExportDataRows" content="contractExportDataRows" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_0Cz3Wcn5EeycDKiNQAWMXw" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz3Wsn5EeycDKiNQAWMXw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_0Cz3W8n5EeycDKiNQAWMXw">
        <targetForm xmi:type="expression:Expression" xmi:id="_0Cz3XMn5EeycDKiNQAWMXw" name="ExportDataForm" content="19410973-849c-4315-a1c1-347402af24b6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_0Cz3Xcn5EeycDKiNQAWMXw" type="NONE">
        <targetForm xmi:type="expression:Expression" xmi:id="_0Cz3Xsn5EeycDKiNQAWMXw" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3X8n5EeycDKiNQAWMXw" target="_0Cz2V8n5EeycDKiNQAWMXw" source="_0Cz2U8n5EeycDKiNQAWMXw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3YMn5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3Ycn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3Ysn5EeycDKiNQAWMXw" name="OK" target="_0Cz2nsn5EeycDKiNQAWMXw" source="_0Cz238n5EeycDKiNQAWMXw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3Y8n5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3ZMn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3Zcn5EeycDKiNQAWMXw" target="_0Cz2vsn5EeycDKiNQAWMXw" source="_0Cz2nsn5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3Zsn5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3Z8n5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3aMn5EeycDKiNQAWMXw" target="_0Cz2rsn5EeycDKiNQAWMXw" source="_0Cz2ncn5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3acn5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3asn5EeycDKiNQAWMXw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3a8n5EeycDKiNQAWMXw" target="_0Cz218n5EeycDKiNQAWMXw" source="_0Cz2rsn5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3bMn5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3bcn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3bsn5EeycDKiNQAWMXw" name="Error" target="_0Cz2rsn5EeycDKiNQAWMXw" source="_0Cz238n5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3b8n5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3cMn5EeycDKiNQAWMXw" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_0Cz3ccn5EeycDKiNQAWMXw" name="errorDetected" dataType="_0Cz4aMn5EeycDKiNQAWMXw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3csn5EeycDKiNQAWMXw" target="_0Cz228n5EeycDKiNQAWMXw" source="_0Cz2vsn5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3c8n5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3dMn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3dcn5EeycDKiNQAWMXw" target="_0Cz2vsn5EeycDKiNQAWMXw" source="_0Cz2p8n5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3dsn5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3d8n5EeycDKiNQAWMXw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3eMn5EeycDKiNQAWMXw" target="_0Cz218n5EeycDKiNQAWMXw" source="_0Cz2uMn5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3ecn5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3esn5EeycDKiNQAWMXw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3e8n5EeycDKiNQAWMXw" target="_0Cz238n5EeycDKiNQAWMXw" source="_0Cz2V8n5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3fMn5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3fcn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3fsn5EeycDKiNQAWMXw" target="_0Cz238n5EeycDKiNQAWMXw" source="_0Cz248n5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3f8n5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3gMn5EeycDKiNQAWMXw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3gcn5EeycDKiNQAWMXw" target="_0Cz2rsn5EeycDKiNQAWMXw" source="_0Cz3Icn5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3gsn5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3g8n5EeycDKiNQAWMXw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_0Cz3hMn5EeycDKiNQAWMXw" name="Has input data" target="_0Cz248n5EeycDKiNQAWMXw" source="_0Cz2U8n5EeycDKiNQAWMXw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_0Cz3hcn5EeycDKiNQAWMXw"/>
        <condition xmi:type="expression:Expression" xmi:id="_0Cz3hsn5EeycDKiNQAWMXw" name="hasRowsToExport" content="return (dataRowsToExport.size() > 0) ? true : false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:JavaObjectData" xmi:id="_0Cz3h8n5EeycDKiNQAWMXw" name="dataRowsToExport" multiple="true" dataType="_0Cz4bsn5EeycDKiNQAWMXw" className="java.util.Map"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_0Cz3iMn5EeycDKiNQAWMXw" name="ExportUser" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_0Cz3icn5EeycDKiNQAWMXw" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_0Cz3isn5EeycDKiNQAWMXw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_0Cz3i8n5EeycDKiNQAWMXw" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_0Cz3jMn5EeycDKiNQAWMXw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_0Cz3jcn5EeycDKiNQAWMXw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_0Cz3jsn5EeycDKiNQAWMXw">
              <role>pop3pAppprover</role>
              <role>pop3pReadOnly</role>
              <role>user</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_0Cz3j8n5EeycDKiNQAWMXw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_0Cz3kMn5EeycDKiNQAWMXw" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_0Cz3kcn5EeycDKiNQAWMXw" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz3ksn5EeycDKiNQAWMXw" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_0Cz3k8n5EeycDKiNQAWMXw" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3lMn5EeycDKiNQAWMXw" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz3lcn5EeycDKiNQAWMXw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_I3ys4IEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_I4epYIEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz3mMn5EeycDKiNQAWMXw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3mcn5EeycDKiNQAWMXw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3msn5EeycDKiNQAWMXw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3m8n5EeycDKiNQAWMXw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3nMn5EeycDKiNQAWMXw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3ncn5EeycDKiNQAWMXw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3nsn5EeycDKiNQAWMXw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3n8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3oMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3ocn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3osn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3o8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3pMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3pcn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3psn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3p8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3qMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3qcn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3qsn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3q8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3rMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3rcn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3rsn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3r8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3sMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz3scn5EeycDKiNQAWMXw" id="OTHER">
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3ssn5EeycDKiNQAWMXw" key="poi-4.0.0.jar" value="poi-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3s8n5EeycDKiNQAWMXw" key="poi-ooxml-4.0.0.jar" value="poi-ooxml-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3tMn5EeycDKiNQAWMXw" key="poi-scratchpad-4.0.0.jar" value="poi-scratchpad-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3tcn5EeycDKiNQAWMXw" key="xmlbeans-2.6.0.jar" value="xmlbeans-2.6.0.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3tsn5EeycDKiNQAWMXw" key="commons-collections4-4.2.jar" value="commons-collections4-4.2.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3t8n5EeycDKiNQAWMXw" key="commons-compress-1.21.jar" value="commons-compress-1.21.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3uMn5EeycDKiNQAWMXw" key="poi-ooxml-schemas-4.0.0.jar" value="poi-ooxml-schemas-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3ucn5EeycDKiNQAWMXw" key="commons-codec-1.11.jar" value="commons-codec-1.11.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3usn5EeycDKiNQAWMXw" key="commons-logging-1.2.jar" value="commons-logging-1.2.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3u8n5EeycDKiNQAWMXw" key="commons-math3-3.6.1.jar" value="commons-math3-3.6.1.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3vMn5EeycDKiNQAWMXw" key="curvesapi-1.05.jar" value="curvesapi-1.05.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3vcn5EeycDKiNQAWMXw" key="xmlbeans-3.0.1.jar" value="xmlbeans-3.0.1.jar" type="JAR"/>
        </processDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz3vsn5EeycDKiNQAWMXw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3v8n5EeycDKiNQAWMXw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3wMn5EeycDKiNQAWMXw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3wcn5EeycDKiNQAWMXw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3wsn5EeycDKiNQAWMXw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3w8n5EeycDKiNQAWMXw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3xMn5EeycDKiNQAWMXw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3xcn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3xsn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3x8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3yMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3ycn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3ysn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3y8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3zMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3zcn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3zsn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3z8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz30Mn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz30cn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz30sn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz308n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz31Mn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz31cn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz31sn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz318n5EeycDKiNQAWMXw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz32Mn5EeycDKiNQAWMXw" name="logClass" value="ExportDataToExcel" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz32cn5EeycDKiNQAWMXw" name="formatAllRowsExported" value="ALL" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz32sn5EeycDKiNQAWMXw" name="queryAllPageSize" value="500" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz328n5EeycDKiNQAWMXw" name="maximumNumberOfQueriedPages" value="1000" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz33Mn5EeycDKiNQAWMXw" name="outputDirectory" value="/tmp" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz33cn5EeycDKiNQAWMXw" name="delayBeforeCaseCompletionInMinutes" value="5" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz33sn5EeycDKiNQAWMXw" name="excelDateFormat" value="dd/mm/yyyy" typeClassname="java.lang.String"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_0Cz338n5EeycDKiNQAWMXw" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_0Cz34Mn5EeycDKiNQAWMXw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_0Cz34cn5EeycDKiNQAWMXw" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_0Cz34sn5EeycDKiNQAWMXw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_0Cz348n5EeycDKiNQAWMXw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_0Cz35Mn5EeycDKiNQAWMXw"/>
            <users xmi:type="actormapping:Users" xmi:id="_0Cz35cn5EeycDKiNQAWMXw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_0Cz35sn5EeycDKiNQAWMXw" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_0Cz358n5EeycDKiNQAWMXw" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz36Mn5EeycDKiNQAWMXw" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_0Cz36cn5EeycDKiNQAWMXw" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz36sn5EeycDKiNQAWMXw" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz368n5EeycDKiNQAWMXw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_I50tMIEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_I6bxMIEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz37sn5EeycDKiNQAWMXw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz378n5EeycDKiNQAWMXw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz38Mn5EeycDKiNQAWMXw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz38cn5EeycDKiNQAWMXw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz38sn5EeycDKiNQAWMXw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz388n5EeycDKiNQAWMXw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz39Mn5EeycDKiNQAWMXw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz39cn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz39sn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz398n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3-Mn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3-cn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3-sn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3-8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3_Mn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3_cn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3_sn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz3_8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4AMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Acn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Asn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4A8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4BMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Bcn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Bsn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz4B8n5EeycDKiNQAWMXw" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz4CMn5EeycDKiNQAWMXw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Ccn5EeycDKiNQAWMXw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Csn5EeycDKiNQAWMXw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4C8n5EeycDKiNQAWMXw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4DMn5EeycDKiNQAWMXw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Dcn5EeycDKiNQAWMXw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Dsn5EeycDKiNQAWMXw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4D8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4EMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Ecn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Esn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4E8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4FMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Fcn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Fsn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4F8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4GMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Gcn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Gsn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4G8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4HMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Hcn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4Hsn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4H8n5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_0Cz4IMn5EeycDKiNQAWMXw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_0Cz4Icn5EeycDKiNQAWMXw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4Isn5EeycDKiNQAWMXw" name="logClass" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4I8n5EeycDKiNQAWMXw" name="formatAllRowsExported" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4JMn5EeycDKiNQAWMXw" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4Jcn5EeycDKiNQAWMXw" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4Jsn5EeycDKiNQAWMXw" name="outputDirectory" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4J8n5EeycDKiNQAWMXw" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4KMn5EeycDKiNQAWMXw" name="excelDateFormat" typeClassname="java.lang.String"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4Kcn5EeycDKiNQAWMXw" name="logClass" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4Ksn5EeycDKiNQAWMXw" name="formatAllRowsExported" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4K8n5EeycDKiNQAWMXw" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4LMn5EeycDKiNQAWMXw" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4Lcn5EeycDKiNQAWMXw" name="outputDirectory" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4Lsn5EeycDKiNQAWMXw" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_0Cz4L8n5EeycDKiNQAWMXw" name="excelDateFormat" typeClassname="java.lang.String"/>
      <contract xmi:type="process:Contract" xmi:id="_0Cz4MMn5EeycDKiNQAWMXw">
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Mcn5EeycDKiNQAWMXw" name="contractObjectName" description="BDM Object name for a BDM Query, or name of main object exported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4Msn5EeycDKiNQAWMXw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4M8n5EeycDKiNQAWMXw" name="contractQueryName" description="BDM Query name for a BDM Query, empty otherwise">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4NMn5EeycDKiNQAWMXw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Ncn5EeycDKiNQAWMXw" name="contractQueryCriteria" description="BDM Query criteria for a BDM Query, empty if contractExportDataRows is provided">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4Nsn5EeycDKiNQAWMXw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4N8n5EeycDKiNQAWMXw" name="contractOutputFormat">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4OMn5EeycDKiNQAWMXw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Ocn5EeycDKiNQAWMXw" name="contractRowsExported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4Osn5EeycDKiNQAWMXw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4O8n5EeycDKiNQAWMXw" name="contractPageCount" type="INTEGER" description="Page number for a BDM query, starting at 0">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4PMn5EeycDKiNQAWMXw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Pcn5EeycDKiNQAWMXw" name="contractPageSize" type="INTEGER" description="Maximum number of rows">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4Psn5EeycDKiNQAWMXw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4P8n5EeycDKiNQAWMXw" name="contractApplicationPage">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4QMn5EeycDKiNQAWMXw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Qcn5EeycDKiNQAWMXw" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4Qsn5EeycDKiNQAWMXw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Q8n5EeycDKiNQAWMXw" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4RMn5EeycDKiNQAWMXw"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Rcn5EeycDKiNQAWMXw" name="fieldNames" description="List of field names" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4Rsn5EeycDKiNQAWMXw"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4R8n5EeycDKiNQAWMXw" name="name">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4SMn5EeycDKiNQAWMXw"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Scn5EeycDKiNQAWMXw" name="value">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4Ssn5EeycDKiNQAWMXw"/>
            </inputs>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4S8n5EeycDKiNQAWMXw" name="records" type="COMPLEX" description="List of records" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4TMn5EeycDKiNQAWMXw"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Tcn5EeycDKiNQAWMXw" name="values" description="List of values of each record" multiple="true">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4Tsn5EeycDKiNQAWMXw"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4T8n5EeycDKiNQAWMXw" name="textValue">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4UMn5EeycDKiNQAWMXw"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4Ucn5EeycDKiNQAWMXw" name="boolValue" type="BOOLEAN">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4Usn5EeycDKiNQAWMXw"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_0Cz4U8n5EeycDKiNQAWMXw" name="dateValue" type="LOCALDATE">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_0Cz4VMn5EeycDKiNQAWMXw"/>
              </inputs>
            </inputs>
          </inputs>
        </inputs>
      </contract>
      <documents xmi:type="process:Document" xmi:id="_0Cz4Vcn5EeycDKiNQAWMXw" name="exportFile">
        <mimeType xmi:type="expression:Expression" xmi:id="_0Cz4Vsn5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_0Cz4V8n5EeycDKiNQAWMXw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_0Cz4WMn5EeycDKiNQAWMXw" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_0Cz4Wcn5EeycDKiNQAWMXw">
        <name xmi:type="expression:Expression" xmi:id="_0Cz4Wsn5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_0Cz4W8n5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_0Cz4XMn5EeycDKiNQAWMXw">
        <name xmi:type="expression:Expression" xmi:id="_0Cz4Xcn5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_0Cz4Xsn5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_0Cz4X8n5EeycDKiNQAWMXw">
        <name xmi:type="expression:Expression" xmi:id="_0Cz4YMn5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_0Cz4Ycn5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_0Cz4Ysn5EeycDKiNQAWMXw">
        <name xmi:type="expression:Expression" xmi:id="_0Cz4Y8n5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_0Cz4ZMn5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_0Cz4Zcn5EeycDKiNQAWMXw">
        <name xmi:type="expression:Expression" xmi:id="_0Cz4Zsn5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_0Cz4Z8n5EeycDKiNQAWMXw" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_0Cz4aMn5EeycDKiNQAWMXw" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_0Cz4acn5EeycDKiNQAWMXw" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_0Cz4asn5EeycDKiNQAWMXw" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_0Cz4a8n5EeycDKiNQAWMXw" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_0Cz4bMn5EeycDKiNQAWMXw" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_0Cz4bcn5EeycDKiNQAWMXw" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_0Cz4bsn5EeycDKiNQAWMXw" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_0Cz4b8n5EeycDKiNQAWMXw" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_0Cz4cMn5EeycDKiNQAWMXw" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_0Cz4ccn5EeycDKiNQAWMXw" type="Process" element="_0Cz2UMn5EeycDKiNQAWMXw" name="MonDiagramme1" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_0Cz4csn5EeycDKiNQAWMXw" type="2007" element="_0Cz2Ucn5EeycDKiNQAWMXw">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4c8n5EeycDKiNQAWMXw" type="5008" element="_0Cz2Ucn5EeycDKiNQAWMXw"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4dMn5EeycDKiNQAWMXw" type="7001" element="_0Cz2Ucn5EeycDKiNQAWMXw">
        <children xmi:type="notation:Node" xmi:id="_0Cz4dcn5EeycDKiNQAWMXw" type="3007" element="_0Cz2Usn5EeycDKiNQAWMXw">
          <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4dsn5EeycDKiNQAWMXw" type="5007" element="_0Cz2Usn5EeycDKiNQAWMXw"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4d8n5EeycDKiNQAWMXw" type="7002" element="_0Cz2Usn5EeycDKiNQAWMXw">
            <children xmi:type="notation:Shape" xmi:id="_0Cz4eMn5EeycDKiNQAWMXw" type="3002" element="_0Cz2U8n5EeycDKiNQAWMXw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4ecn5EeycDKiNQAWMXw" type="5024" element="_0Cz2U8n5EeycDKiNQAWMXw">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4esn5EeycDKiNQAWMXw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4e8n5EeycDKiNQAWMXw" x="60" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_0Cz4fMn5EeycDKiNQAWMXw" type="3027" element="_0Cz2V8n5EeycDKiNQAWMXw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4fcn5EeycDKiNQAWMXw" type="5017" element="_0Cz2V8n5EeycDKiNQAWMXw"/>
              <children xmi:type="notation:Shape" xmi:id="_0Cz4fsn5EeycDKiNQAWMXw" type="3032" element="_0Cz2ncn5EeycDKiNQAWMXw" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4f8n5EeycDKiNQAWMXw" type="5062" element="_0Cz2ncn5EeycDKiNQAWMXw">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4gMn5EeycDKiNQAWMXw" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4gcn5EeycDKiNQAWMXw" x="91" y="52"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4gsn5EeycDKiNQAWMXw" x="160" y="60" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_0Cz4g8n5EeycDKiNQAWMXw" type="3005" element="_0Cz2nsn5EeycDKiNQAWMXw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4hMn5EeycDKiNQAWMXw" type="5005" element="_0Cz2nsn5EeycDKiNQAWMXw"/>
              <children xmi:type="notation:Shape" xmi:id="_0Cz4hcn5EeycDKiNQAWMXw" type="3043" element="_0Cz2p8n5EeycDKiNQAWMXw" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4hsn5EeycDKiNQAWMXw" type="5055" element="_0Cz2p8n5EeycDKiNQAWMXw">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4h8n5EeycDKiNQAWMXw" x="77" y="-38"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4iMn5EeycDKiNQAWMXw" x="44" y="-17"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4icn5EeycDKiNQAWMXw" x="501" y="54" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_0Cz4isn5EeycDKiNQAWMXw" type="3005" element="_0Cz2rsn5EeycDKiNQAWMXw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4i8n5EeycDKiNQAWMXw" type="5005" element="_0Cz2rsn5EeycDKiNQAWMXw"/>
              <children xmi:type="notation:Shape" xmi:id="_0Cz4jMn5EeycDKiNQAWMXw" type="3043" element="_0Cz2uMn5EeycDKiNQAWMXw" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4jcn5EeycDKiNQAWMXw" type="5055" element="_0Cz2uMn5EeycDKiNQAWMXw">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4jsn5EeycDKiNQAWMXw" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4j8n5EeycDKiNQAWMXw"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4kMn5EeycDKiNQAWMXw" x="498" y="138" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_0Cz4kcn5EeycDKiNQAWMXw" type="3027" element="_0Cz2vsn5EeycDKiNQAWMXw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4ksn5EeycDKiNQAWMXw" type="5017" element="_0Cz2vsn5EeycDKiNQAWMXw"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4k8n5EeycDKiNQAWMXw" x="688" y="56" width="124" height="62"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_0Cz4lMn5EeycDKiNQAWMXw" type="3062" element="_0Cz218n5EeycDKiNQAWMXw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4lcn5EeycDKiNQAWMXw" type="5090" element="_0Cz218n5EeycDKiNQAWMXw">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4lsn5EeycDKiNQAWMXw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4l8n5EeycDKiNQAWMXw" x="840" y="165" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_0Cz4mMn5EeycDKiNQAWMXw" type="3062" element="_0Cz228n5EeycDKiNQAWMXw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4mcn5EeycDKiNQAWMXw" type="5090" element="_0Cz228n5EeycDKiNQAWMXw">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4msn5EeycDKiNQAWMXw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4m8n5EeycDKiNQAWMXw" x="855" y="72" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_0Cz4nMn5EeycDKiNQAWMXw" type="3008" element="_0Cz238n5EeycDKiNQAWMXw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4ncn5EeycDKiNQAWMXw" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4nsn5EeycDKiNQAWMXw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4n8n5EeycDKiNQAWMXw" x="327" y="103"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_0Cz4oMn5EeycDKiNQAWMXw" type="3027" element="_0Cz248n5EeycDKiNQAWMXw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4ocn5EeycDKiNQAWMXw" type="5017" element="_0Cz248n5EeycDKiNQAWMXw"/>
              <children xmi:type="notation:Shape" xmi:id="_0Cz4osn5EeycDKiNQAWMXw" type="3032" element="_0Cz3Icn5EeycDKiNQAWMXw" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4o8n5EeycDKiNQAWMXw" type="5062" element="_0Cz3Icn5EeycDKiNQAWMXw">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4pMn5EeycDKiNQAWMXw" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4pcn5EeycDKiNQAWMXw" x="250" y="215"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4psn5EeycDKiNQAWMXw" x="160" y="198" width="120" height="60"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_0Cz4p8n5EeycDKiNQAWMXw"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_0Cz4qMn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_0Cz4qcn5EeycDKiNQAWMXw"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_0Cz4qsn5EeycDKiNQAWMXw"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4q8n5EeycDKiNQAWMXw" x="23" y="10" width="1657" height="343"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_0Cz4rMn5EeycDKiNQAWMXw"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz4rcn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_0Cz4rsn5EeycDKiNQAWMXw"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_0Cz4r8n5EeycDKiNQAWMXw"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_0Cz4sMn5EeycDKiNQAWMXw" width="1680" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_0Cz4scn5EeycDKiNQAWMXw"/>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz4ssn5EeycDKiNQAWMXw" type="4001" element="_0Cz3X8n5EeycDKiNQAWMXw" source="_0Cz4eMn5EeycDKiNQAWMXw" target="_0Cz4fMn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4s8n5EeycDKiNQAWMXw" type="6001" element="_0Cz3X8n5EeycDKiNQAWMXw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4tMn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz4tcn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz4tsn5EeycDKiNQAWMXw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz4t8n5EeycDKiNQAWMXw" type="4001" element="_0Cz3Ysn5EeycDKiNQAWMXw" source="_0Cz4nMn5EeycDKiNQAWMXw" target="_0Cz4g8n5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4uMn5EeycDKiNQAWMXw" type="6001" element="_0Cz3Ysn5EeycDKiNQAWMXw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4ucn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz4usn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz4u8n5EeycDKiNQAWMXw" points="[-12, -26, -174, 24]$[-12, -44, -174, 6]$[141, -44, -21, 6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz4vMn5EeycDKiNQAWMXw" id="(0.7674418604651163,0.6046511627906976)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz4vcn5EeycDKiNQAWMXw" id="(0.18421052631578946,0.43859649122807015)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz4vsn5EeycDKiNQAWMXw" type="4001" element="_0Cz3Zcn5EeycDKiNQAWMXw" source="_0Cz4g8n5EeycDKiNQAWMXw" target="_0Cz4kcn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4v8n5EeycDKiNQAWMXw" type="6001" element="_0Cz3Zcn5EeycDKiNQAWMXw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4wMn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz4wcn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz4wsn5EeycDKiNQAWMXw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz4w8n5EeycDKiNQAWMXw" type="4001" element="_0Cz3aMn5EeycDKiNQAWMXw" source="_0Cz4fsn5EeycDKiNQAWMXw" target="_0Cz4isn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4xMn5EeycDKiNQAWMXw" type="6001" element="_0Cz3aMn5EeycDKiNQAWMXw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4xcn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz4xsn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz4x8n5EeycDKiNQAWMXw" points="[0, 0, -157, -40]$[147, 41, -10, 1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz4yMn5EeycDKiNQAWMXw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz4ycn5EeycDKiNQAWMXw" id="(0.08771929824561403,0.631578947368421)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz4ysn5EeycDKiNQAWMXw" type="4001" element="_0Cz3a8n5EeycDKiNQAWMXw" source="_0Cz4isn5EeycDKiNQAWMXw" target="_0Cz4lMn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4y8n5EeycDKiNQAWMXw" type="6001" element="_0Cz3a8n5EeycDKiNQAWMXw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4zMn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz4zcn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz4zsn5EeycDKiNQAWMXw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz4z8n5EeycDKiNQAWMXw" type="4001" element="_0Cz3bsn5EeycDKiNQAWMXw" source="_0Cz4nMn5EeycDKiNQAWMXw" target="_0Cz4isn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz40Mn5EeycDKiNQAWMXw" type="6001" element="_0Cz3bsn5EeycDKiNQAWMXw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz40cn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz40sn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz408n5EeycDKiNQAWMXw" points="[0, 4, -120, -35]$[0, 39, -120, 0]$[120, 39, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz41Mn5EeycDKiNQAWMXw" id="(0.7674418604651163,0.20930232558139536)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz41cn5EeycDKiNQAWMXw" id="(0.0,0.24561403508771928)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz41sn5EeycDKiNQAWMXw" type="4001" element="_0Cz3csn5EeycDKiNQAWMXw" source="_0Cz4kcn5EeycDKiNQAWMXw" target="_0Cz4mMn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz418n5EeycDKiNQAWMXw" type="6001" element="_0Cz3csn5EeycDKiNQAWMXw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz42Mn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz42cn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz42sn5EeycDKiNQAWMXw" points="[0, -3, -98, 0]$[92, -5, -6, -2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz428n5EeycDKiNQAWMXw" id="(1.0,0.4838709677419355)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz43Mn5EeycDKiNQAWMXw" id="(0.2,0.43333333333333335)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz43cn5EeycDKiNQAWMXw" type="4001" element="_0Cz3dcn5EeycDKiNQAWMXw" source="_0Cz4hcn5EeycDKiNQAWMXw" target="_0Cz4kcn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz43sn5EeycDKiNQAWMXw" type="6001" element="_0Cz3dcn5EeycDKiNQAWMXw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz438n5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz44Mn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz44cn5EeycDKiNQAWMXw" points="[0, -25, -213, -49]$[0, -48, -213, -72]$[257, -48, 44, -72]$[257, -8, 44, -32]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz44sn5EeycDKiNQAWMXw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz448n5EeycDKiNQAWMXw" id="(0.14516129032258066,0.5161290322580645)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz45Mn5EeycDKiNQAWMXw" type="4001" element="_0Cz3eMn5EeycDKiNQAWMXw" source="_0Cz4jMn5EeycDKiNQAWMXw" target="_0Cz4lMn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz45cn5EeycDKiNQAWMXw" type="6001" element="_0Cz3eMn5EeycDKiNQAWMXw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz45sn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz458n5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz46Mn5EeycDKiNQAWMXw" points="[0, -2, -163, 43]$[163, -2, 0, 43]$[163, -31, 0, 14]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz46cn5EeycDKiNQAWMXw" id="(1.0,1.0)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz46sn5EeycDKiNQAWMXw" type="4001" element="_0Cz3e8n5EeycDKiNQAWMXw" source="_0Cz4fMn5EeycDKiNQAWMXw" target="_0Cz4nMn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz468n5EeycDKiNQAWMXw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz47Mn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz47cn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz47sn5EeycDKiNQAWMXw" points="[0, 6, -52, -33]$[28, 6, -24, -33]$[28, 33, -24, -6]$[47, 33, -5, -6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz478n5EeycDKiNQAWMXw" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz48Mn5EeycDKiNQAWMXw" id="(0.11627906976744186,0.627906976744186)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz48cn5EeycDKiNQAWMXw" type="4001" element="_0Cz3fsn5EeycDKiNQAWMXw" source="_0Cz4oMn5EeycDKiNQAWMXw" target="_0Cz4nMn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz48sn5EeycDKiNQAWMXw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz488n5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz49Mn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz49cn5EeycDKiNQAWMXw" points="[0, -2, -56, 94]$[28, -2, -28, 94]$[28, -96, -28, 0]$[55, -96, -1, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz49sn5EeycDKiNQAWMXw" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz498n5EeycDKiNQAWMXw" id="(0.20930232558139536,0.6976744186046512)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz4-Mn5EeycDKiNQAWMXw" type="4001" element="_0Cz3gcn5EeycDKiNQAWMXw" source="_0Cz4osn5EeycDKiNQAWMXw" target="_0Cz4isn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz4-cn5EeycDKiNQAWMXw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz4-sn5EeycDKiNQAWMXw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz4-8n5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz4_Mn5EeycDKiNQAWMXw" points="[0, -13, -230, 75]$[97, -13, -133, 75]$[97, -96, -133, -8]$[226, -96, -4, -8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz4_cn5EeycDKiNQAWMXw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz4_sn5EeycDKiNQAWMXw" id="(0.03508771929824561,0.8596491228070176)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_0Cz4_8n5EeycDKiNQAWMXw" type="4001" element="_0Cz3hMn5EeycDKiNQAWMXw" source="_0Cz4eMn5EeycDKiNQAWMXw" target="_0Cz4oMn5EeycDKiNQAWMXw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_0Cz5AMn5EeycDKiNQAWMXw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_0Cz5Acn5EeycDKiNQAWMXw" x="14" y="-44"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_0Cz5Asn5EeycDKiNQAWMXw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_0Cz5A8n5EeycDKiNQAWMXw" points="[-15, -1, -89, -139]$[-15, 129, -89, -9]$[70, 129, -4, -9]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz5BMn5EeycDKiNQAWMXw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_0Cz5Bcn5EeycDKiNQAWMXw" id="(0.03333333333333333,0.6333333333333333)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
