<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_RPp_8OEwEeyVL7YjxKiTEw" name="ExportDataToExcel" version="1.4" author="C6754557" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004" configId="ACED0005740010372E31312E312D303031372E31312E34">
    <elements xmi:type="process:Pool" xmi:id="_RPp_8eEwEeyVL7YjxKiTEw" name="ExportDataToExcel" version="1.4">
      <elements xmi:type="process:Lane" xmi:id="_RPp_8uEwEeyVL7YjxKiTEw" name="Export User" actor="_RPr2EeEwEeyVL7YjxKiTEw">
        <elements xmi:type="process:StartEvent" xmi:id="_RPp_8-EwEeyVL7YjxKiTEw" name="Start Export" outgoing="_RPr16OEwEeyVL7YjxKiTEw _RPr2DeEwEeyVL7YjxKiTEw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_RPp_9OEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_RPp_9eEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_RPp_9uEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_RPp_9-EwEeyVL7YjxKiTEw" name="Export Data from BDM Query" outgoing="_RPr2BOEwEeyVL7YjxKiTEw" incoming="_RPr16OEwEeyVL7YjxKiTEw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_RPp_-OEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_RPp_-eEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_RPp_-uEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_RPp_--EwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_RPp__OEwEeyVL7YjxKiTEw" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_RPp__eEwEeyVL7YjxKiTEw" name="exportDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_RPp__uEwEeyVL7YjxKiTEw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPp__-EwEeyVL7YjxKiTEw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_RPqAAOEwEeyVL7YjxKiTEw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPqAAeEwEeyVL7YjxKiTEw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPqAAuEwEeyVL7YjxKiTEw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_RPqAA-EwEeyVL7YjxKiTEw" name="exportDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def BusinessObjectDAO dao_instance = null;&#xD;&#xA;def java.lang.reflect.Method find_method = null;&#xD;&#xA;def Object[] method_parameters = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def int page_count=0;&#xD;&#xA;def int page_limit=0;&#x9;// To avoid infinite loop&#xD;&#xA;def int page_size=0;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;// Map objectName (lowercase) -> DAO object&#xD;&#xA;def Map dao_objects_map = [&quot;proposition&quot;: propositionDAO];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Data Export&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get find method parameters&#xD;&#xA;&#x9;def Map find_method_profile = BDMUtility.getFindQuery(objectName,queryName, queryCriteria, dao_objects_map, queryListIds);&#xD;&#xA;&#x9;error_message = find_method_profile['errorMessage'];&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error while retrieving find method: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;dao_instance = find_method_profile['daoInstance'];&#xD;&#xA;&#x9;&#x9;find_method = find_method_profile['findMethod'];&#xD;&#xA;&#x9;&#x9;method_parameters = find_method_profile['parameters'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get Page count / page size values according to the type of query&#xD;&#xA;&#x9;&#x9;if (! formatAllRowsExported.equalsIgnoreCase(rowsExported)) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting only current page according to selected format : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = pageCount;&#xD;&#xA;&#x9;&#x9;&#x9;page_size = pageSize;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit = page_count+1;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Exporting all rows : &quot; + rowsExported);&#xD;&#xA;&#x9;&#x9;&#x9;page_count = 0;&#xD;&#xA;&#x9;&#x9;&#x9;page_limit=maximumNumberOfQueriedPages;&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;&#x9;&#x9;page_size=queryAllPageSize;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get fields map&#xD;&#xA;&#x9;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, dao_instance: dao_instance, find_method: find_method, method_parameters: method_parameters, page_count: page_count, page_size: page_size, page_limit: page_limit, field_names_list: field_names_list, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_RPqABOEwEeyVL7YjxKiTEw" name="queryCriteria" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_RPqABeEwEeyVL7YjxKiTEw" name="propositionDAO" content="propositionDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.PropositionDAO" returnTypeFixed="true"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPqABuEwEeyVL7YjxKiTEw" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPqAB-EwEeyVL7YjxKiTEw" name="objectName" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPqACOEwEeyVL7YjxKiTEw" name="queryName" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_RPqACeEwEeyVL7YjxKiTEw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPqACuEwEeyVL7YjxKiTEw" name="pageCount" dataType="_RPscjuEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_RPqnAOEwEeyVL7YjxKiTEw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPqnAeEwEeyVL7YjxKiTEw" name="pageSize" dataType="_RPscjuEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPqnAuEwEeyVL7YjxKiTEw" name="formatAllRowsExported" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPqnA-EwEeyVL7YjxKiTEw" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPqnBOEwEeyVL7YjxKiTEw" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPqnBeEwEeyVL7YjxKiTEw" name="fieldsMap" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPqnBuEwEeyVL7YjxKiTEw" name="rowsExported" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPqnB-EwEeyVL7YjxKiTEw" name="applicationPage" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPqnCOEwEeyVL7YjxKiTEw" name="outputFormat" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPqnCeEwEeyVL7YjxKiTEw" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPqnCuEwEeyVL7YjxKiTEw" name="queryListIds" multiple="true" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_RPrOEOEwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPrOEeEwEeyVL7YjxKiTEw" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPrOEuEwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPrOE-EwEeyVL7YjxKiTEw" name="executeExport" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def find_method = result['find_method'];&#xD;&#xA;&#x9;def dao_instance = result['dao_instance'];&#xD;&#xA;&#x9;def method_parameters = result['method_parameters'];&#xD;&#xA;&#x9;def int page_count =  result['page_count'];&#xD;&#xA;&#x9;def int page_limit = result['page_limit'];&#x9;// To avoid infinite loop&#xD;&#xA;&#x9;def int page_size = result['page_size'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;while ((has_more) &amp;&amp; (page_count&lt;page_limit) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Executing query with &quot; + String.valueOf(method_parameters.size()) + &quot; parameters for page &quot; + String.valueOf(page_count) + &quot; and page size=&quot; + String.valueOf(page_size));&#xD;&#xA;&#x9;&#x9;def Map find_result = BDMUtility.executeFindMethod(dao_instance, find_method, method_parameters, page_count, page_size);&#xD;&#xA;&#x9;&#x9;error_message = find_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;def records_list = find_result['records'];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Error detected on query page &quot; + String.valueOf(page_count) + &quot; : &quot; + error_message);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (records_list == null) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : records list is null&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def nb_records = records_list.size();&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Page &quot; + String.valueOf(page_count) + &quot; : found &quot;  + String.valueOf(nb_records) + &quot; records&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Export list to Excel&#xD;&#xA;&#x9;&#x9;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ExcelFile.addExcelDataRow(worksheet, records_list[i], field_names_list, row_index, dateStyle);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;if (nb_records&lt;page_size) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;has_more = false;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Next page&#xD;&#xA;&#x9;&#x9;page_count = page_count +1;&#xD;&#xA;&#x9;} // end while&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportDataToExcel&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_RPrOFOEwEeyVL7YjxKiTEw" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_RPrOFeEwEeyVL7YjxKiTEw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_RPrOFuEwEeyVL7YjxKiTEw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPrOF-EwEeyVL7YjxKiTEw" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPrOGOEwEeyVL7YjxKiTEw" name="logClass" typeClassname="java.lang.String"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPrOGeEwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_RPrOGuEwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPrOG-EwEeyVL7YjxKiTEw" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_RPrOHOEwEeyVL7YjxKiTEw" name="errorMessage" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPrOHeEwEeyVL7YjxKiTEw" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPrOHuEwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPrOH-EwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_RPrOIOEwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPrOIeEwEeyVL7YjxKiTEw" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_RPrOIuEwEeyVL7YjxKiTEw" name="documentStorageId" dataType="_RPscj-EwEeyVL7YjxKiTEw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPrOI-EwEeyVL7YjxKiTEw" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPrOJOEwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPrOJeEwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_RPrOJuEwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPrOJ-EwEeyVL7YjxKiTEw" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_RPrOKOEwEeyVL7YjxKiTEw" name="filepath" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPrOKeEwEeyVL7YjxKiTEw" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPrOKuEwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPrOK-EwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_RPrOLOEwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPrOLeEwEeyVL7YjxKiTEw" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_RPrOLuEwEeyVL7YjxKiTEw" name="errorDetected" dataType="_RPscjOEwEeyVL7YjxKiTEw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPrOL-EwEeyVL7YjxKiTEw" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_RPrOMOEwEeyVL7YjxKiTEw" name="errorMessage" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPr1IOEwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_RPr1IeEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_RPr1IuEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_RPr1I-EwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_RPr1JOEwEeyVL7YjxKiTEw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_RPr1JeEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_RPr1JuEwEeyVL7YjxKiTEw" name="ExportError" outgoing="_RPr18eEwEeyVL7YjxKiTEw"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_RPr1J-EwEeyVL7YjxKiTEw" name="Display Output File" outgoing="_RPr17uEwEeyVL7YjxKiTEw" incoming="_RPr16-EwEeyVL7YjxKiTEw" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_RPr1KOEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_RPr1KeEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_RPr1KuEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_RPr1K-EwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_RPr1LOEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_RPr1LeEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_RPr1LuEwEeyVL7YjxKiTEw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_RPr1L-EwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_RPr1MOEwEeyVL7YjxKiTEw" name="TimerTermination" outgoing="_RPr1_uEwEeyVL7YjxKiTEw">
            <condition xmi:type="expression:Expression" xmi:id="_RPr1MeEwEeyVL7YjxKiTEw" name="delayBeforeCaseCompletionInMinutes" content="return 60000L * delayBeforeCaseCompletionInMinutes;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPr1MuEwEeyVL7YjxKiTEw" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
            </condition>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_RPr1M-EwEeyVL7YjxKiTEw">
            <targetForm xmi:type="expression:Expression" xmi:id="_RPr1NOEwEeyVL7YjxKiTEw" name="DisplayExportFile" content="8d9a9132-635d-4604-b63e-711933a32b41" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_RPr1NeEwEeyVL7YjxKiTEw"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_RPr1NuEwEeyVL7YjxKiTEw" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_RPr1N-EwEeyVL7YjxKiTEw" name="Display Error" outgoing="_RPr19OEwEeyVL7YjxKiTEw" incoming="_RPr18eEwEeyVL7YjxKiTEw _RPr19-EwEeyVL7YjxKiTEw _RPr2CuEwEeyVL7YjxKiTEw" overrideActorsOfTheLane="false">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_RPr1OOEwEeyVL7YjxKiTEw" name="displayName()" content="return &quot;Echec de l'export de données&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_RPr1OeEwEeyVL7YjxKiTEw" name="dynamicDescription()" content="return errorMessage.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_RPr1OuEwEeyVL7YjxKiTEw" name="errorMessage" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_RPr1O-EwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <loopCondition xmi:type="expression:Expression" xmi:id="_RPr1POEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_RPr1PeEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_RPr1PuEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_RPr1P-EwEeyVL7YjxKiTEw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_RPr1QOEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:BoundaryTimerEvent" xmi:id="_RPr1QeEwEeyVL7YjxKiTEw" name="Error Expiry" outgoing="_RPr2AeEwEeyVL7YjxKiTEw">
            <condition xmi:type="expression:Expression" xmi:id="_RPr1QuEwEeyVL7YjxKiTEw" name="00:05:00" content="300000L" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long"/>
          </BoundaryIntermediateEvents>
          <formMapping xmi:type="process:FormMapping" xmi:id="_RPr1Q-EwEeyVL7YjxKiTEw">
            <targetForm xmi:type="expression:Expression" xmi:id="_RPr1ROEwEeyVL7YjxKiTEw" name="DisplayExportError" content="591192bc-c8ec-41e5-b987-f74165738cb6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_RPr1ReEwEeyVL7YjxKiTEw"/>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_RPr1RuEwEeyVL7YjxKiTEw" name="3600000" content="3600000" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_RPr1R-EwEeyVL7YjxKiTEw" name="Purge Document" outgoing="_RPr1--EwEeyVL7YjxKiTEw" incoming="_RPr17uEwEeyVL7YjxKiTEw _RPr1_uEwEeyVL7YjxKiTEw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_RPr1SOEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_RPr1SeEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_RPr1SuEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_RPr1S-EwEeyVL7YjxKiTEw" name="purgeDocumentAndFile" definitionId="scripting-groovy-script" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_RPr1TOEwEeyVL7YjxKiTEw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPr1TeEwEeyVL7YjxKiTEw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_RPr1TuEwEeyVL7YjxKiTEw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPr1T-EwEeyVL7YjxKiTEw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPr1UOEwEeyVL7YjxKiTEw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_RPr1UeEwEeyVL7YjxKiTEw" name="purgeDocumentAndFile" content="import org.bonitasoft.engine.api.APIAccessor;&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Delete temporary file&#xD;&#xA;&#x9;if (! filepath.isEmpty()) {&#xD;&#xA;&#x9;&#x9;FileUtility.deleteFile(filepath);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Remove document&#xD;&#xA;&#x9;if (documentStorageId != null) {&#xD;&#xA;&#x9;&#x9;FileUtility.removeDocument(documentStorageId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;logError(log_file, &quot;Failed to purge document: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;purgeDocumentAndFile&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_RPr1UuEwEeyVL7YjxKiTEw" name="documentStorageId" dataType="_RPscj-EwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPr1U-EwEeyVL7YjxKiTEw" name="filepath" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_RPr1VOEwEeyVL7YjxKiTEw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPr1VeEwEeyVL7YjxKiTEw" name="logClass" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_RPr1VuEwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPr1V-EwEeyVL7YjxKiTEw" content=""/>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPr1WOEwEeyVL7YjxKiTEw" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_RPr1WeEwEeyVL7YjxKiTEw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPr1WuEwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_RPr1W-EwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_RPr1XOEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_RPr1XeEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_RPr1XuEwEeyVL7YjxKiTEw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_RPr1X-EwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_RPr1YOEwEeyVL7YjxKiTEw" name="End Error" incoming="_RPr19OEwEeyVL7YjxKiTEw _RPr2AeEwEeyVL7YjxKiTEw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_RPr1YeEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_RPr1YuEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_RPr1Y-EwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_RPr1ZOEwEeyVL7YjxKiTEw" name="End Export" incoming="_RPr1--EwEeyVL7YjxKiTEw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_RPr1ZeEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_RPr1ZuEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_RPr1Z-EwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_RPr1aOEwEeyVL7YjxKiTEw" name="is OK?" outgoing="_RPr16-EwEeyVL7YjxKiTEw _RPr19-EwEeyVL7YjxKiTEw" incoming="_RPr2BOEwEeyVL7YjxKiTEw _RPr2B-EwEeyVL7YjxKiTEw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_RPr1aeEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_RPr1auEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_RPr1a-EwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_RPr1bOEwEeyVL7YjxKiTEw" name="Export Data from Input" outgoing="_RPr2B-EwEeyVL7YjxKiTEw" incoming="_RPr2DeEwEeyVL7YjxKiTEw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_RPr1beEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_RPr1buEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_RPr1b-EwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:JavaObjectData" xmi:id="_RPr1cOEwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map">
            <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1ceEwEeyVL7YjxKiTEw" name="EmptyMap" content="return [:];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_RPr1cuEwEeyVL7YjxKiTEw" name="exportInputDataToExcel" definitionId="scripting-groovy-script" event="ON_ENTER" throwErrorEvent="true" namedError="ExportDataError" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_RPr1c-EwEeyVL7YjxKiTEw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.2.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPr1dOEwEeyVL7YjxKiTEw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_RPr1deEwEeyVL7YjxKiTEw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPr1duEwEeyVL7YjxKiTEw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPr1d-EwEeyVL7YjxKiTEw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_RPr1eOEwEeyVL7YjxKiTEw" name="exportInputDataToExcel" content="import org.bonitasoft.engine.bdm.dao.BusinessObjectDAO;&#xD;&#xA;import org.bonitasoft.engine.identity.UserNotFoundException&#xD;&#xA;&#xD;&#xA;import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def String error_message = &quot;&quot;;&#xD;&#xA;def workbook = null;&#xD;&#xA;def worksheet =null;&#xD;&#xA;def dateStyle = null;&#xD;&#xA;def List&lt;String> field_names_list = null;&#xD;&#xA;def List&lt;Integer> field_values_index = null;&#xD;&#xA;def String excel_filename=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logDebug(log_file, &quot;Starting Export from data provided in contract&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Get fields map&#xD;&#xA;&#x9;def fields_map = getExportFieldsMap(fieldsMap, applicationPage, outputFormat, log_file);&#xD;&#xA;&#x9;if (fields_map == null) {&#xD;&#xA;&#x9;&#x9;error_message = &quot;Format d'export non supporté pour l'objet [&quot; + objectName + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// Get field name lists&#xD;&#xA;&#x9;&#x9;field_names_list = getFieldNames(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// For each field name, get the corresponding index of fields values&#xD;&#xA;&#x9;&#x9;field_values_index = buildFieldValuesIndex(dataRowsToExport[0].get('fieldNames'), field_names_list);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Creating workbook&#xD;&#xA;&#x9;&#x9;def List&lt;String> header_row = getFieldTitles(fields_map, log_file);&#xD;&#xA;&#x9;&#x9;def excel_file = ExcelFile.createExcelFile(applicationPage, header_row, excelDateFormat);&#xD;&#xA;&#x9;&#x9;if (! excel_file['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (!error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += excel_file['errorMessage'];&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;workbook = excel_file['workbook'];&#xD;&#xA;&#x9;&#x9;&#x9;worksheet = excel_file['worksheet'];&#xD;&#xA;&#x9;&#x9;&#x9;dateStyle = excel_file['dateStyle'];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Defining output filename&#xD;&#xA;&#x9;&#x9;def user = apiAccessor.getIdentityAPI().getUser(apiAccessor.getProcessAPI()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getProcessInstance(processInstanceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.getStartedBy());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;def String username= user.firstName + user.lastName;&#xD;&#xA;&#x9;&#x9;excel_filename = getOutputFilename(applicationPage, outputFormat, username, log_file);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Error detected during export: &quot; + error_message);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;logDebug(log_file, &quot;Exporting to file [&quot; + excel_filename + &quot;]&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, workbook: workbook, worksheet: worksheet, field_names_list: field_names_list, field_values_index: field_values_index, excel_filename: excel_filename, dateStyle: dateStyle];&#xD;&#xA;&#xD;&#xA;def String getOutputFilename(String page_name, String outputFormat, String username, LogFile log_file) {&#xD;&#xA;&#x9;def String filename=&quot;Export_&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def Date date_now = new Date();&#xD;&#xA;&#x9;&#x9;def java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(&quot;dd-MM-yyyy_HH-mm-ss&quot;);&#xD;&#xA;&#x9;&#x9;def String timestamp = df.format(date_now);&#xD;&#xA;&#x9;&#x9;filename += page_name + &quot;_&quot; + outputFormat + &quot;_&quot; + username + &quot;_&quot; + timestamp + &quot;.xlsx&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getOutputFilename: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return filename;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, String> getExportFieldsMap(Map&lt;String, Map> fieldsMap, String pageName, String outputFormat, LogFile log_file) {&#xD;&#xA;&#x9;def Map&lt;String, String> format_fields_map = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Retrieve map for object&#xD;&#xA;&#x9;&#x9;def Map&lt;String, Map> object_fields_map = fieldsMap[pageName];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (object_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;// Retrieve map for target format&#xD;&#xA;&#x9;&#x9;&#x9;format_fields_map = object_fields_map[outputFormat];&#xD;&#xA;&#x9;&#x9;&#x9;if (format_fields_map == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for format [&quot; + outputFormat + &quot;] and page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Could not get map for page [&quot; + pageName + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getExportFieldsMap: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return format_fields_map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldTitles(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_titles = new ArrayList();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;for (f in format_fields_map.keySet()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;field_titles.add(format_fields_map.get(f));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldTitles: null map !&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldTitles: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_titles;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;String> getFieldNames(Map&lt;String, String> format_fields_map, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;String> field_names = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;if (format_fields_map != null) {&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList&lt;String>(format_fields_map.keySet());&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;getFieldNames: null map !&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;field_names = new ArrayList();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getFieldNames: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;return field_names;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def List&lt;Integer> buildFieldValuesIndex(List&lt;String> dataRowsFieldNames, List&lt;String> field_names_list) {&#xD;&#xA;&#x9;def List&lt;Integer> list_fields_values_index = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// We need at list one record of data&#xD;&#xA;&#x9;if (dataRowsFieldNames != null) {&#xD;&#xA;&#x9;&#x9;def int nb_fields_values = dataRowsFieldNames.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Loop through each field from field_names_list&#xD;&#xA;&#x9;&#x9;def int nb_fields_names = field_names_list.size();&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields_names; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;// Search the field name in the record values&#xD;&#xA;&#x9;&#x9;&#x9;def String one_field_name = field_names_list[i];&#xD;&#xA;&#x9;&#x9;&#x9;def Integer field_value_index = null;&#xD;&#xA;&#x9;&#x9;&#x9;for (int j=0; j&lt;nb_fields_values; j++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def value_field_name = dataRowsFieldNames[j];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (one_field_name.equalsIgnoreCase(value_field_name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Field has been found in record values&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;field_value_index = Integer.valueOf(j);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Store the field index found, or null if not found&#xD;&#xA;&#x9;&#x9;&#x9;list_fields_values_index.push(field_value_index);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return list_fields_values_index;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;exportInputDataToExcel&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPr1eeEwEeyVL7YjxKiTEw" name="fieldsMap" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPr1euEwEeyVL7YjxKiTEw" name="applicationPage" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPr1e-EwEeyVL7YjxKiTEw" name="objectName" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPr1fOEwEeyVL7YjxKiTEw" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_RPr1feEwEeyVL7YjxKiTEw" name="outputFormat" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_RPr1fuEwEeyVL7YjxKiTEw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_RPr1f-EwEeyVL7YjxKiTEw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPr1gOEwEeyVL7YjxKiTEw" name="excelDateFormat" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPr1geEwEeyVL7YjxKiTEw" name="dataRowsToExport" multiple="true" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_RPr1guEwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPr1g-EwEeyVL7YjxKiTEw" name="exportResult" content="exportResult" type="TYPE_VARIABLE" returnType="java.util.Map">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPr1hOEwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPr1heEwEeyVL7YjxKiTEw" name="executeExportOfInputData" content="import com.sgdbf.pop3p.groovy.BDMUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.FileUtility&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def String error_message = result['errorMessage'];&#xD;&#xA;def Long doc_storage_id=null;&#xD;&#xA;def String file_path=&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Execute the query&#xD;&#xA;&#x9;def workbook = result['workbook'];&#xD;&#xA;&#x9;def worksheet = result['worksheet'];&#xD;&#xA;&#x9;def dateStyle = result['dateStyle'];&#xD;&#xA;&#x9;def List&lt;String> field_names_list = result['field_names_list'];&#xD;&#xA;&#x9;def List&lt;Integer> field_values_index = result['field_values_index'];&#xD;&#xA;&#x9;def String excel_filename = result['excel_filename'];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;def boolean has_more=true;&#xD;&#xA;&#x9;def int row_index=0;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Export list to Excel&#xD;&#xA;&#x9;List&lt;Map> data_records = dataRowsToExport[0].get('records');&#xD;&#xA;&#x9;def int nb_records = data_records.size();&#xD;&#xA;&#x9;for (int i=0; i&lt;nb_records; i++) {&#xD;&#xA;&#x9;&#x9;row_index++;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Get the record values and add the row to the speadsheet&#xD;&#xA;&#x9;&#x9;def List&lt;Object> one_record_values = data_records[i].get(&quot;values&quot;);&#xD;&#xA;&#x9;&#x9;def List&lt;Object> record_values = getRecordValues(one_record_values, field_values_index, log_file);&#xD;&#xA;&#x9;&#x9;ExcelFile.addExcelFieldValuesRow(worksheet, record_values, field_names_list, row_index, dateStyle)&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;if ((workbook != null) &amp;&amp; (error_message.isEmpty())) {&#xD;&#xA;&#x9;&#x9;// Writing output file&#xD;&#xA;&#x9;&#x9;def write_result = ExcelFile.writeExcelFile(workbook, excel_filename, outputDirectory);&#xD;&#xA;&#x9;&#x9;if (! write_result['errorMessage'].isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;def String err_msg = write_result['errorMessage'];&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to write output file: &quot; +err_msg );&#xD;&#xA;&#x9;&#x9;&#x9;if (! error_message.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;error_message += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;error_message += err_msg;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;file_path = write_result['filepath'];&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created output file [&quot; + file_path + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Creating Document&#xD;&#xA;&#x9;&#x9;&#x9;def excel_mime_type = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;doc_storage_id = FileUtility.createDocument(&quot;exportFile&quot;, file_path, excel_mime_type, processInstanceId, apiAccessor.getProcessAPI());&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Successfully created document with storage id [&quot; + String.valueOf(doc_storage_id) + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_message = &quot;Echec de l'export des données: &quot; + e.toString();&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;return [errorMessage: error_message, filePath: file_path, documentStorageId: doc_storage_id];&#xD;&#xA;&#xD;&#xA;def List&lt;Object> getRecordValues(List&lt;Object> one_row_to_export, List&lt;Integer> field_values_index, LogFile log_file) {&#xD;&#xA;&#x9;def List&lt;Object> record_values = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def int nb_fields = field_values_index.size();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;for (int i=0; i&lt;nb_fields; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;def Integer value_index = field_values_index[i];&#xD;&#xA;&#x9;&#x9;&#x9;if ((value_index == null) || (value_index >= one_row_to_export.size())) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Field not found&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(null);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Get the field value&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def Object string_value = one_row_to_export[value_index];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def Object field_value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// CFR 30/05/2022 - BPM-814 : Handle Boolean values received as a String true/false&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (string_value instanceof String) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (string_value.equals(&quot;true&quot;) || string_value.equals(&quot;false&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = Boolean.valueOf(string_value);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = string_value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;field_value = string_value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;record_values.add(field_value);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;logError(log_file, &quot;Exception getRecordValues: &quot; + e.toString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return record_values;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;executeExportOfInputData&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
                <referencedElements xmi:type="definition:Output" xmi:id="_u30iMOExEeyVL7YjxKiTEw" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_u30iMeExEeyVL7YjxKiTEw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_u30iMuExEeyVL7YjxKiTEw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_u30iM-ExEeyVL7YjxKiTEw" name="outputDirectory" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_u30iNOExEeyVL7YjxKiTEw" name="dataRowsToExport" multiple="true" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_u30iNeExEeyVL7YjxKiTEw" name="logClass" typeClassname="java.lang.String"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPr1jOEwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_RPr1jeEwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPr1juEwEeyVL7YjxKiTEw" name="errorMessage" content="errorMessage" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_RPr1j-EwEeyVL7YjxKiTEw" name="errorMessage" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPr1kOEwEeyVL7YjxKiTEw" name="getErrorMessage" content="return exportResult['errorMessage'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPr1keEwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPr1kuEwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_RPr1k-EwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPr1lOEwEeyVL7YjxKiTEw" name="documentStorageId" content="documentStorageId" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_RPr1leEwEeyVL7YjxKiTEw" name="documentStorageId" dataType="_RPscj-EwEeyVL7YjxKiTEw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPr1luEwEeyVL7YjxKiTEw" name="getDocumentStorageId" content="return exportResult['documentStorageId'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPr1l-EwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPr1mOEwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_RPr1meEwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPr1muEwEeyVL7YjxKiTEw" name="filepath" content="filepath" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_RPr1m-EwEeyVL7YjxKiTEw" name="filepath" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPr1nOEwEeyVL7YjxKiTEw" name="getExcelFilename" content="return exportResult['filePath'];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPr1neEwEeyVL7YjxKiTEw" name="exportResult" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPr1nuEwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_RPr1n-EwEeyVL7YjxKiTEw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_RPr1oOEwEeyVL7YjxKiTEw" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_RPr1oeEwEeyVL7YjxKiTEw" name="errorDetected" dataType="_RPscjOEwEeyVL7YjxKiTEw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_RPr1ouEwEeyVL7YjxKiTEw" name="checkErrorMessage" content="if (errorMessage.isEmpty()) {&#xD;&#xA;&#x9;return false;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_RPr1o-EwEeyVL7YjxKiTEw" name="errorMessage" dataType="_RPsckeEwEeyVL7YjxKiTEw"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_RPr1pOEwEeyVL7YjxKiTEw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_RPr1peEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_RPr1puEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_RPr1p-EwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_RPr1qOEwEeyVL7YjxKiTEw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_RPr1qeEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_RPr1quEwEeyVL7YjxKiTEw" name="ExportFromInputError" outgoing="_RPr2CuEwEeyVL7YjxKiTEw"/>
        </elements>
        <filters xmi:type="process:ActorFilter" xmi:id="_RPr1q-EwEeyVL7YjxKiTEw" name="initiator" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_RPr1rOEwEeyVL7YjxKiTEw" definitionId="bonita-actorfilter-initiator" version="1.0">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_RPr1reEwEeyVL7YjxKiTEw" key="autoAssign">
              <expression xmi:type="expression:Expression" xmi:id="_RPr1ruEwEeyVL7YjxKiTEw" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
            </parameters>
          </configuration>
        </filters>
      </elements>
      <data xmi:type="process:Data" xmi:id="_RPr1r-EwEeyVL7YjxKiTEw" name="errorDetected" dataType="_RPscjOEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1sOEwEeyVL7YjxKiTEw" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr1seEwEeyVL7YjxKiTEw" name="errorMessage" dataType="_RPsckeEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1suEwEeyVL7YjxKiTEw" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr1s-EwEeyVL7YjxKiTEw" name="objectName" dataType="_RPsckeEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1tOEwEeyVL7YjxKiTEw" name="contractObjectName" content="contractObjectName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr1teEwEeyVL7YjxKiTEw" name="contractObjectName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr1tuEwEeyVL7YjxKiTEw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr1t-EwEeyVL7YjxKiTEw" name="queryName" dataType="_RPsckeEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1uOEwEeyVL7YjxKiTEw" name="contractQueryName" content="contractQueryName" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr1ueEwEeyVL7YjxKiTEw" name="contractQueryName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr1uuEwEeyVL7YjxKiTEw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr1u-EwEeyVL7YjxKiTEw" name="queryCriteria" dataType="_RPsckeEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1vOEwEeyVL7YjxKiTEw" name="contractQueryCriteria" content="contractQueryCriteria" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr1veEwEeyVL7YjxKiTEw" name="contractQueryCriteria">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr1vuEwEeyVL7YjxKiTEw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr1v-EwEeyVL7YjxKiTEw" name="outputFormat" dataType="_RPsckeEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1wOEwEeyVL7YjxKiTEw" name="contractOutputFormat" content="contractOutputFormat" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr1weEwEeyVL7YjxKiTEw" name="contractOutputFormat">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr1wuEwEeyVL7YjxKiTEw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr1w-EwEeyVL7YjxKiTEw" name="pageCount" dataType="_RPscjuEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1xOEwEeyVL7YjxKiTEw" name="contractPageCount" content="contractPageCount" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr1xeEwEeyVL7YjxKiTEw" name="contractPageCount" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr1xuEwEeyVL7YjxKiTEw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr1x-EwEeyVL7YjxKiTEw" name="pageSize" dataType="_RPscjuEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1yOEwEeyVL7YjxKiTEw" name="contractPageSize" content="contractPageSize" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr1yeEwEeyVL7YjxKiTEw" name="contractPageSize" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr1yuEwEeyVL7YjxKiTEw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr1y-EwEeyVL7YjxKiTEw" name="rowsExported" dataType="_RPsckeEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr1zOEwEeyVL7YjxKiTEw" name="contractRowsExported" content="contractRowsExported" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr1zeEwEeyVL7YjxKiTEw" name="contractRowsExported">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr1zuEwEeyVL7YjxKiTEw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_RPr1z-EwEeyVL7YjxKiTEw" name="fieldsMap" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr10OEwEeyVL7YjxKiTEw" name="getFieldsMap" content="def proposition_header_fields = [&#xD;&#xA;&#x9;&quot;persistenceId&quot; : &quot;Numéro proposition&quot;,&#xD;&#xA;&#x9;&quot;typeProposition&quot; : &quot;Motif&quot;,&#xD;&#xA;&#x9;&quot;propositionStatus&quot; : &quot;Statut proposition&quot;,&#xD;&#xA;&#x9;&quot;statusMacroEtapes&quot; : &quot;Macro-statut&quot;,&#xD;&#xA;&#x9;&quot;typeWorkflow&quot; : &quot;Type de workflow&quot;,&#xD;&#xA;&#x9;&quot;budgetYear&quot; : &quot;Exercice&quot;,&#xD;&#xA;&#x9;&quot;initialBudgetYear&quot; : &quot;Exercice initial&quot;,&#xD;&#xA;&#x9;&quot;typeAcquisition&quot; : &quot;Type d'acquisition&quot;,&#xD;&#xA;&#x9;&quot;requestSource&quot; : &quot;Source de la proposition&quot;,&#xD;&#xA;&#x9;&quot;propositionAmount&quot; : &quot;Montant proposition initial&quot;,&#xD;&#xA;&#x9;&quot;actualRequestAmount&quot; : &quot;Montant proposition actualisé&quot;,&#xD;&#xA;&#x9;&quot;creationDate&quot;: &quot;Date de création&quot;,&#xD;&#xA;&#x9;&quot;creatorName&quot;: &quot;Nom du créateur&quot;,&#xD;&#xA;&#x9;&quot;agencyCode&quot;: &quot;Code de l'agence&quot;,&#xD;&#xA;&#x9;&quot;agencyName&quot; : &quot;Nom de l'agence&quot;,&#xD;&#xA;&#x9;&quot;siteCode&quot;: &quot;Code du site&quot;,&#xD;&#xA;&#x9;&quot;siteName&quot;: &quot;Nom du site&quot;,&#xD;&#xA;&#x9;&quot;sectorCode&quot;: &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;sectorName&quot; : &quot;Nom du secteur&quot;,&#xD;&#xA;&#x9;&quot;entiteCode&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;entiteName&quot; : &quot;Nom entité&quot;,&#xD;&#xA;&#x9;&quot;territoryCode&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;territoryName&quot; : &quot;Nom territoire&quot;,&#xD;&#xA;&#x9;&quot;existing&quot; : &quot;Matériel existant&quot;,&#xD;&#xA;&#x9;&quot;materialNumber&quot; : &quot;Numéro de matériel&quot;,&#xD;&#xA;&#x9;&quot;typeMaterial&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;typeMaterialName&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterial&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;subTypeMaterialName&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;generalStatusMaterial&quot; : &quot;Etat général&quot;,&#xD;&#xA;&#x9;&quot;materialFamily&quot; : &quot;Famille de matériel&quot;,&#xD;&#xA;&#x9;&quot;currentEnergyCode&quot; : &quot;Code énergie actuelle&quot;,&#xD;&#xA;&#x9;&quot;currentEnergyName&quot; : &quot;Energie actuelle&quot;,&#xD;&#xA;&#x9;&quot;futureEnergyCode&quot; : &quot;Code énergie future&quot;,&#xD;&#xA;&#x9;&quot;futureEnergyName&quot; : &quot;Energie future&quot;,&#xD;&#xA;&#x9;&quot;currentRetrofitable&quot; : &quot;Retrofitable biofuel&quot;,&#xD;&#xA;&#x9;&quot;futureRetrofitable&quot; : &quot;Retrofitable biofuel futur&quot;,&#xD;&#xA;&#x9;&quot;currentBiofuelB100&quot; : &quot;Biofuel B100&quot;,&#xD;&#xA;&#x9;&quot;futureBiofuelB100&quot; : &quot;Biofuel B100 futur&quot;,&#xD;&#xA;&#x9;&quot;currentBiofuelXTL&quot; : &quot;Biofuel XTL&quot;,&#xD;&#xA;&#x9;&quot;futureBiofuelXTL&quot; : &quot;Biofuel XTL futur&quot;,&#xD;&#xA;&#x9;&quot;isBudgetRespected&quot; : &quot;Inclus au budget&quot;,&#xD;&#xA;&#x9;&quot;commentSmart&quot; : &quot;Observation SMARTE&quot;,&#xD;&#xA;&#x9;&quot;nbMonth&quot; : &quot;Nombre de mois&quot;,&#xD;&#xA;&#x9;&quot;monthlyAmount&quot; : &quot;Mensualité&quot;,&#xD;&#xA;&#x9;&quot;monthlyPropositionAmount&quot; : &quot;Mensualité future&quot;,&#xD;&#xA;&#x9;&quot;estimatedDeliveryDate&quot; : &quot;Date de livraison prévue&quot;,&#xD;&#xA;&#x9;&quot;pitchSmart&quot; : &quot;Argumentaire SMARTE&quot;,&#xD;&#xA;&#x9;&quot;percentage&quot; : &quot;Pourcentage&quot;];&#xD;&#xA;&#xD;&#xA;def proposition_all_fields = proposition_header_fields + [&#xD;&#xA;&#x9;&quot;creatorId&quot;: &quot;Identifiant du créateur&quot;,&#xD;&#xA;&#x9;&quot;caseId&quot; : &quot;CaseId Bonita&quot;,&#xD;&#xA;&#x9;&quot;sponsor&quot; : &quot;Sponsor&quot;,&#xD;&#xA;&#x9;&quot;isIsBudgetPropositionApproved&quot;: &quot;Budget approuvé&quot;,&#xD;&#xA;&#x9;&quot;lyrePreOrderCreationStatus&quot; : &quot;Statut de création commande dans Lyre&quot;,&#xD;&#xA;&#x9;&quot;parentPropositionId&quot; : &quot;Proposition parent&quot;,&#xD;&#xA;&#x9;&quot;dddRenewChildPropositionId&quot; : &quot;Proposition DDD Renouvellement fille&quot;,&#xD;&#xA;&#x9;&quot;dddRenewStartDate&quot; : &quot;Date planifiée de DDD Renouvellement&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverName&quot; : &quot;Approbation 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].approverRole&quot; : &quot;Approbation 1-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].dateAction&quot; : &quot;Approbation 1-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].decision&quot; : &quot;Approbation 1-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[1].comments&quot; : &quot;Approbation 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverName&quot; : &quot;Approbation 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].approverRole&quot; : &quot;Approbation 2-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].dateAction&quot; : &quot;Approbation 2-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].decision&quot; : &quot;Approbation 2-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[2].comments&quot; : &quot;Approbation 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverName&quot; : &quot;Approbation 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].approverRole&quot; : &quot;Approbation 3-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].dateAction&quot; : &quot;Approbation 3-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].decision&quot; : &quot;Approbation 3-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[3].comments&quot; : &quot;Approbation 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverName&quot; : &quot;Approbation 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].approverRole&quot; : &quot;Approbation 4-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].dateAction&quot; : &quot;Approbation 4-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].decision&quot; : &quot;Approbation 4-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[4].comments&quot; : &quot;Approbation 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverName&quot; : &quot;Approbation 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].approverRole&quot; : &quot;Approbation 5-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].dateAction&quot; : &quot;Approbation 5-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].decision&quot; : &quot;Approbation 5-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[5].comments&quot; : &quot;Approbation 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverName&quot; : &quot;Approbation 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].approverRole&quot; : &quot;Approbation 6-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].dateAction&quot; : &quot;Approbation 6-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].decision&quot; : &quot;Approbation 6-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[6].comments&quot; : &quot;Approbation 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverName&quot; : &quot;Approbation 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].approverRole&quot; : &quot;Approbation 7-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].dateAction&quot; : &quot;Approbation 7-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].decision&quot; : &quot;Approbation 7-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[7].comments&quot; : &quot;Approbation 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverName&quot; : &quot;Approbation 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].approverRole&quot; : &quot;Approbation 8-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].dateAction&quot; : &quot;Approbation 8-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].decision&quot; : &quot;Approbation 8-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[8].comments&quot; : &quot;Approbation 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverName&quot; : &quot;Approbation 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].approverRole&quot; : &quot;Approbation 9-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].dateAction&quot; : &quot;Approbation 9-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].decision&quot; : &quot;Approbation 9-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[9].comments&quot; : &quot;Approbation 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverName&quot; : &quot;Approbation 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].approverRole&quot; : &quot;Approbation 10-Role approbateur&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].dateAction&quot; : &quot;Approbation 10-Date&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].decision&quot; : &quot;Approbation 10-Decision&quot;,&#xD;&#xA;&#x9;&quot;approversActions[10].comments&quot; : &quot;Approbation 10-Commentaire&quot;,&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&quot;comments[1].userName&quot;: &quot;Commentaire 1-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[1].dateAdded&quot;: &quot;Commentaire 1-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[1].userComment&quot;: &quot;Commentaire 1-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userName&quot;: &quot;Commentaire 2-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[2].dateAdded&quot;: &quot;Commentaire 2-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[2].userComment&quot;: &quot;Commentaire 2-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userName&quot;: &quot;Commentaire 3-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[3].dateAdded&quot;: &quot;Commentaire 3-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[3].userComment&quot;: &quot;Commentaire 3-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userName&quot;: &quot;Commentaire 4-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[4].dateAdded&quot;: &quot;Commentaire 4-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[4].userComment&quot;: &quot;Commentaire 4-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userName&quot;: &quot;Commentaire 5-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[5].dateAdded&quot;: &quot;Commentaire 5-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[5].userComment&quot;: &quot;Commentaire 5-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userName&quot;: &quot;Commentaire 6-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[6].dateAdded&quot;: &quot;Commentaire 6-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[6].userComment&quot;: &quot;Commentaire 6-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userName&quot;: &quot;Commentaire 7-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[7].dateAdded&quot;: &quot;Commentaire 7-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[7].userComment&quot;: &quot;Commentaire 7-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userName&quot;: &quot;Commentaire 8-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[8].dateAdded&quot;: &quot;Commentaire 8-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[8].userComment&quot;: &quot;Commentaire 8-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userName&quot;: &quot;Commentaire 9-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[9].dateAdded&quot;: &quot;Commentaire 9-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[9].userComment&quot;: &quot;Commentaire 9-Commentaire&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userName&quot;: &quot;Commentaire 10-Nom utilisateur&quot;,&#xD;&#xA;&#x9;&quot;comments[10].dateAdded&quot;: &quot;Commentaire 10-Date&quot;,&#xD;&#xA;&#x9;&quot;comments[10].userComment&quot;: &quot;Commentaire 10-Commentaire&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;def eligible_materials_all_fields = [&#xD;&#xA;&#x9;&quot;numMat&quot; : &quot;Numéro matériel&quot;,&#xD;&#xA;&#x9;&quot;codeAgence&quot; : &quot;Code agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceAffectation&quot; : &quot;Agence d'affectation&quot;,&#xD;&#xA;&#x9;&quot;causeEligibilite&quot;: &quot;Cause éligibilité&quot;,&#xD;&#xA;&#x9;&quot;genre&quot; : &quot;Code genre&quot;,&#xD;&#xA;&#x9;&quot;libelleGenre&quot; : &quot;Genre&quot;,&#xD;&#xA;&#x9;&quot;codeSousGenre&quot; : &quot;Code sous-genre&quot;,&#xD;&#xA;&#x9;&quot;libelleSousGenre&quot; : &quot;Sous-genre&quot;,&#xD;&#xA;&#x9;&quot;marque&quot; : &quot;Marque&quot;,&#xD;&#xA;&#x9;&quot;modele&quot; : &quot;Modèle&quot;,&#xD;&#xA;&#x9;&quot;typeAchat&quot; : &quot;Type achat&quot;,&#xD;&#xA;&#x9;&quot;codeEnergie&quot; : &quot;Code énergie&quot;,&#xD;&#xA;&#x9;&quot;libelleEnergie&quot; : &quot;Libellé énergie&quot;,&#xD;&#xA;&#x9;&quot;b100&quot; : &quot;Biofuel B100&quot;,&#xD;&#xA;&#x9;&quot;xtl&quot; : &quot;Biofuel XTL&quot;,&#xD;&#xA;&#x9;&quot;retrofitB100&quot; : &quot;Rétrofitable biofuel&quot;,&#xD;&#xA;&#x9;&quot;montantRetrofit&quot; : &quot;Montant rétrofit&quot;,&#xD;&#xA;&#x9;&quot;critair&quot; : &quot;Crit'Air&quot;,&#xD;&#xA;&#x9;&quot;zfe&quot; : &quot;ZFE&quot;,&#xD;&#xA;&#x9;&quot;dateEntree&quot; : &quot;Date entrée&quot;,&#xD;&#xA;&#x9;&quot;dateCirculation&quot; : &quot;Date circulation&quot;,&#xD;&#xA;&#x9;&quot;compteur&quot; : &quot;Compteur&quot;,&#xD;&#xA;&#x9;&quot;dateDbtContratLoc&quot; : &quot;Date début contrat loc&quot;,&#xD;&#xA;&#x9;&quot;dateFinContratLoc&quot; : &quot;Date fin contrat loc&quot;,&#xD;&#xA;&#x9;&quot;valeurAchat&quot; : &quot;Valeur d'achat&quot;,&#xD;&#xA;&#x9;&quot;coutsSAVTotal&quot; : &quot;Coût SAV total&quot;,&#xD;&#xA;&#x9;&quot;engagementReprise&quot; : &quot;Engagement reprise&quot;,&#xD;&#xA;&#x9;&quot;loyerFinancementMensuel&quot; : &quot;Loyer financement mensuel&quot;,&#xD;&#xA;&#x9;&quot;codeTerritoire&quot; : &quot;Code territoire&quot;,&#xD;&#xA;&#x9;&quot;libelleTerritoire&quot; : &quot;Territoire&quot;,&#xD;&#xA;&#x9;&quot;codeEntite&quot; : &quot;Code entité&quot;,&#xD;&#xA;&#x9;&quot;libelleEntite&quot; : &quot;Entité&quot;,&#xD;&#xA;&#x9;&quot;codeRegion&quot; : &quot;Code région&quot;,&#xD;&#xA;&#x9;&quot;libelleRegion&quot; : &quot;Région&quot;,&#xD;&#xA;&#x9;&quot;codeSecteur&quot; : &quot;Code secteur&quot;,&#xD;&#xA;&#x9;&quot;libelleSecteur&quot; : &quot;Secteur&quot;,&#xD;&#xA;&#x9;&quot;codeSite&quot; : &quot;Code site&quot;,&#xD;&#xA;&#x9;&quot;libelleSite&quot; : &quot;Site&quot;,&#xD;&#xA;&#x9;&quot;codeAgenceLoc&quot; : &quot;Code agence de localisation&quot;,&#xD;&#xA;&#x9;&quot;libelleAgenceLoc&quot; : &quot;Agence de localisation&quot;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;return [&#xD;&#xA;&quot;searchPropositions&quot;:&#xD;&#xA;&#x9;[&quot;ALL_FIELDS&quot;: proposition_header_fields, //FOR ALL: proposition_all_fields,&#xD;&#xA;&#x9; &quot;HEADER_FIELDS&quot; : proposition_header_fields&#xD;&#xA;&#x9;],&#xD;&#xA;&quot;eligibleMaterials&quot;:&#xD;&#xA;&#x9;[&#xD;&#xA;&#x9;&#x9;&quot;ALL_FIELDS&quot;: eligible_materials_all_fields&#xD;&#xA;&#x9;]&#xD;&#xA;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr10eEwEeyVL7YjxKiTEw" name="applicationPage" dataType="_RPsckeEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr10uEwEeyVL7YjxKiTEw" name="contractApplicationPage" content="contractApplicationPage" type="TYPE_CONTRACT_INPUT">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr10-EwEeyVL7YjxKiTEw" name="contractApplicationPage">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr11OEwEeyVL7YjxKiTEw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_RPr11eEwEeyVL7YjxKiTEw" name="bdm_object" multiple="true" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.lang.Object">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr11uEwEeyVL7YjxKiTEw" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr11-EwEeyVL7YjxKiTEw" name="documentStorageId" dataType="_RPscj-EwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr12OEwEeyVL7YjxKiTEw" content="" returnType="java.lang.Long"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr12eEwEeyVL7YjxKiTEw" name="filepath" dataType="_RPsckeEwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr12uEwEeyVL7YjxKiTEw" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_RPr12-EwEeyVL7YjxKiTEw" name="queryListIds" multiple="true" dataType="_RPscj-EwEeyVL7YjxKiTEw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr13OEwEeyVL7YjxKiTEw" name="init_queryListIds()" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def List&lt;Long> persistence_ids_list = [];&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;for (int i=0; i&lt;contractQueryListIds.size(); i++) {&#xD;&#xA;&#x9;&#x9;def Long long_value = Long.valueOf(contractQueryListIds[i]);&#xD;&#xA;&#x9;&#x9;persistence_ids_list.add(long_value);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_queryListIds&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return persistence_ids_list;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr13eEwEeyVL7YjxKiTEw" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr13uEwEeyVL7YjxKiTEw"/>
          </referencedElements>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_RPr13-EwEeyVL7YjxKiTEw" name="logClass" typeClassname="java.lang.String"/>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_RPr14OEwEeyVL7YjxKiTEw" name="dataRowsToExport" multiple="true" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_RPr14eEwEeyVL7YjxKiTEw" name="contractExportDataRows" content="contractExportDataRows" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_RPr14uEwEeyVL7YjxKiTEw" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPr14-EwEeyVL7YjxKiTEw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_RPr15OEwEeyVL7YjxKiTEw">
        <targetForm xmi:type="expression:Expression" xmi:id="_RPr15eEwEeyVL7YjxKiTEw" name="ExportDataForm" content="19410973-849c-4315-a1c1-347402af24b6" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_RPr15uEwEeyVL7YjxKiTEw" type="NONE">
        <targetForm xmi:type="expression:Expression" xmi:id="_RPr15-EwEeyVL7YjxKiTEw" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr16OEwEeyVL7YjxKiTEw" target="_RPp_9-EwEeyVL7YjxKiTEw" source="_RPp_8-EwEeyVL7YjxKiTEw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr16eEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr16uEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr16-EwEeyVL7YjxKiTEw" name="OK" target="_RPr1J-EwEeyVL7YjxKiTEw" source="_RPr1aOEwEeyVL7YjxKiTEw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr17OEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr17eEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr17uEwEeyVL7YjxKiTEw" target="_RPr1R-EwEeyVL7YjxKiTEw" source="_RPr1J-EwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr17-EwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr18OEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr18eEwEeyVL7YjxKiTEw" target="_RPr1N-EwEeyVL7YjxKiTEw" source="_RPr1JuEwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr18uEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr18-EwEeyVL7YjxKiTEw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr19OEwEeyVL7YjxKiTEw" target="_RPr1YOEwEeyVL7YjxKiTEw" source="_RPr1N-EwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr19eEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr19uEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr19-EwEeyVL7YjxKiTEw" name="Error" target="_RPr1N-EwEeyVL7YjxKiTEw" source="_RPr1aOEwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr1-OEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr1-eEwEeyVL7YjxKiTEw" name="errorDetected" content="errorDetected" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_RPr1-uEwEeyVL7YjxKiTEw" name="errorDetected" dataType="_RPscjOEwEeyVL7YjxKiTEw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr1--EwEeyVL7YjxKiTEw" target="_RPr1ZOEwEeyVL7YjxKiTEw" source="_RPr1R-EwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr1_OEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr1_eEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr1_uEwEeyVL7YjxKiTEw" target="_RPr1R-EwEeyVL7YjxKiTEw" source="_RPr1MOEwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr1_-EwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr2AOEwEeyVL7YjxKiTEw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr2AeEwEeyVL7YjxKiTEw" target="_RPr1YOEwEeyVL7YjxKiTEw" source="_RPr1QeEwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr2AuEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr2A-EwEeyVL7YjxKiTEw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr2BOEwEeyVL7YjxKiTEw" target="_RPr1aOEwEeyVL7YjxKiTEw" source="_RPp_9-EwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr2BeEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr2BuEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr2B-EwEeyVL7YjxKiTEw" target="_RPr1aOEwEeyVL7YjxKiTEw" source="_RPr1bOEwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr2COEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr2CeEwEeyVL7YjxKiTEw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr2CuEwEeyVL7YjxKiTEw" target="_RPr1N-EwEeyVL7YjxKiTEw" source="_RPr1quEwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr2C-EwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr2DOEwEeyVL7YjxKiTEw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_RPr2DeEwEeyVL7YjxKiTEw" name="Has input data" target="_RPr1bOEwEeyVL7YjxKiTEw" source="_RPp_8-EwEeyVL7YjxKiTEw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_RPr2DuEwEeyVL7YjxKiTEw"/>
        <condition xmi:type="expression:Expression" xmi:id="_RPr2D-EwEeyVL7YjxKiTEw" name="hasRowsToExport" content="return (dataRowsToExport.size() > 0) ? true : false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:JavaObjectData" xmi:id="_RPr2EOEwEeyVL7YjxKiTEw" name="dataRowsToExport" multiple="true" dataType="_RPsckuEwEeyVL7YjxKiTEw" className="java.util.Map"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_RPr2EeEwEeyVL7YjxKiTEw" name="ExportUser" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_RPr2EuEwEeyVL7YjxKiTEw" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_RPr2E-EwEeyVL7YjxKiTEw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_RPr2FOEwEeyVL7YjxKiTEw" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_RPr2FeEwEeyVL7YjxKiTEw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_RPr2FuEwEeyVL7YjxKiTEw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_RPr2F-EwEeyVL7YjxKiTEw">
              <role>pop3pAppprover</role>
              <role>pop3pReadOnly</role>
              <role>user</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_RPr2GOEwEeyVL7YjxKiTEw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_RPr2GeEwEeyVL7YjxKiTEw" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_RPr2GuEwEeyVL7YjxKiTEw" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2G-EwEeyVL7YjxKiTEw" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_RPr2HOEwEeyVL7YjxKiTEw" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2HeEwEeyVL7YjxKiTEw" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2HuEwEeyVL7YjxKiTEw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_I89gwIEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_I9tHoIEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2IeEwEeyVL7YjxKiTEw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2IuEwEeyVL7YjxKiTEw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2I-EwEeyVL7YjxKiTEw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2JOEwEeyVL7YjxKiTEw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2JeEwEeyVL7YjxKiTEw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2JuEwEeyVL7YjxKiTEw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2J-EwEeyVL7YjxKiTEw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2KOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2KeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2KuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2K-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2LOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2LeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2LuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2L-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2MOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2MeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2MuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2M-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2NOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2NeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2NuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2N-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2OOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2OeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2OuEwEeyVL7YjxKiTEw" id="OTHER">
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2O-EwEeyVL7YjxKiTEw" key="poi-4.0.0.jar" value="poi-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2POEwEeyVL7YjxKiTEw" key="poi-ooxml-4.0.0.jar" value="poi-ooxml-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2PeEwEeyVL7YjxKiTEw" key="poi-scratchpad-4.0.0.jar" value="poi-scratchpad-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2PuEwEeyVL7YjxKiTEw" key="xmlbeans-2.6.0.jar" value="xmlbeans-2.6.0.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2P-EwEeyVL7YjxKiTEw" key="commons-collections4-4.2.jar" value="commons-collections4-4.2.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2QOEwEeyVL7YjxKiTEw" key="commons-compress-1.21.jar" value="commons-compress-1.21.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2QeEwEeyVL7YjxKiTEw" key="poi-ooxml-schemas-4.0.0.jar" value="poi-ooxml-schemas-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2QuEwEeyVL7YjxKiTEw" key="commons-codec-1.11.jar" value="commons-codec-1.11.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2Q-EwEeyVL7YjxKiTEw" key="commons-logging-1.2.jar" value="commons-logging-1.2.jar" exported="false" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2ROEwEeyVL7YjxKiTEw" key="commons-math3-3.6.1.jar" value="commons-math3-3.6.1.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2ReEwEeyVL7YjxKiTEw" key="curvesapi-1.05.jar" value="curvesapi-1.05.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2RuEwEeyVL7YjxKiTEw" key="xmlbeans-3.0.1.jar" value="xmlbeans-3.0.1.jar" type="JAR"/>
        </processDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2R-EwEeyVL7YjxKiTEw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2SOEwEeyVL7YjxKiTEw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2SeEwEeyVL7YjxKiTEw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2SuEwEeyVL7YjxKiTEw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2S-EwEeyVL7YjxKiTEw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2TOEwEeyVL7YjxKiTEw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2TeEwEeyVL7YjxKiTEw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2TuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2T-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2UOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2UeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2UuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2U-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2VOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2VeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2VuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2V-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2WOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2WeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2WuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2W-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2XOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2XeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2XuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2X-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2YOEwEeyVL7YjxKiTEw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPr2YeEwEeyVL7YjxKiTEw" name="logClass" value="ExportDataToExcel" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPr2YuEwEeyVL7YjxKiTEw" name="formatAllRowsExported" value="ALL" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPr2Y-EwEeyVL7YjxKiTEw" name="queryAllPageSize" value="500" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPr2ZOEwEeyVL7YjxKiTEw" name="maximumNumberOfQueriedPages" value="1000" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPr2ZeEwEeyVL7YjxKiTEw" name="outputDirectory" value="/tmp" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPr2ZuEwEeyVL7YjxKiTEw" name="delayBeforeCaseCompletionInMinutes" value="5" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPr2Z-EwEeyVL7YjxKiTEw" name="excelDateFormat" value="dd/mm/yyyy" typeClassname="java.lang.String"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_RPr2aOEwEeyVL7YjxKiTEw" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_RPr2aeEwEeyVL7YjxKiTEw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_RPr2auEwEeyVL7YjxKiTEw" name="ExportUser">
            <groups xmi:type="actormapping:Groups" xmi:id="_RPr2a-EwEeyVL7YjxKiTEw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_RPr2bOEwEeyVL7YjxKiTEw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_RPr2beEwEeyVL7YjxKiTEw"/>
            <users xmi:type="actormapping:Users" xmi:id="_RPr2buEwEeyVL7YjxKiTEw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_RPr2b-EwEeyVL7YjxKiTEw" type="ACTOR_FILTER" definitionId="bonita-actorfilter-initiator" definitionVersion="1.0" implementationId="bonita-actorfilter-initiator-impl" implementationVersion="1.0.0"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_RPr2cOEwEeyVL7YjxKiTEw" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2ceEwEeyVL7YjxKiTEw" id="ACTOR_FILTER">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_RPr2cuEwEeyVL7YjxKiTEw" id="bonita-actorfilter-initiator-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2c-EwEeyVL7YjxKiTEw" key="bonita-actorfilter-initiator-impl -- 1.0.0" value="bonita-actorfilter-initiator-1.0.0.jar" type="ACTOR_FILTER"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2dOEwEeyVL7YjxKiTEw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_I-lRYIEwEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_I_TqIIEwEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2d-EwEeyVL7YjxKiTEw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2eOEwEeyVL7YjxKiTEw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2eeEwEeyVL7YjxKiTEw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2euEwEeyVL7YjxKiTEw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2e-EwEeyVL7YjxKiTEw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2fOEwEeyVL7YjxKiTEw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2feEwEeyVL7YjxKiTEw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2fuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2f-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2gOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2geEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2guEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2g-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2hOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2heEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2huEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2h-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2iOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2ieEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2iuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2i-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2jOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2jeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2juEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2j-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2kOEwEeyVL7YjxKiTEw" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPr2keEwEeyVL7YjxKiTEw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2kuEwEeyVL7YjxKiTEw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2k-EwEeyVL7YjxKiTEw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPr2lOEwEeyVL7YjxKiTEw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscMOEwEeyVL7YjxKiTEw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscMeEwEeyVL7YjxKiTEw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscMuEwEeyVL7YjxKiTEw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscM-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscNOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscNeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscNuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscN-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscOOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscOeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscOuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscO-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscPOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscPeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscPuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscP-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscQOEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscQeEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscQuEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscQ-EwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_RPscROEwEeyVL7YjxKiTEw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_RPscReEwEeyVL7YjxKiTEw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPscRuEwEeyVL7YjxKiTEw" name="logClass" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPscR-EwEeyVL7YjxKiTEw" name="formatAllRowsExported" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPscSOEwEeyVL7YjxKiTEw" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPscSeEwEeyVL7YjxKiTEw" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPscSuEwEeyVL7YjxKiTEw" name="outputDirectory" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPscS-EwEeyVL7YjxKiTEw" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_RPscTOEwEeyVL7YjxKiTEw" name="excelDateFormat" typeClassname="java.lang.String"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_RPscTeEwEeyVL7YjxKiTEw" name="logClass" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_RPscTuEwEeyVL7YjxKiTEw" name="formatAllRowsExported" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_RPscT-EwEeyVL7YjxKiTEw" name="queryAllPageSize" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_RPscUOEwEeyVL7YjxKiTEw" name="maximumNumberOfQueriedPages" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_RPscUeEwEeyVL7YjxKiTEw" name="outputDirectory" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_RPscUuEwEeyVL7YjxKiTEw" name="delayBeforeCaseCompletionInMinutes" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_RPscU-EwEeyVL7YjxKiTEw" name="excelDateFormat" typeClassname="java.lang.String"/>
      <contract xmi:type="process:Contract" xmi:id="_RPscVOEwEeyVL7YjxKiTEw">
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscVeEwEeyVL7YjxKiTEw" name="contractObjectName" description="BDM Object name for a BDM Query, or name of main object exported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscVuEwEeyVL7YjxKiTEw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscV-EwEeyVL7YjxKiTEw" name="contractQueryName" description="BDM Query name for a BDM Query, empty otherwise">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscWOEwEeyVL7YjxKiTEw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscWeEwEeyVL7YjxKiTEw" name="contractQueryCriteria" description="BDM Query criteria for a BDM Query, empty if contractExportDataRows is provided">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscWuEwEeyVL7YjxKiTEw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscW-EwEeyVL7YjxKiTEw" name="contractOutputFormat">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscXOEwEeyVL7YjxKiTEw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscXeEwEeyVL7YjxKiTEw" name="contractRowsExported">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscXuEwEeyVL7YjxKiTEw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscX-EwEeyVL7YjxKiTEw" name="contractPageCount" type="INTEGER" description="Page number for a BDM query, starting at 0">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscYOEwEeyVL7YjxKiTEw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscYeEwEeyVL7YjxKiTEw" name="contractPageSize" type="INTEGER" description="Maximum number of rows">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscYuEwEeyVL7YjxKiTEw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscY-EwEeyVL7YjxKiTEw" name="contractApplicationPage">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscZOEwEeyVL7YjxKiTEw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscZeEwEeyVL7YjxKiTEw" name="contractQueryListIds" description="List of PersistenceIds to be queried" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscZuEwEeyVL7YjxKiTEw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_RPscZ-EwEeyVL7YjxKiTEw" name="contractExportDataRows" type="COMPLEX" description="List : 0 record=no data, 1 record= data to export" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscaOEwEeyVL7YjxKiTEw"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_RPscaeEwEeyVL7YjxKiTEw" name="fieldNames" description="List of field names" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscauEwEeyVL7YjxKiTEw"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_RPsca-EwEeyVL7YjxKiTEw" name="name">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscbOEwEeyVL7YjxKiTEw"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_RPscbeEwEeyVL7YjxKiTEw" name="value">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscbuEwEeyVL7YjxKiTEw"/>
            </inputs>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_RPscb-EwEeyVL7YjxKiTEw" name="records" type="COMPLEX" description="List of records" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPsccOEwEeyVL7YjxKiTEw"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_RPscceEwEeyVL7YjxKiTEw" name="values" description="List of values of each record" multiple="true">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPsccuEwEeyVL7YjxKiTEw"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_RPscc-EwEeyVL7YjxKiTEw" name="textValue">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscdOEwEeyVL7YjxKiTEw"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_RPscdeEwEeyVL7YjxKiTEw" name="boolValue" type="BOOLEAN">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPscduEwEeyVL7YjxKiTEw"/>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_RPscd-EwEeyVL7YjxKiTEw" name="dateValue" type="LOCALDATE">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_RPsceOEwEeyVL7YjxKiTEw"/>
              </inputs>
            </inputs>
          </inputs>
        </inputs>
      </contract>
      <documents xmi:type="process:Document" xmi:id="_RPsceeEwEeyVL7YjxKiTEw" name="exportFile">
        <mimeType xmi:type="expression:Expression" xmi:id="_RPsceuEwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_RPsce-EwEeyVL7YjxKiTEw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_RPscfOEwEeyVL7YjxKiTEw" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_RPscfeEwEeyVL7YjxKiTEw">
        <name xmi:type="expression:Expression" xmi:id="_RPscfuEwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_RPscf-EwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_RPscgOEwEeyVL7YjxKiTEw">
        <name xmi:type="expression:Expression" xmi:id="_RPscgeEwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_RPscguEwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_RPscg-EwEeyVL7YjxKiTEw">
        <name xmi:type="expression:Expression" xmi:id="_RPschOEwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_RPscheEwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_RPschuEwEeyVL7YjxKiTEw">
        <name xmi:type="expression:Expression" xmi:id="_RPsch-EwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_RPsciOEwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_RPscieEwEeyVL7YjxKiTEw">
        <name xmi:type="expression:Expression" xmi:id="_RPsciuEwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_RPsci-EwEeyVL7YjxKiTEw" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_RPscjOEwEeyVL7YjxKiTEw" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_RPscjeEwEeyVL7YjxKiTEw" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_RPscjuEwEeyVL7YjxKiTEw" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_RPscj-EwEeyVL7YjxKiTEw" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_RPsckOEwEeyVL7YjxKiTEw" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_RPsckeEwEeyVL7YjxKiTEw" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_RPsckuEwEeyVL7YjxKiTEw" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_RPsck-EwEeyVL7YjxKiTEw" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_RPsclOEwEeyVL7YjxKiTEw" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_RPscleEwEeyVL7YjxKiTEw" type="Process" element="_RPp_8OEwEeyVL7YjxKiTEw" name="MonDiagramme1" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_RPscluEwEeyVL7YjxKiTEw" type="2007" element="_RPp_8eEwEeyVL7YjxKiTEw">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPscl-EwEeyVL7YjxKiTEw" type="5008" element="_RPp_8eEwEeyVL7YjxKiTEw"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_RPscmOEwEeyVL7YjxKiTEw" type="7001" element="_RPp_8eEwEeyVL7YjxKiTEw">
        <children xmi:type="notation:Node" xmi:id="_RPscmeEwEeyVL7YjxKiTEw" type="3007" element="_RPp_8uEwEeyVL7YjxKiTEw">
          <children xmi:type="notation:DecorationNode" xmi:id="_RPscmuEwEeyVL7YjxKiTEw" type="5007" element="_RPp_8uEwEeyVL7YjxKiTEw"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_RPscm-EwEeyVL7YjxKiTEw" type="7002" element="_RPp_8uEwEeyVL7YjxKiTEw">
            <children xmi:type="notation:Shape" xmi:id="_RPscnOEwEeyVL7YjxKiTEw" type="3002" element="_RPp_8-EwEeyVL7YjxKiTEw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_RPscneEwEeyVL7YjxKiTEw" type="5024" element="_RPp_8-EwEeyVL7YjxKiTEw">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_RPscnuEwEeyVL7YjxKiTEw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscn-EwEeyVL7YjxKiTEw" x="60" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_RPscoOEwEeyVL7YjxKiTEw" type="3027" element="_RPp_9-EwEeyVL7YjxKiTEw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_RPscoeEwEeyVL7YjxKiTEw" type="5017" element="_RPp_9-EwEeyVL7YjxKiTEw"/>
              <children xmi:type="notation:Shape" xmi:id="_RPscouEwEeyVL7YjxKiTEw" type="3032" element="_RPr1JuEwEeyVL7YjxKiTEw" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_RPsco-EwEeyVL7YjxKiTEw" type="5062" element="_RPr1JuEwEeyVL7YjxKiTEw">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_RPscpOEwEeyVL7YjxKiTEw" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscpeEwEeyVL7YjxKiTEw" x="91" y="52"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscpuEwEeyVL7YjxKiTEw" x="160" y="60" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_RPscp-EwEeyVL7YjxKiTEw" type="3005" element="_RPr1J-EwEeyVL7YjxKiTEw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_RPscqOEwEeyVL7YjxKiTEw" type="5005" element="_RPr1J-EwEeyVL7YjxKiTEw"/>
              <children xmi:type="notation:Shape" xmi:id="_RPscqeEwEeyVL7YjxKiTEw" type="3043" element="_RPr1MOEwEeyVL7YjxKiTEw" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_RPscquEwEeyVL7YjxKiTEw" type="5055" element="_RPr1MOEwEeyVL7YjxKiTEw">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_RPscq-EwEeyVL7YjxKiTEw" x="77" y="-38"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscrOEwEeyVL7YjxKiTEw" x="44" y="-17"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscreEwEeyVL7YjxKiTEw" x="501" y="54" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_RPscruEwEeyVL7YjxKiTEw" type="3005" element="_RPr1N-EwEeyVL7YjxKiTEw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_RPscr-EwEeyVL7YjxKiTEw" type="5005" element="_RPr1N-EwEeyVL7YjxKiTEw"/>
              <children xmi:type="notation:Shape" xmi:id="_RPscsOEwEeyVL7YjxKiTEw" type="3043" element="_RPr1QeEwEeyVL7YjxKiTEw" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_RPscseEwEeyVL7YjxKiTEw" type="5055" element="_RPr1QeEwEeyVL7YjxKiTEw">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_RPscsuEwEeyVL7YjxKiTEw" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscs-EwEeyVL7YjxKiTEw"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPsctOEwEeyVL7YjxKiTEw" x="498" y="138" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_RPscteEwEeyVL7YjxKiTEw" type="3027" element="_RPr1R-EwEeyVL7YjxKiTEw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_RPsctuEwEeyVL7YjxKiTEw" type="5017" element="_RPr1R-EwEeyVL7YjxKiTEw"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPsct-EwEeyVL7YjxKiTEw" x="688" y="56" width="124" height="62"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_RPscuOEwEeyVL7YjxKiTEw" type="3062" element="_RPr1YOEwEeyVL7YjxKiTEw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_RPscueEwEeyVL7YjxKiTEw" type="5090" element="_RPr1YOEwEeyVL7YjxKiTEw">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_RPscuuEwEeyVL7YjxKiTEw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscu-EwEeyVL7YjxKiTEw" x="840" y="165" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_RPscvOEwEeyVL7YjxKiTEw" type="3062" element="_RPr1ZOEwEeyVL7YjxKiTEw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_RPscveEwEeyVL7YjxKiTEw" type="5090" element="_RPr1ZOEwEeyVL7YjxKiTEw">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_RPscvuEwEeyVL7YjxKiTEw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscv-EwEeyVL7YjxKiTEw" x="855" y="72" width="30" height="30"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_RPscwOEwEeyVL7YjxKiTEw" type="3008" element="_RPr1aOEwEeyVL7YjxKiTEw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_RPscweEwEeyVL7YjxKiTEw" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_RPscwuEwEeyVL7YjxKiTEw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscw-EwEeyVL7YjxKiTEw" x="327" y="103"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_RPscxOEwEeyVL7YjxKiTEw" type="3027" element="_RPr1bOEwEeyVL7YjxKiTEw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_RPscxeEwEeyVL7YjxKiTEw" type="5017" element="_RPr1bOEwEeyVL7YjxKiTEw"/>
              <children xmi:type="notation:Shape" xmi:id="_RPscxuEwEeyVL7YjxKiTEw" type="3032" element="_RPr1quEwEeyVL7YjxKiTEw" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_RPscx-EwEeyVL7YjxKiTEw" type="5062" element="_RPr1quEwEeyVL7YjxKiTEw">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_RPscyOEwEeyVL7YjxKiTEw" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscyeEwEeyVL7YjxKiTEw" x="250" y="215"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscyuEwEeyVL7YjxKiTEw" x="160" y="198" width="120" height="60"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_RPscy-EwEeyVL7YjxKiTEw"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_RPsczOEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_RPsczeEwEeyVL7YjxKiTEw"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_RPsczuEwEeyVL7YjxKiTEw"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPscz-EwEeyVL7YjxKiTEw" x="23" y="10" width="1657" height="343"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_RPsc0OEwEeyVL7YjxKiTEw"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsc0eEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_RPsc0uEwEeyVL7YjxKiTEw"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_RPsc0-EwEeyVL7YjxKiTEw"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_RPsc1OEwEeyVL7YjxKiTEw" width="1680" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_RPsc1eEwEeyVL7YjxKiTEw"/>
    <edges xmi:type="notation:Connector" xmi:id="_RPsc1uEwEeyVL7YjxKiTEw" type="4001" element="_RPr16OEwEeyVL7YjxKiTEw" source="_RPscnOEwEeyVL7YjxKiTEw" target="_RPscoOEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsc1-EwEeyVL7YjxKiTEw" type="6001" element="_RPr16OEwEeyVL7YjxKiTEw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsc2OEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsc2eEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsc2uEwEeyVL7YjxKiTEw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsc2-EwEeyVL7YjxKiTEw" type="4001" element="_RPr16-EwEeyVL7YjxKiTEw" source="_RPscwOEwEeyVL7YjxKiTEw" target="_RPscp-EwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsc3OEwEeyVL7YjxKiTEw" type="6001" element="_RPr16-EwEeyVL7YjxKiTEw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsc3eEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsc3uEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsc3-EwEeyVL7YjxKiTEw" points="[-12, -26, -174, 24]$[-12, -44, -174, 6]$[141, -44, -21, 6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsc4OEwEeyVL7YjxKiTEw" id="(0.7674418604651163,0.6046511627906976)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsc4eEwEeyVL7YjxKiTEw" id="(0.18421052631578946,0.43859649122807015)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsc4uEwEeyVL7YjxKiTEw" type="4001" element="_RPr17uEwEeyVL7YjxKiTEw" source="_RPscp-EwEeyVL7YjxKiTEw" target="_RPscteEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsc4-EwEeyVL7YjxKiTEw" type="6001" element="_RPr17uEwEeyVL7YjxKiTEw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsc5OEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsc5eEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsc5uEwEeyVL7YjxKiTEw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsc5-EwEeyVL7YjxKiTEw" type="4001" element="_RPr18eEwEeyVL7YjxKiTEw" source="_RPscouEwEeyVL7YjxKiTEw" target="_RPscruEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsc6OEwEeyVL7YjxKiTEw" type="6001" element="_RPr18eEwEeyVL7YjxKiTEw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsc6eEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsc6uEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsc6-EwEeyVL7YjxKiTEw" points="[0, 0, -157, -40]$[147, 41, -10, 1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsc7OEwEeyVL7YjxKiTEw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsc7eEwEeyVL7YjxKiTEw" id="(0.08771929824561403,0.631578947368421)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsc7uEwEeyVL7YjxKiTEw" type="4001" element="_RPr19OEwEeyVL7YjxKiTEw" source="_RPscruEwEeyVL7YjxKiTEw" target="_RPscuOEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsc7-EwEeyVL7YjxKiTEw" type="6001" element="_RPr19OEwEeyVL7YjxKiTEw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsc8OEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsc8eEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsc8uEwEeyVL7YjxKiTEw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsc8-EwEeyVL7YjxKiTEw" type="4001" element="_RPr19-EwEeyVL7YjxKiTEw" source="_RPscwOEwEeyVL7YjxKiTEw" target="_RPscruEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsc9OEwEeyVL7YjxKiTEw" type="6001" element="_RPr19-EwEeyVL7YjxKiTEw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsc9eEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsc9uEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsc9-EwEeyVL7YjxKiTEw" points="[0, 4, -120, -35]$[0, 39, -120, 0]$[120, 39, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsc-OEwEeyVL7YjxKiTEw" id="(0.7674418604651163,0.20930232558139536)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsc-eEwEeyVL7YjxKiTEw" id="(0.0,0.24561403508771928)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsc-uEwEeyVL7YjxKiTEw" type="4001" element="_RPr1--EwEeyVL7YjxKiTEw" source="_RPscteEwEeyVL7YjxKiTEw" target="_RPscvOEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsc--EwEeyVL7YjxKiTEw" type="6001" element="_RPr1--EwEeyVL7YjxKiTEw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsc_OEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsc_eEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsc_uEwEeyVL7YjxKiTEw" points="[0, -3, -98, 0]$[92, -5, -6, -2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsc_-EwEeyVL7YjxKiTEw" id="(1.0,0.4838709677419355)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdAOEwEeyVL7YjxKiTEw" id="(0.2,0.43333333333333335)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsdAeEwEeyVL7YjxKiTEw" type="4001" element="_RPr1_uEwEeyVL7YjxKiTEw" source="_RPscqeEwEeyVL7YjxKiTEw" target="_RPscteEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsdAuEwEeyVL7YjxKiTEw" type="6001" element="_RPr1_uEwEeyVL7YjxKiTEw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsdA-EwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsdBOEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsdBeEwEeyVL7YjxKiTEw" points="[0, -25, -213, -49]$[0, -48, -213, -72]$[257, -48, 44, -72]$[257, -8, 44, -32]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdBuEwEeyVL7YjxKiTEw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdB-EwEeyVL7YjxKiTEw" id="(0.14516129032258066,0.5161290322580645)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsdCOEwEeyVL7YjxKiTEw" type="4001" element="_RPr2AeEwEeyVL7YjxKiTEw" source="_RPscsOEwEeyVL7YjxKiTEw" target="_RPscuOEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsdCeEwEeyVL7YjxKiTEw" type="6001" element="_RPr2AeEwEeyVL7YjxKiTEw">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsdCuEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsdC-EwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsdDOEwEeyVL7YjxKiTEw" points="[0, -2, -163, 43]$[163, -2, 0, 43]$[163, -31, 0, 14]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdDeEwEeyVL7YjxKiTEw" id="(1.0,1.0)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsdDuEwEeyVL7YjxKiTEw" type="4001" element="_RPr2BOEwEeyVL7YjxKiTEw" source="_RPscoOEwEeyVL7YjxKiTEw" target="_RPscwOEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsdD-EwEeyVL7YjxKiTEw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsdEOEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsdEeEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsdEuEwEeyVL7YjxKiTEw" points="[0, 6, -52, -33]$[28, 6, -24, -33]$[28, 33, -24, -6]$[47, 33, -5, -6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdE-EwEeyVL7YjxKiTEw" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdFOEwEeyVL7YjxKiTEw" id="(0.11627906976744186,0.627906976744186)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsdFeEwEeyVL7YjxKiTEw" type="4001" element="_RPr2B-EwEeyVL7YjxKiTEw" source="_RPscxOEwEeyVL7YjxKiTEw" target="_RPscwOEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsdFuEwEeyVL7YjxKiTEw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsdF-EwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsdGOEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsdGeEwEeyVL7YjxKiTEw" points="[0, -2, -56, 94]$[28, -2, -28, 94]$[28, -96, -28, 0]$[55, -96, -1, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdGuEwEeyVL7YjxKiTEw" id="(1.0,0.5166666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdG-EwEeyVL7YjxKiTEw" id="(0.20930232558139536,0.6976744186046512)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsdHOEwEeyVL7YjxKiTEw" type="4001" element="_RPr2CuEwEeyVL7YjxKiTEw" source="_RPscxuEwEeyVL7YjxKiTEw" target="_RPscruEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsdHeEwEeyVL7YjxKiTEw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsdHuEwEeyVL7YjxKiTEw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsdH-EwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsdIOEwEeyVL7YjxKiTEw" points="[0, -13, -230, 75]$[97, -13, -133, 75]$[97, -96, -133, -8]$[226, -96, -4, -8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdIeEwEeyVL7YjxKiTEw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdIuEwEeyVL7YjxKiTEw" id="(0.03508771929824561,0.8596491228070176)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_RPsdI-EwEeyVL7YjxKiTEw" type="4001" element="_RPr2DeEwEeyVL7YjxKiTEw" source="_RPscnOEwEeyVL7YjxKiTEw" target="_RPscxOEwEeyVL7YjxKiTEw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_RPsdJOEwEeyVL7YjxKiTEw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_RPsdJeEwEeyVL7YjxKiTEw" x="14" y="-44"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_RPsdJuEwEeyVL7YjxKiTEw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_RPsdJ-EwEeyVL7YjxKiTEw" points="[-15, -1, -89, -139]$[-15, 129, -89, -9]$[70, 129, -4, -9]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdKOEwEeyVL7YjxKiTEw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_RPsdKeEwEeyVL7YjxKiTEw" id="(0.03333333333333333,0.6333333333333333)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
