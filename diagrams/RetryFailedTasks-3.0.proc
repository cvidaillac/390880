<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_q2wZAN_yEeuQRohrGBPGsA" name="RetryFailedTasks" version="3.0" author="A1342495" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004" configId="ACED000574002052657472794661696C65645461736B73372E382E332D303031372E382E347370">
    <elements xmi:type="process:Pool" xmi:id="_q2wZAd_yEeuQRohrGBPGsA" name="MonitorFailedTasks" version="3.0">
      <elements xmi:type="process:Lane" xmi:id="_q2wZAt_yEeuQRohrGBPGsA" name="Service Lane" actor="_q2xBtd_yEeuQRohrGBPGsA">
        <elements xmi:type="process:StartEvent" xmi:id="_q2wZA9_yEeuQRohrGBPGsA" name="Manual Start" outgoing="_q2xBbd_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2wZBN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2wZBd_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2wZBt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2wZB9_yEeuQRohrGBPGsA" name="Set Manual Start" outgoing="_q2xBcN_yEeuQRohrGBPGsA" incoming="_q2xBbd_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2wZCN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2wZCd_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2wZCt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <operations xmi:type="expression:Operation" xmi:id="_q2wZC9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2wZDN_yEeuQRohrGBPGsA" name="manualStart" content="manualStart" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
              <referencedElements xmi:type="process:Data" xmi:id="_q2wZDd_yEeuQRohrGBPGsA" name="manualStart" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2wZDt_yEeuQRohrGBPGsA" name="true" content="true" returnType="java.lang.Boolean"/>
            <operator xmi:type="expression:Operator" xmi:id="_q2wZD9_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2wZEN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2wZEd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2wZEt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2wZE9_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2wZFN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:StartTimerEvent" xmi:id="_q2wZFd_yEeuQRohrGBPGsA" name="Scheduled Start" outgoing="_q2xBgd_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2wZFt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2wZF9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2wZGN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <condition xmi:type="expression:Expression" xmi:id="_q2wZGd_yEeuQRohrGBPGsA" name="setCronExpr" content="def String hours_list = String.valueOf(monitoringTimeStartHour);&#xD;&#xA;&#xD;&#xA;def int cycle_start = monitoringTimeStartHour;&#xD;&#xA;while (cycle_start &lt; monitoringTimeEndHour) {&#xD;&#xA;&#x9;cycle_start += monitorInstanceDurationInHours;&#xD;&#xA;&#x9;if (cycle_start&lt;monitoringTimeEndHour) {&#xD;&#xA;&#x9;&#x9;hours_list += &quot;,&quot; + String.valueOf(cycle_start);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def String cron_expr = &quot;0 0 &quot; + hours_list + &quot; ? * &quot; + monitoringDays +&quot; *&quot;;&#xD;&#xA;return cron_expr;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2wZGt_yEeuQRohrGBPGsA" name="monitoringTimeStartHour" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2wZG9_yEeuQRohrGBPGsA" name="monitoringTimeEndHour" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2wZHN_yEeuQRohrGBPGsA" name="monitoringDays" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2wZHd_yEeuQRohrGBPGsA" name="monitorInstanceDurationInHours" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
          </condition>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2wZHt_yEeuQRohrGBPGsA" name="Log job Start" outgoing="_q2xBc9_yEeuQRohrGBPGsA" incoming="_q2xBcN_yEeuQRohrGBPGsA _q2xBgd_yEeuQRohrGBPGsA _q2xBqd_yEeuQRohrGBPGsA _q2xBrN_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2wZH9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2wZIN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2wZId_yEeuQRohrGBPGsA" name="descriptionAfterCompletion()" content="return &quot;Monitoring cycle started at &quot; + monitoringCycleStart.toString(); " interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2wZIt_yEeuQRohrGBPGsA" name="monitoringCycleStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
          </stepSummary>
          <operations xmi:type="expression:Operation" xmi:id="_q2wZI9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2wZJN_yEeuQRohrGBPGsA" name="monitoringCycleStart" content="monitoringCycleStart" type="TYPE_VARIABLE" returnType="java.time.OffsetDateTime">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2wZJd_yEeuQRohrGBPGsA" name="monitoringCycleStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2wZJt_yEeuQRohrGBPGsA" name="SetTimeNow" content="import java.time.OffsetDateTime&#xD;&#xA;&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
            <operator xmi:type="expression:Operator" xmi:id="_q2wZJ9_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2wZKN_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2wZKd_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2wZKt_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2wZK9_yEeuQRohrGBPGsA" name="createLogTasksMonitoring" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogTasksMonitoring;&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;LogTasksMonitoring job_log = null;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;job_log = new LogTasksMonitoring();&#xD;&#xA;&#x9;job_log.isRunning = true;&#xD;&#xA;&#x9;job_log.monitoringCaseId = rootProcessInstanceId;&#xD;&#xA;&#x9;job_log.startTime = monitoringCycleStart;&#xD;&#xA;&#x9;job_log.status = statusLogMonitoringStarted;&#xD;&#xA;&#x9;job_log.isManual = manualStart;&#xD;&#xA;&#x9;job_log.nbFailedTasksPassed = 0;&#xD;&#xA;&#x9;job_log.nbFailedTasksRetried = 0;&#xD;&#xA;&#x9;job_log.nbNewFailedTasksDetected = 0;&#xD;&#xA;&#x9;job_log.nbRetryingTasks = 0;&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;createLogTasksMonitoring&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return job_log;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2wZLN_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
              <referencedElements xmi:type="process:Data" xmi:id="_q2wZLd_yEeuQRohrGBPGsA" name="manualStart" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_q2wZLt_yEeuQRohrGBPGsA" name="rootProcessInstanceId" content="rootProcessInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2wZL9_yEeuQRohrGBPGsA" name="monitoringCycleStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2wZMN_yEeuQRohrGBPGsA" name="statusLogMonitoringStarted" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2wZMd_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2wZMt_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2wZM9_yEeuQRohrGBPGsA" name="nextMonitoringCycleStart" content="nextMonitoringCycleStart" type="TYPE_VARIABLE" returnType="java.time.OffsetDateTime">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2wZNN_yEeuQRohrGBPGsA" name="nextMonitoringCycleStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2wZNd_yEeuQRohrGBPGsA" name="setNextMonitoringCycleStart" content="return monitoringCycleStart.plusMinutes(monitoringIntervalInMinutes);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2wZNt_yEeuQRohrGBPGsA" name="monitoringIntervalInMinutes" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2wZN9_yEeuQRohrGBPGsA" name="monitoringCycleStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2wZON_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2wZOd_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2wZOt_yEeuQRohrGBPGsA" name="jobError" content="jobError" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_q2wZO9_yEeuQRohrGBPGsA" name="jobError" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2wZPN_yEeuQRohrGBPGsA" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
            <operator xmi:type="expression:Operator" xmi:id="_q2wZPd_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2wZPt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2wZP9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2wZQN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2wZQd_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2wZQt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2wZQ9_yEeuQRohrGBPGsA" name="Check Running Jobs" outgoing="_q2xBdt_yEeuQRohrGBPGsA _q2xBhN_yEeuQRohrGBPGsA" incoming="_q2xBc9_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2wZRN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2wZRd_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2wZRt_yEeuQRohrGBPGsA" name="descriptionAfterCompletion()" content="if (isAlreadyRunning) {&#xD;&#xA;&#x9;return &quot;Another monitoring job is already running&quot;;&#xD;&#xA;} else {&#xD;&#xA;&#x9;return &quot;Found no other monitoring job currently running&quot;;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_q2wZR9_yEeuQRohrGBPGsA" name="isAlreadyRunning" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </stepSummary>
          <data xmi:type="process:Data" xmi:id="_q2wZSN_yEeuQRohrGBPGsA" name="isAlreadyRunning" dataType="_q2xpct_yEeuQRohrGBPGsA">
            <defaultValue xmi:type="expression:Expression" xmi:id="_q2wZSd_yEeuQRohrGBPGsA" name="false" content="false" returnType="java.lang.Boolean"/>
          </data>
          <operations xmi:type="expression:Operation" xmi:id="_q2wZSt_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2wZS9_yEeuQRohrGBPGsA" name="isAlreadyRunning" content="isAlreadyRunning" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
              <referencedElements xmi:type="process:Data" xmi:id="_q2wZTN_yEeuQRohrGBPGsA" name="isAlreadyRunning" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2wZTd_yEeuQRohrGBPGsA" name="setIsAlreadyRunning" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import java.time.OffsetDateTime&#xD;&#xA;import java.time.temporal.ChronoUnit&#xD;&#xA;import java.time.temporal.Temporal&#xD;&#xA;import com.sgdbf.model.LogTasksMonitoring;&#xD;&#xA;&#xD;&#xA;def boolean is_running = false;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Search existing running jobs&#xD;&#xA;&#x9;def List&lt;LogTasksMonitoring> running_jobs = logTasksMonitoringDAO.findByIsRunning(true, 0, 10);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;if (running_jobs == null) {&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;setIsAlreadyRunning&quot;, &quot;List of existing jobs is null&quot;);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;setIsAlreadyRunning&quot;, &quot;Found &quot;  + String.valueOf(running_jobs.size()) + &quot; running jobs&quot;);&#xD;&#xA;&#x9;&#x9;for (LogTasksMonitoring one_job : running_jobs) {&#xD;&#xA;&#x9;&#x9;&#x9;if (one_job.monitoringCaseId != rootProcessInstanceId) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Check how long it has been running : ignore if more than 10 minutes&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def OffsetDateTime job_start = one_job.startTime;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def long job_duration = job_start.until(OffsetDateTime.now(), ChronoUnit.MINUTES);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (job_duration >= 10) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;log_file.info(&quot;setIsAlreadyRunning&quot;, &quot;Running job started on [&quot; + job_start.toString() + &quot;] has been running for too long (&quot; + String.valueOf(job_duration) + &quot; minutes), ignoring it&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;log_file.info(&quot;setIsAlreadyRunning&quot;, &quot;Found one running job started on [&quot; + job_start.toString() + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;is_running = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;log_file.info(&quot;setIsAlreadyRunning&quot;,&quot;Job already running = &quot; + String.valueOf(is_running));&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsAlreadyRunning&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return is_running;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
              <referencedElements xmi:type="expression:Expression" xmi:id="_q2wZTt_yEeuQRohrGBPGsA" name="logTasksMonitoringDAO" content="logTasksMonitoringDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.LogTasksMonitoringDAO" returnTypeFixed="true"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_q2wZT9_yEeuQRohrGBPGsA" name="rootProcessInstanceId" content="rootProcessInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAEN_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xAEd_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2xAEt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xAE9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xAFN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xAFd_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2xAFt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2xAF9_yEeuQRohrGBPGsA" name="Abort job" outgoing="_q2xBet_yEeuQRohrGBPGsA" incoming="_q2xBdt_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xAGN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xAGd_yEeuQRohrGBPGsA" name="Aborting current monitoring job due to another running instance" content="Aborting current monitoring job due to another running instance" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xAGt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <operations xmi:type="expression:Operation" xmi:id="_q2xAG9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAHN_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAHd_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAHt_yEeuQRohrGBPGsA" name="false" content="return false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean"/>
            <operator xmi:type="expression:Operator" xmi:id="_q2xAH9_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setIsRunning">
              <inputTypes>java.lang.Boolean</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xAIN_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAId_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAIt_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAI9_yEeuQRohrGBPGsA" name="statusLogMonitoringAborted" content="statusLogMonitoringAborted" type="TYPE_PARAMETER">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAJN_yEeuQRohrGBPGsA" name="statusLogMonitoringAborted" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xAJd_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setStatus">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xAJt_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAJ9_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAKN_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAKd_yEeuQRohrGBPGsA" name="setEndTime" content="import java.time.OffsetDateTime&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
            <operator xmi:type="expression:Operator" xmi:id="_q2xAKt_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setEndTime">
              <inputTypes>java.time.OffsetDateTime</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xAK9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xALN_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xALd_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xALt_yEeuQRohrGBPGsA" name="setAbortErrorMessage" content="return &quot;Aborting this job as another one is still running&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
            <operator xmi:type="expression:Operator" xmi:id="_q2xAL9_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setErrorMessage">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2xAMN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xAMd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xAMt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xAM9_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2xANN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndEvent" xmi:id="_q2xANd_yEeuQRohrGBPGsA" name="End Manual Job" incoming="_q2xBfd_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xANt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xAN9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xAON_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_q2xAOd_yEeuQRohrGBPGsA" name="Is manual job ?" outgoing="_q2xBfd_yEeuQRohrGBPGsA _q2xBmN_yEeuQRohrGBPGsA" incoming="_q2xBet_yEeuQRohrGBPGsA _q2xBnt_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xAOt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xAO9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xAPN_yEeuQRohrGBPGsA" name="descriptionAfterCompletion()" content="def String desc=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;if (manualStart) {&#xD;&#xA;&#x9;desc = &quot;This is a manual job, terminating it&quot;;&#xD;&#xA;} else {&#xD;&#xA;&#x9;desc = &quot;This is a scheduled job&quot;;&#xD;&#xA;}&#xD;&#xA;return desc;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xAPd_yEeuQRohrGBPGsA" name="manualStart" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </stepSummary>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2xAPt_yEeuQRohrGBPGsA" name="Check Monitoring Job end" outgoing="_q2xBpN_yEeuQRohrGBPGsA _q2xBrN_yEeuQRohrGBPGsA _q2xBsd_yEeuQRohrGBPGsA" incoming="_q2xBmN_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xAP9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xAQN_yEeuQRohrGBPGsA" name="Checking if we keep the same monitoring instance" content="Checking if we keep the same monitoring instance" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xAQd_yEeuQRohrGBPGsA" name="descriptionAfterCompletion()" content="def String desc =&quot;&quot;;&#xD;&#xA;if (reachedMonitoringInstanceEnd) {&#xD;&#xA;&#x9;desc = &quot;We have reached the monitoring instance end&quot;;&#xD;&#xA;} else {&#xD;&#xA;&#x9;desc = &quot;Keeping the same monitoring instance&quot;;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xAQt_yEeuQRohrGBPGsA" name="reachedMonitoringInstanceEnd" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </stepSummary>
          <data xmi:type="process:Data" xmi:id="_q2xAQ9_yEeuQRohrGBPGsA" name="reachedMonitoringInstanceEnd" dataType="_q2xpct_yEeuQRohrGBPGsA">
            <defaultValue xmi:type="expression:Expression" xmi:id="_q2xARN_yEeuQRohrGBPGsA" name="false" content="false" returnType="java.lang.Boolean"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_q2xARd_yEeuQRohrGBPGsA" name="checkMonitoringInstanceEnd" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_q2xARt_yEeuQRohrGBPGsA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xAR9_yEeuQRohrGBPGsA" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_q2xASN_yEeuQRohrGBPGsA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xASd_yEeuQRohrGBPGsA" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xASt_yEeuQRohrGBPGsA" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_q2xAS9_yEeuQRohrGBPGsA" name="checkMonitoringInstanceEnd" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import java.time.OffsetDateTime&#xD;&#xA;import java.time.temporal.ChronoUnit&#xD;&#xA;&#xD;&#xA;def boolean is_ended = false;&#xD;&#xA;def long delay_before_next_cycle_seconds = 0;&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Check the delay before next monitoring cycle&#xD;&#xA;&#x9;def OffsetDateTime time_now = OffsetDateTime.now();&#xD;&#xA;&#x9;def OffsetDateTime real_next_cycle_start = nextMonitoringCycleStart;&#xD;&#xA;&#x9;if (nextMonitoringCycleStart.isAfter(time_now)) {&#xD;&#xA;&#x9;&#x9;delay_before_next_cycle_seconds = time_now.until(nextMonitoringCycleStart, ChronoUnit.SECONDS);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// Theoretical time already passed, we will start right now&#xD;&#xA;&#x9;&#x9;real_next_cycle_start = time_now;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check if the next cycle is after the max duration of current monitoring instance&#xD;&#xA;&#x9;def OffsetDateTime monitoring_instance_end = monitoringInstanceStart.plusHours(monitorInstanceDurationInHours);&#xD;&#xA;&#x9;if (real_next_cycle_start.isAfter(monitoring_instance_end)) {&#xD;&#xA;&#x9;&#x9;is_ended = true;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;checkMonitoringInstanceEnd&quot;, &quot;Next monitoring cycle at [&quot; +  real_next_cycle_start.toString() + &quot;] is after the monitoring instance duration expires (&quot; + monitoring_instance_end.toString() + &quot;)&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check if the next cycle is after the daily monitoring hour end&#xD;&#xA;&#x9;def int next_cycle_hour = real_next_cycle_start.getHour();&#xD;&#xA;&#x9;if (next_cycle_hour >= monitoringTimeEndHour) {&#xD;&#xA;&#x9;&#x9;is_ended = true;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;checkMonitoringInstanceEnd&quot;, &quot;Next monitoring cycle at [&quot; +  next_cycle_hour.toString() + &quot;] is after the monitoring end hour (&quot; + String.valueOf(monitoringTimeEndHour) + &quot; h)&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;checkMonitoringInstanceEnd&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return [reachedMonitoringInstanceEnd : is_ended, delayBeforeNextMonitoringCycleInSeconds: delay_before_next_cycle_seconds];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xATN_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2xATd_yEeuQRohrGBPGsA" name="monitoringInstanceStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xATt_yEeuQRohrGBPGsA" name="monitoringTimeEndHour" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2xAT9_yEeuQRohrGBPGsA" name="nextMonitoringCycleStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAUN_yEeuQRohrGBPGsA" name="monitorInstanceDurationInHours" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_q2xAUd_yEeuQRohrGBPGsA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAUt_yEeuQRohrGBPGsA" name="delayBeforeNextMonitoringCycleInSeconds" content="delayBeforeNextMonitoringCycleInSeconds" type="TYPE_VARIABLE" returnType="java.lang.Long">
                <referencedElements xmi:type="process:Data" xmi:id="_q2xAU9_yEeuQRohrGBPGsA" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAVN_yEeuQRohrGBPGsA" name="result" content="return result[&quot;delayBeforeNextMonitoringCycleInSeconds&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
                <referencedElements xmi:type="definition:Output" xmi:id="_q2xAVd_yEeuQRohrGBPGsA" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_q2xAVt_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_q2xAV9_yEeuQRohrGBPGsA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAWN_yEeuQRohrGBPGsA" name="reachedMonitoringInstanceEnd" content="reachedMonitoringInstanceEnd" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
                <referencedElements xmi:type="process:Data" xmi:id="_q2xAWd_yEeuQRohrGBPGsA" name="reachedMonitoringInstanceEnd" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAWt_yEeuQRohrGBPGsA" name="result" content="return result[&quot;reachedMonitoringInstanceEnd&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
                <referencedElements xmi:type="definition:Output" xmi:id="_q2xAW9_yEeuQRohrGBPGsA" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_q2xAXN_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2xAXd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xAXt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xAX9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xAYN_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2xAYd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2xAYt_yEeuQRohrGBPGsA" name="Check Existing Failed Tasks" outgoing="_q2xBh9_yEeuQRohrGBPGsA" incoming="_q2xBhN_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xAY9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xAZN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xAZd_yEeuQRohrGBPGsA" name="descriptionAfterCompletion()" content="return &quot;Found &quot; + String.valueOf(nbExistingTasks) + &quot; existing failed tasks to retry now&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xAZt_yEeuQRohrGBPGsA" name="nbExistingTasks" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
          </stepSummary>
          <operations xmi:type="expression:Operation" xmi:id="_q2xAZ9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAaN_yEeuQRohrGBPGsA" name="existingFailedTasks" content="existingFailedTasks" type="TYPE_VARIABLE" returnType="java.util.List">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAad_yEeuQRohrGBPGsA" name="existingFailedTasks" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAat_yEeuQRohrGBPGsA" name="CheckExistingFailedTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;&#xD;&#xA;def List&lt;LogFailedTasks> existing_tasks = null;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;log_file.debug(&quot;CheckExistingFailedTasks&quot;, &quot;Searching for existing failed tasks to retry&quot;);&#xD;&#xA;&#x9;existing_tasks = logFailedTasksDAO.findFailedTasksToRetryNow(0, maxNumberOfRetriedTasksPerCycle);&#xD;&#xA;&#x9;log_file.info(&quot;CheckExistingFailedTasks&quot;, &quot;Found &quot; + String.valueOf(existing_tasks.size()) + &quot; existing failed tasks to retry&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;CheckExistingFailedTasks&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return existing_tasks;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="expression:Expression" xmi:id="_q2xAa9_yEeuQRohrGBPGsA" name="logFailedTasksDAO" content="logFailedTasksDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.LogFailedTasksDAO" returnTypeFixed="true"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAbN_yEeuQRohrGBPGsA" name="maxNumberOfRetriedTasksPerCycle" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAbd_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xAbt_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xAb9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAcN_yEeuQRohrGBPGsA" name="nbExistingTasks" content="nbExistingTasks" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xAcd_yEeuQRohrGBPGsA" name="nbExistingTasks" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAct_yEeuQRohrGBPGsA" name="setNbRetryingTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_retrying=0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (existingFailedTasks != null) {&#xD;&#xA;&#x9;&#x9;nb_retrying = existingFailedTasks.size();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;log_file.debug(&quot;setNbRetryingTasks&quot;, &quot;Found &quot; + String.valueOf(nb_retrying) + &quot; existing failed tasks to retry&quot;);&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setNbRetryingTasks&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return nb_retrying;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAc9_yEeuQRohrGBPGsA" name="existingFailedTasks" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAdN_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Name of class showing in logs"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xAdd_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xAdt_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAd9_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAeN_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAed_yEeuQRohrGBPGsA" name="nbExistingTasks" content="nbExistingTasks" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xAet_yEeuQRohrGBPGsA" name="nbExistingTasks" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xAe9_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setNbRetryingTasks">
              <inputTypes>java.lang.Integer</inputTypes>
            </operator>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2xAfN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xAfd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xAft_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xAf9_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2xAgN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2xAgd_yEeuQRohrGBPGsA" name="Detect new failed tasks" outgoing="_q2xBj9_yEeuQRohrGBPGsA" incoming="_q2xBh9_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xAgt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xAg9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xAhN_yEeuQRohrGBPGsA" name="descriptionAfterCompletion()" content="return &quot;Detected &quot; + String.valueOf(nbNewTasksDetected) + &quot; new failed tasks&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xAhd_yEeuQRohrGBPGsA" name="nbNewTasksDetected" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
          </stepSummary>
          <connectors xmi:type="process:Connector" xmi:id="_q2xAht_yEeuQRohrGBPGsA" name="detectNewFailedTasks" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_q2xAh9_yEeuQRohrGBPGsA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xAiN_yEeuQRohrGBPGsA" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_q2xAid_yEeuQRohrGBPGsA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xAit_yEeuQRohrGBPGsA" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xAi9_yEeuQRohrGBPGsA" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_q2xAjN_yEeuQRohrGBPGsA" name="detectNewFailedTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import java.time.OffsetDateTime;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;import java.util.HashSet;&#xD;&#xA;&#xD;&#xA;import com.bonitasoft.engine.api.ProcessAPI;&#xD;&#xA;import com.bonitasoft.engine.api.LogAPI;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorInstance;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorInstanceWithFailureInfo&#xD;&#xA;import org.bonitasoft.engine.search.Order;&#xD;&#xA;import org.bonitasoft.engine.search.SearchOptions;&#xD;&#xA;import org.bonitasoft.engine.search.SearchOptionsBuilder;&#xD;&#xA;import org.bonitasoft.engine.search.SearchResult;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityInstance;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityInstanceSearchDescriptor;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import org.bonitasoft.engine.bpm.process.ProcessDefinition;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorInstancesSearchDescriptor;&#xD;&#xA;import org.bonitasoft.engine.bpm.connector.ConnectorState;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.FlowNodeType;&#xD;&#xA;&#xD;&#xA;def List&lt;LogFailedTasks> detected_failed_tasks = [];&#xD;&#xA;def String job_error = &quot;&quot;;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Set minimum date for oldest task searched&#xD;&#xA;&#x9;def OffsetDateTime time_now = OffsetDateTime.now();&#xD;&#xA;&#x9;def OffsetDateTime oldest_task_date = time_now.minusDays(oldestNewTaskDetectedInDays);&#xD;&#xA;&#x9;def Long oldest_task_timestamp_value = oldest_task_date.toEpochSecond() * 1000L;&#x9;// Number of milliseconds since 01/01/1970&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Search failed tasks : Automatic tasks in FAILED state&#xD;&#xA;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;Searching for new Automatic failed tasks since [&quot; + oldest_task_date.toString() + &quot;]&quot;);&#xD;&#xA;&#x9;def ProcessAPI process_api = apiAccessor.getProcessAPI();&#xD;&#xA;&#x9;List&lt;ActivityInstance> list_activities = searchFailedTasksOfType(FlowNodeType.AUTOMATIC_TASK, oldest_task_timestamp_value, maxNumberOfRetriedTasksPerCycle, process_api, log_file);&#xD;&#xA;&#x9;def int nb_automatic_tasks = list_activities.size();&#xD;&#xA;&#x9;if (nb_automatic_tasks &lt; maxNumberOfRetriedTasksPerCycle) {&#xD;&#xA;&#x9;&#x9;// Add failed Human task if any&#xD;&#xA;&#x9;&#x9;List&lt;ActivityInstance> list_activities_human = searchFailedTasksOfType(FlowNodeType.HUMAN_TASK, oldest_task_timestamp_value, maxNumberOfRetriedTasksPerCycle - nb_automatic_tasks, process_api, log_file);&#xD;&#xA;&#x9;&#x9;if (list_activities_human.size() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;list_activities.addAll(list_activities_human);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;We have already the max number of failed tasks (&quot; + String.valueOf(nb_automatic_tasks) + &quot;), do not search for human tasks&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (list_activities.size() > 0) {&#xD;&#xA;&#x9;&#x9;// Get the list of existing tasks ids&#xD;&#xA;&#x9;&#x9;def Set&lt;Long> existing_tasks_ids = new HashSet();&#xD;&#xA;&#x9;&#x9;for (LogFailedTasks one_failed_task : existingFailedTasks) {&#xD;&#xA;&#x9;&#x9;&#x9;def Long one_existing_task_id = one_failed_task.getTaskId();&#xD;&#xA;&#x9;&#x9;&#x9;existing_tasks_ids.add(one_existing_task_id);&#xD;&#xA;&#x9;&#x9;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;Task &quot; + String.valueOf(one_existing_task_id) + &quot; was already detected&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Check if failed tasks were previously already detected&#xD;&#xA;&#x9;&#x9;for (ActivityInstance one_activity : list_activities) {&#xD;&#xA;&#x9;&#x9;&#x9;def Long failed_task_id = one_activity.id;&#xD;&#xA;&#x9;&#x9;&#x9;if (existing_tasks_ids.contains(failed_task_id)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;Ignoring failed task &quot; + String.valueOf(failed_task_id) + &quot; that was already detected&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def String task_name = one_activity.getName();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;Detected new failed task &quot; + String.valueOf(failed_task_id) + &quot; : &quot; + task_name);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Add new failed task&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def new_failed_task = new LogFailedTasks();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.taskId = failed_task_id;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.taskName = task_name;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.caseId = one_activity.getRootContainerId();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.failureDetectionDate = time_now;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.nextRetryDate = time_now;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.isRetrying = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.nbRetries = 0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.status = one_activity.getState();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Additional query to retrieve process details&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def long process_def_id = one_activity.getProcessDefinitionId();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;Searching process definition &quot; + String.valueOf(process_def_id) + &quot; for task &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def ProcessDefinition process_def = process_api.getProcessDefinition(process_def_id);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.processName = process_def.getName();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new_failed_task.processVersion = process_def.getVersion()&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Search failed connector on activityInstance&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;Searching failed connector for task &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def SearchOptionsBuilder search_connector_options = new SearchOptionsBuilder(0, 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.filter(ConnectorInstancesSearchDescriptor.CONTAINER_ID, failed_task_id)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.filter(ConnectorInstancesSearchDescriptor.STATE, ConnectorState.FAILED.name());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def SearchResult&lt;ConnectorInstance> connector_search_result = process_api.searchConnectorInstances(search_connector_options.done());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def int nb_connectors = connector_search_result.getCount();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (nb_connectors == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;No connector found for task &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ConnectorInstance connectorInstance = connector_search_result.getResult().get(0);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def String connector_id = connectorInstance.getConnectorId();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def String connector_name = connectorInstance.getName();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;log_file.debug(&quot;detecNewFailedTasks&quot;, &quot;Found failed connector [&quot; + connector_name + &quot;] of type [&quot; + connector_id + &quot;] for activityInstance [&quot; + task_name + &quot;] with id &quot; + String.valueOf(failed_task_id));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorId = connectorInstance.getId();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorName = connector_name;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorLastStatus = connectorInstance.getState().name();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorType = connector_id;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Additional query to retrieve details of error&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;new_failed_task.failedConnectorError = searchConnectorException(new_failed_task.failedConnectorId, process_api, log_file);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Add failed task to the list of new detected tasks&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;detected_failed_tasks.add(new_failed_task);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;detectNewFailedTasks&quot;, e);&#xD;&#xA;&#x9;job_error = &quot;Exception while detecting new failed tasks : &quot; +e.getMessage();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return [newFailedTasksDetected: detected_failed_tasks, jobError: job_error];&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;def List&lt;ActivityInstance> searchFailedTasksOfType(FlowNodeType activity_type, long oldest_task_timestamp_value, int max_number_of_tasks, ProcessAPI process_api, LogFile log_file) {&#xD;&#xA;&#x9;List&lt;ActivityInstance> list_activities = [];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;// Build query&#xD;&#xA;&#x9;&#x9;def SearchOptionsBuilder task_search = new SearchOptionsBuilder(0, max_number_of_tasks)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;.filter(ActivityInstanceSearchDescriptor.STATE_NAME, ActivityStates.FAILED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;.filter(ActivityInstanceSearchDescriptor.ACTIVITY_TYPE, activity_type)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;.greaterThan(ActivityInstanceSearchDescriptor.LAST_MODIFICATION_DATE, oldest_task_timestamp_value);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Execute search&#xD;&#xA;&#x9;&#x9;def SearchResult&lt;ActivityInstance> tasks_search_result = process_api.searchActivities(task_search.done())&#xD;&#xA;&#x9;&#x9;def int nb_detected_tasks = tasks_search_result.getCount();&#xD;&#xA;&#x9;&#x9;if (nb_detected_tasks == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;searchFailedTasksOfType&quot;, &quot;Search executed for activity type [&quot; + activity_type.name() + &quot;], no new failed tasks detected&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Get the list of failed activities&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;searchFailedTasksOfType&quot;, &quot;Search executed for activity type [&quot; + activity_type.name() + &quot;], found &quot; + String.valueOf(nb_detected_tasks) + &quot; failed tasks&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;list_activities = tasks_search_result.getResult();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;log_file.exception(&quot;searchFailedTasksOfType&quot;, e);&#xD;&#xA;&#x9;&#x9;throw e;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return list_activities;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def String searchConnectorException(Long failed_connector_id, ProcessAPI process_api, LogFile log_file) {&#xD;&#xA;&#x9;def String connector_error = &quot;&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;searchConnectorException&quot;, &quot;Searching failed connector log for connectorId &quot; + String.valueOf(failed_connector_id));&#xD;&#xA;&#x9;&#x9;ConnectorInstanceWithFailureInfo  failure_info = process_api.getConnectorInstanceWithFailureInformation(failed_connector_id);&#xD;&#xA;&#x9;&#x9;connector_error = failure_info.getExceptionMessage();&#xD;&#xA;&#x9;&#x9;def String stack_trace = failure_info.getStackTrace();&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;searchConnectorException&quot;, &quot;Failed connector message : &quot; + connector_error + &quot; - Stack trace : &quot; + stack_trace);&#xD;&#xA;&#x9;&#x9;if (!stack_trace.isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;connector_error += &quot;\n\nStack trace: \n&quot; + stack_trace;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;log_file.exception(&quot;searchConnectorException&quot;, e);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return connector_error;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAjd_yEeuQRohrGBPGsA" name="oldestNewTaskDetectedInDays" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_q2xAjt_yEeuQRohrGBPGsA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAj9_yEeuQRohrGBPGsA" name="existingFailedTasks" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAkN_yEeuQRohrGBPGsA" name="maxNumberOfRetriedTasksPerCycle" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAkd_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_q2xAkt_yEeuQRohrGBPGsA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAk9_yEeuQRohrGBPGsA" name="jobError" content="jobError" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_q2xAlN_yEeuQRohrGBPGsA" name="jobError" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAld_yEeuQRohrGBPGsA" name="setjobError" content="def String err_msg = &quot;&quot;;&#xD;&#xA;if (! jobError.isEmpty()) {&#xD;&#xA;&#x9;err_msg = jobError + &quot; - &quot;;&#xD;&#xA;}&#xD;&#xA;err_msg += result[&quot;jobError&quot;];&#xD;&#xA;&#xD;&#xA;return err_msg;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="process:Data" xmi:id="_q2xAlt_yEeuQRohrGBPGsA" name="jobError" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
                <referencedElements xmi:type="definition:Output" xmi:id="_q2xAl9_yEeuQRohrGBPGsA" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_q2xAmN_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_q2xAmd_yEeuQRohrGBPGsA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAmt_yEeuQRohrGBPGsA" name="newFailedTasksDetected" content="newFailedTasksDetected" type="TYPE_VARIABLE" returnType="java.util.List">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAm9_yEeuQRohrGBPGsA" name="newFailedTasksDetected" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAnN_yEeuQRohrGBPGsA" name="result" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;import com.sgdbf.model.LogFailedTasksDAO;&#xD;&#xA;&#xD;&#xA;def List&lt;LogFailedTasks> detected_tasks = result[&quot;newFailedTasksDetected&quot;];&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;def int nb_tasks = detected_tasks.size();&#xD;&#xA;&#x9;for (int i=nb_tasks - 1; i>=0; i--) {&#xD;&#xA;&#x9;&#x9;// Check unique contraint : we do not record the same taskId and connectorId if already there&#xD;&#xA;&#x9;&#x9;LogFailedTasks one_failed_task = detected_tasks.get(i);&#xD;&#xA;&#x9;&#x9;def Long task_id = one_failed_task.getTaskId();&#xD;&#xA;&#x9;&#x9;def Long case_id = one_failed_task.getCaseId();&#xD;&#xA;&#x9;&#x9;if (duplicateRecordExists(task_id, case_id, logFailedTasksDAO, log_file)) {&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;detectNewFailedTasks&quot;, &quot;Ignoring duplicate record for failed task &quot; + String.valueOf(task_id) + &quot; with same caseId &quot; + String.valueOf(case_id));&#xD;&#xA;&#x9;&#x9;&#x9;detected_tasks.removeAt(i);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;log_file.debug(&quot;detectNewFailedTasks&quot;, &quot;Number of detected tasks to create :&quot; + String.valueOf( detected_tasks.size()) + &quot; out of &quot; + String.valueOf(nb_tasks) + &quot; initially in list&quot;);&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;searchConnectorLogError&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return detected_tasks;&#xD;&#xA;&#xD;&#xA;def boolean duplicateRecordExists(Long failed_task_id, Long failed_case_id, LogFailedTasksDAO logFailedTasksDAO, LogFile log_file) {&#xD;&#xA;&#x9;def boolean record_exists = false;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;def List&lt;LogFailedTasks> existing_duplicates = logFailedTasksDAO.findByTaskId(failed_task_id, 0, 100);&#xD;&#xA;&#x9;&#x9;if ((existing_duplicates != null) &amp;&amp; (existing_duplicates.size() > 0)) {&#xD;&#xA;&#x9;&#x9;&#x9;for (i=0; i&lt;existing_duplicates.size(); i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LogFailedTasks one_duplicate = existing_duplicates.get(i);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (one_duplicate.caseId == failed_case_id) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;record_exists = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;duplicateRecordExists&quot;, &quot;Existing record with task id=&quot; + String.valueOf(failed_task_id) + &quot; and case id=&quot; + String.valueOf(failed_case_id) + &quot; : &quot; + String.valueOf(record_exists));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;log_file.exception(&quot;duplicateRecordExists&quot;, e);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;return record_exists;&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
                <referencedElements xmi:type="definition:Output" xmi:id="_q2xAnd_yEeuQRohrGBPGsA" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_q2xAnt_yEeuQRohrGBPGsA" name="logFailedTasksDAO" content="logFailedTasksDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.LogFailedTasksDAO" returnTypeFixed="true"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAn9_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_q2xAoN_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <operations xmi:type="expression:Operation" xmi:id="_q2xAod_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAot_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAo9_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xApN_yEeuQRohrGBPGsA" name="nbNewTasksDetected" content="nbNewTasksDetected" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xApd_yEeuQRohrGBPGsA" name="nbNewTasksDetected" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xApt_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setNbNewFailedTasksDetected">
              <inputTypes>java.lang.Integer</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xAp9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xAqN_yEeuQRohrGBPGsA" name="nbNewTasksDetected" content="nbNewTasksDetected" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xAqd_yEeuQRohrGBPGsA" name="nbNewTasksDetected" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xAqt_yEeuQRohrGBPGsA" name="setNbDetectedFailedTasks" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_detected=0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (newFailedTasksDetected != null) {&#xD;&#xA;&#x9;&#x9;nb_detected = newFailedTasksDetected.size();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;log_file.debug(&quot;setNbDetectedFailedTasks&quot;, &quot;Found &quot; + String.valueOf(nb_detected) + &quot; existing failed tasks to retry&quot;);&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setNbDetectedFailedTasks&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return nb_detected;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAq9_yEeuQRohrGBPGsA" name="newFailedTasksDetected" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xArN_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Name of class showing in logs"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xArd_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2xArt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xAr9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xAsN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xAsd_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2xAst_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:CallActivity" xmi:id="_q2xAs9_yEeuQRohrGBPGsA" name="Retry tasks" outgoing="_q2xBld_yEeuQRohrGBPGsA" incoming="_q2xBit_yEeuQRohrGBPGsA" type="PARALLEL" collectionDataToMultiInstantiate="_q2xBVN_yEeuQRohrGBPGsA" outputData="_q2xAt9_yEeuQRohrGBPGsA" listDataContainingOutputResults="_q2xBZd_yEeuQRohrGBPGsA" storeOutput="true">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xAtN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xAtd_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xAtt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:Data" xmi:id="_q2xAt9_yEeuQRohrGBPGsA" name="retryResultCode" dataType="_q2xpdN_yEeuQRohrGBPGsA">
            <defaultValue xmi:type="expression:Expression" xmi:id="_q2xAuN_yEeuQRohrGBPGsA" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer"/>
          </data>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2xAud_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xAut_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xAu9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xAvN_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="com.sgdbf.model.LogFailedTasks" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2xAvd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <inputMappings xmi:type="process:InputMapping" xmi:id="_q2xAvt_yEeuQRohrGBPGsA" subprocessTarget="inputFailedTaskPersistenceId">
            <processSource xmi:type="expression:Expression" xmi:id="_q2xAv9_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="return String.valueOf(multiInstanceIterator.getPersistenceId());" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xAwN_yEeuQRohrGBPGsA" name="multiInstanceIterator" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
            </processSource>
          </inputMappings>
          <inputMappings xmi:type="process:InputMapping" xmi:id="_q2xAwd_yEeuQRohrGBPGsA" subprocessTarget="delayBetweenRetriesInMinutesArray" assignationType="Data">
            <processSource xmi:type="expression:Expression" xmi:id="_q2xAwt_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutesArray" content="delayBetweenRetriesInMinutesArray" type="TYPE_VARIABLE" returnType="java.util.List">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xAw9_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutesArray" multiple="true" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
            </processSource>
          </inputMappings>
          <inputMappings xmi:type="process:InputMapping" xmi:id="_q2xAxN_yEeuQRohrGBPGsA" subprocessTarget="inputMaxNumberOfRetries">
            <processSource xmi:type="expression:Expression" xmi:id="_q2xAxd_yEeuQRohrGBPGsA" name="maxNumberOfRetries" content="maxNumberOfRetries" type="TYPE_PARAMETER" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xAxt_yEeuQRohrGBPGsA" name="maxNumberOfRetries" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
            </processSource>
          </inputMappings>
          <outputMappings xmi:type="process:OutputMapping" xmi:id="_q2xAx9_yEeuQRohrGBPGsA" subprocessSource="retryResultCode" processTarget="_q2xAt9_yEeuQRohrGBPGsA"/>
          <calledActivityName xmi:type="expression:Expression" xmi:id="_q2xAyN_yEeuQRohrGBPGsA" name="RetryFailedTask" content="RetryFailedTask" returnTypeFixed="true"/>
          <calledActivityVersion xmi:type="expression:Expression" xmi:id="_q2xAyd_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_q2xAyt_yEeuQRohrGBPGsA" name="Tasks to retry ?" outgoing="_q2xBit_yEeuQRohrGBPGsA _q2xBkt_yEeuQRohrGBPGsA" incoming="_q2xBod_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xAy9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xAzN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xAzd_yEeuQRohrGBPGsA" name="descriptionAfterCompletion()" content="def String desc=&quot;&quot;;&#xD;&#xA;if (nbTasksToRetry > 0) {&#xD;&#xA;&#x9;desc = &quot;There are &quot; + String.valueOf(nbTasksToRetry) + &quot; failed tasks to retry now&quot;;&#xD;&#xA;} else {&#xD;&#xA;&#x9;desc = &quot;There is no failed task to retry now&quot;;&#xD;&#xA;}&#xD;&#xA;return desc;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xAzt_yEeuQRohrGBPGsA" name="nbTasksToRetry" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
          </stepSummary>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2xAz9_yEeuQRohrGBPGsA" name="Check Results" outgoing="_q2xBm9_yEeuQRohrGBPGsA" incoming="_q2xBld_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xA0N_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xA0d_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xA0t_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_q2xA09_yEeuQRohrGBPGsA" name="CheckResults" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_q2xA1N_yEeuQRohrGBPGsA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xA1d_yEeuQRohrGBPGsA" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_q2xA1t_yEeuQRohrGBPGsA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xA19_yEeuQRohrGBPGsA" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xA2N_yEeuQRohrGBPGsA" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_q2xA2d_yEeuQRohrGBPGsA" name="CheckResults" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_retried=0;&#xD;&#xA;def int nb_completed=0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;for (Integer one_result : retryResultCodesList) {&#xD;&#xA;&#x9;&#x9;if (one_result >= 10) {&#xD;&#xA;&#x9;&#x9;&#x9;nb_retried++;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if ((one_result == 1) || (one_result == 11)) {&#xD;&#xA;&#x9;&#x9;&#x9;nb_completed++;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;log_file.info(&quot;CheckResults&quot;, &quot;Retried &quot; + String.valueOf(nb_retried) + &quot; tasks, completed &quot; + String.valueOf(nb_completed) + &quot; tasks&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;CheckResults&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return [nbTasksRetried : nb_retried, nbTasksCompleted: nb_completed];&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xA2t_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Name of class showing in logs"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_q2xA29_yEeuQRohrGBPGsA" name="retryResultCodesList" multiple="true" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_q2xA3N_yEeuQRohrGBPGsA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_q2xA3d_yEeuQRohrGBPGsA" name="nbTasksCompleted" content="nbTasksCompleted" type="TYPE_VARIABLE" returnType="java.lang.Integer">
                <referencedElements xmi:type="process:Data" xmi:id="_q2xA3t_yEeuQRohrGBPGsA" name="nbTasksCompleted" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_q2xA39_yEeuQRohrGBPGsA" name="result" content="return result[&quot;nbTasksCompleted&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
                <referencedElements xmi:type="definition:Output" xmi:id="_q2xA4N_yEeuQRohrGBPGsA" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_q2xA4d_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_q2xA4t_yEeuQRohrGBPGsA">
              <leftOperand xmi:type="expression:Expression" xmi:id="_q2xA49_yEeuQRohrGBPGsA" name="nbTasksRetried" content="nbTasksRetried" type="TYPE_VARIABLE" returnType="java.lang.Integer">
                <referencedElements xmi:type="process:Data" xmi:id="_q2xA5N_yEeuQRohrGBPGsA" name="nbTasksRetried" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_q2xA5d_yEeuQRohrGBPGsA" name="nbTasksRetried" content="return result[&quot;nbTasksRetried&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
                <referencedElements xmi:type="definition:Output" xmi:id="_q2xA5t_yEeuQRohrGBPGsA" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_q2xA59_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2xA6N_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xA6d_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xA6t_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xA69_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2xA7N_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2xA7d_yEeuQRohrGBPGsA" name="Log job results" outgoing="_q2xBnt_yEeuQRohrGBPGsA" incoming="_q2xBkt_yEeuQRohrGBPGsA _q2xBm9_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xA7t_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xA79_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xA8N_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <operations xmi:type="expression:Operation" xmi:id="_q2xA8d_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xA8t_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xA89_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xA9N_yEeuQRohrGBPGsA" name="false" content="return false;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean"/>
            <operator xmi:type="expression:Operator" xmi:id="_q2xA9d_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setIsRunning">
              <inputTypes>java.lang.Boolean</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xA9t_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xA99_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xA-N_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xA-d_yEeuQRohrGBPGsA" name="setEndTime" content="import java.time.OffsetDateTime&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
            <operator xmi:type="expression:Operator" xmi:id="_q2xA-t_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setEndTime">
              <inputTypes>java.time.OffsetDateTime</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xA-9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xA_N_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xA_d_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xA_t_yEeuQRohrGBPGsA" name="nbTasksRetried" content="nbTasksRetried" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xA_9_yEeuQRohrGBPGsA" name="nbTasksRetried" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xBAN_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setNbFailedTasksRetried">
              <inputTypes>java.lang.Integer</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xBAd_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xBAt_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xBA9_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xBBN_yEeuQRohrGBPGsA" name="nbTasksCompleted" content="nbTasksCompleted" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xBBd_yEeuQRohrGBPGsA" name="nbTasksCompleted" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xBBt_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setNbFailedTasksPassed">
              <inputTypes>java.lang.Integer</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xBB9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xBCN_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xBCd_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xBCt_yEeuQRohrGBPGsA" name="statusLogMonitoringCompleteOrError" content="def String status = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;if (! jobError.isEmpty()) {&#xD;&#xA;&#x9;status = statusLogMonitoringError;&#xD;&#xA;} else {&#xD;&#xA;&#x9;status = statusLogMonitoringComplete;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return status;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xBC9_yEeuQRohrGBPGsA" name="statusLogMonitoringError" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
              <referencedElements xmi:type="process:Data" xmi:id="_q2xBDN_yEeuQRohrGBPGsA" name="jobError" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xBDd_yEeuQRohrGBPGsA" name="statusLogMonitoringComplete" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xBDt_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setStatus">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xBD9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xBEN_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xBEd_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xBEt_yEeuQRohrGBPGsA" name="setJobError" content="def String error_msg = null;&#xD;&#xA;&#xD;&#xA;if (! jobError.isEmpty()) {&#xD;&#xA;&#x9;error_msg = jobError;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return error_msg;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xBE9_yEeuQRohrGBPGsA" name="jobError" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xBFN_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setErrorMessage">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2xBFd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xBFt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xBF9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xBGN_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2xBGd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_q2xBGt_yEeuQRohrGBPGsA" name="Build list of tasks to retry" outgoing="_q2xBod_yEeuQRohrGBPGsA" incoming="_q2xBj9_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xBG9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xBHN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xBHd_yEeuQRohrGBPGsA" name="descriptionAfterCompletion()" content="return &quot;Found &quot; + String.valueOf(nbTasksToRetry) + &quot; failed tasks to retry now&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xBHt_yEeuQRohrGBPGsA" name="nbTasksToRetry" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
          </stepSummary>
          <operations xmi:type="expression:Operation" xmi:id="_q2xBH9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xBIN_yEeuQRohrGBPGsA" name="allTasksToRetry" content="allTasksToRetry" type="TYPE_VARIABLE" returnType="java.util.List">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xBId_yEeuQRohrGBPGsA" name="allTasksToRetry" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xBIt_yEeuQRohrGBPGsA" name="buildListOfTasksToRetry" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;&#xD;&#xA;def List&lt;LogFailedTasks> all_tasks = [];&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;all_tasks.addAll(existingFailedTasks);&#xD;&#xA;&#x9;all_tasks.addAll(newFailedTasksDetected);&#xD;&#xA;&#x9;&#xD;&#xA;} catch (e) {&#xD;&#xA;&#x9;log_file.exception(&quot;buildListOfTasksToRetry&quot;,e);&#xD;&#xA;}&#xD;&#xA;return all_tasks;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xBI9_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xBJN_yEeuQRohrGBPGsA" name="newFailedTasksDetected" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xBJd_yEeuQRohrGBPGsA" name="existingFailedTasks" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xBJt_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xBJ9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xBKN_yEeuQRohrGBPGsA" name="nbTasksToRetry" content="nbTasksToRetry" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xBKd_yEeuQRohrGBPGsA" name="nbTasksToRetry" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xBKt_yEeuQRohrGBPGsA" name="setNbTasksToRetry" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_tasks=0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;nb_tasks = allTasksToRetry.size();&#xD;&#xA;&#x9;log_file.info(&quot;&quot;, &quot;Build a list of &quot; + String.valueOf(nb_tasks) + &quot; tasks to retry&quot;);&#xD;&#xA;&#xD;&#xA;} catch (e) {&#xD;&#xA;&#x9;log_file.exception(&quot;buildListOfTasksToRetry&quot;,e);&#xD;&#xA;}&#xD;&#xA;return nb_tasks;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xBK9_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Name of class showing in logs"/>
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xBLN_yEeuQRohrGBPGsA" name="allTasksToRetry" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xBLd_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_q2xBLt_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xBL9_yEeuQRohrGBPGsA" name="jobLog" content="jobLog" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogTasksMonitoring">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xBMN_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xBMd_yEeuQRohrGBPGsA" name="statusLogMonitoringRunning" content="statusLogMonitoringRunning" type="TYPE_PARAMETER">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xBMt_yEeuQRohrGBPGsA" name="statusLogMonitoringRunning" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xBM9_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setStatus">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_q2xBNN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xBNd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xBNt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xBN9_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_q2xBON_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:IntermediateCatchTimerEvent" xmi:id="_q2xBOd_yEeuQRohrGBPGsA" name="Wait until next monitoring cycle" outgoing="_q2xBqd_yEeuQRohrGBPGsA" incoming="_q2xBpN_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xBOt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xBO9_yEeuQRohrGBPGsA" name="dynamicDescription()" content="return &quot;Waiting &quot; + String.valueOf(delayBeforeNextMonitoringCycleInSeconds) + &quot; seconds before next monitoring cycle&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xBPN_yEeuQRohrGBPGsA" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xBPd_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <condition xmi:type="expression:Expression" xmi:id="_q2xBPt_yEeuQRohrGBPGsA" name="00:01:00" content="def long one_second = 1000L;&#xD;&#xA;&#xD;&#xA;return one_second * delayBeforeNextMonitoringCycleInSeconds;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xBP9_yEeuQRohrGBPGsA" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
          </condition>
        </elements>
        <elements xmi:type="process:EndEvent" xmi:id="_q2xBQN_yEeuQRohrGBPGsA" name="End Montitoring Instance" incoming="_q2xBsd_yEeuQRohrGBPGsA">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xBQd_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xBQt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_q2xBQ9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        </elements>
      </elements>
      <data xmi:type="process:Data" xmi:id="_q2xBRN_yEeuQRohrGBPGsA" name="manualStart" dataType="_q2xpct_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBRd_yEeuQRohrGBPGsA" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_q2xBRt_yEeuQRohrGBPGsA" name="jobLog" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogTasksMonitoring">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBR9_yEeuQRohrGBPGsA" name="" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_q2xBSN_yEeuQRohrGBPGsA" name="monitoringCycleStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBSd_yEeuQRohrGBPGsA" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_q2xBSt_yEeuQRohrGBPGsA" name="nextMonitoringCycleStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBS9_yEeuQRohrGBPGsA" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_q2xBTN_yEeuQRohrGBPGsA" name="existingFailedTasks" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBTd_yEeuQRohrGBPGsA" name="" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_q2xBTt_yEeuQRohrGBPGsA" name="newFailedTasksDetected" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBT9_yEeuQRohrGBPGsA" name="" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xBUN_yEeuQRohrGBPGsA" name="nbTasksRetried" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBUd_yEeuQRohrGBPGsA" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xBUt_yEeuQRohrGBPGsA" name="nbTasksCompleted" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBU9_yEeuQRohrGBPGsA" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_q2xBVN_yEeuQRohrGBPGsA" name="allTasksToRetry" multiple="true" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBVd_yEeuQRohrGBPGsA" name="" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xBVt_yEeuQRohrGBPGsA" name="nbTasksToRetry" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBV9_yEeuQRohrGBPGsA" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xBWN_yEeuQRohrGBPGsA" name="nbExistingTasks" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBWd_yEeuQRohrGBPGsA" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xBWt_yEeuQRohrGBPGsA" name="nbNewTasksDetected" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBW9_yEeuQRohrGBPGsA" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xBXN_yEeuQRohrGBPGsA" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_q2xpdd_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBXd_yEeuQRohrGBPGsA" name="monitoringIntervalInMinutes*60" content="def Long interval = new Long(monitoringIntervalInMinutes) * 60L;&#xD;&#xA;return interval;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xBXt_yEeuQRohrGBPGsA" name="monitoringIntervalInMinutes" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_q2xBX9_yEeuQRohrGBPGsA" name="monitoringInstanceStart" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBYN_yEeuQRohrGBPGsA" name="init_monitoringInstanceStart()" content="import java.time.OffsetDateTime&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xBYd_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutesArray" multiple="true" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBYt_yEeuQRohrGBPGsA" name="init_delayBetweenRetriesInMinutesArray" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def List&lt;Integer> list_retry_delays = [];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;log_file.debug(&quot;init_delayBetweenRetriesInMinutesArray&quot;, &quot;Retrieving list of delays between retries from paramter : [&quot; + delayBetweenRetriesInMinutes + &quot;]&quot;);&#xD;&#xA;&#x9;String[] array_retries_str = delayBetweenRetriesInMinutes.split(&quot;,&quot;);&#xD;&#xA;&#x9;for (String one_delay_str : array_retries_str) {&#xD;&#xA;&#x9;&#x9;def Integer one_delay = Integer.valueOf(one_delay_str.trim());&#xD;&#xA;&#x9;&#x9;list_retry_delays.add(one_delay);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_delayBetweenRetriesInMinutesArray&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return list_retry_delays;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xBY9_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xBZN_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutes" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xBZd_yEeuQRohrGBPGsA" name="retryResultCodesList" multiple="true" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBZt_yEeuQRohrGBPGsA" name="emptyList" content="return [];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xBZ9_yEeuQRohrGBPGsA" name="jobError" dataType="_q2xpd9_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBaN_yEeuQRohrGBPGsA" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_q2xBad_yEeuQRohrGBPGsA" type="NONE">
        <targetForm xmi:type="expression:Expression" xmi:id="_q2xBat_yEeuQRohrGBPGsA" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_q2xBa9_yEeuQRohrGBPGsA">
        <targetForm xmi:type="expression:Expression" xmi:id="_q2xBbN_yEeuQRohrGBPGsA" name="caseoverview" content="981aadcf-631a-4742-9507-59e85e93c39e" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBbd_yEeuQRohrGBPGsA" target="_q2wZB9_yEeuQRohrGBPGsA" source="_q2wZA9_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBbt_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBb9_yEeuQRohrGBPGsA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBcN_yEeuQRohrGBPGsA" target="_q2wZHt_yEeuQRohrGBPGsA" source="_q2wZB9_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBcd_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBct_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBc9_yEeuQRohrGBPGsA" target="_q2wZQ9_yEeuQRohrGBPGsA" source="_q2wZHt_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBdN_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBdd_yEeuQRohrGBPGsA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBdt_yEeuQRohrGBPGsA" target="_q2xAF9_yEeuQRohrGBPGsA" source="_q2wZQ9_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBd9_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBeN_yEeuQRohrGBPGsA" name="isAlreadyRunning" content="isAlreadyRunning" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_q2xBed_yEeuQRohrGBPGsA" name="isAlreadyRunning" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBet_yEeuQRohrGBPGsA" target="_q2xAOd_yEeuQRohrGBPGsA" source="_q2xAF9_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBe9_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBfN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBfd_yEeuQRohrGBPGsA" name="Manual job" target="_q2xANd_yEeuQRohrGBPGsA" source="_q2xAOd_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBft_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBf9_yEeuQRohrGBPGsA" name="manualStart" content="manualStart" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_q2xBgN_yEeuQRohrGBPGsA" name="manualStart" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBgd_yEeuQRohrGBPGsA" target="_q2wZHt_yEeuQRohrGBPGsA" source="_q2wZFd_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBgt_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBg9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBhN_yEeuQRohrGBPGsA" target="_q2xAYt_yEeuQRohrGBPGsA" source="_q2wZQ9_yEeuQRohrGBPGsA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBhd_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBht_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBh9_yEeuQRohrGBPGsA" target="_q2xAgd_yEeuQRohrGBPGsA" source="_q2xAYt_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBiN_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBid_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBit_yEeuQRohrGBPGsA" name="Yes" target="_q2xAs9_yEeuQRohrGBPGsA" source="_q2xAyt_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBi9_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBjN_yEeuQRohrGBPGsA" name="nbTasksToRetry > 0" content="nbTasksToRetry > 0" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_q2xBjd_yEeuQRohrGBPGsA" name="nbTasksToRetry" dataType="_q2xpdN_yEeuQRohrGBPGsA">
            <defaultValue xmi:type="expression:Expression" xmi:id="_q2xBjt_yEeuQRohrGBPGsA" name="0" content="0" returnType="java.lang.Integer"/>
          </referencedElements>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBj9_yEeuQRohrGBPGsA" target="_q2xBGt_yEeuQRohrGBPGsA" source="_q2xAgd_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBkN_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBkd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBkt_yEeuQRohrGBPGsA" name="No" target="_q2xA7d_yEeuQRohrGBPGsA" source="_q2xAyt_yEeuQRohrGBPGsA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBk9_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBlN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBld_yEeuQRohrGBPGsA" target="_q2xAz9_yEeuQRohrGBPGsA" source="_q2xAs9_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBlt_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBl9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBmN_yEeuQRohrGBPGsA" name="Scheduled job" target="_q2xAPt_yEeuQRohrGBPGsA" source="_q2xAOd_yEeuQRohrGBPGsA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBmd_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBmt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBm9_yEeuQRohrGBPGsA" target="_q2xA7d_yEeuQRohrGBPGsA" source="_q2xAz9_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBnN_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBnd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBnt_yEeuQRohrGBPGsA" target="_q2xAOd_yEeuQRohrGBPGsA" source="_q2xA7d_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBn9_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBoN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBod_yEeuQRohrGBPGsA" target="_q2xAyt_yEeuQRohrGBPGsA" source="_q2xBGt_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBot_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBo9_yEeuQRohrGBPGsA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBpN_yEeuQRohrGBPGsA" name="Delay required" target="_q2xBOd_yEeuQRohrGBPGsA" source="_q2xAPt_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBpd_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBpt_yEeuQRohrGBPGsA" name="delayBeforeNextMonitoringCycleInMinutes > 0" content="return (! reachedMonitoringInstanceEnd) &amp;&amp; (delayBeforeNextMonitoringCycleInSeconds > 0);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_q2xBp9_yEeuQRohrGBPGsA" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
          <referencedElements xmi:type="process:Data" xmi:id="_q2xBqN_yEeuQRohrGBPGsA" name="reachedMonitoringInstanceEnd" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBqd_yEeuQRohrGBPGsA" target="_q2wZHt_yEeuQRohrGBPGsA" source="_q2xBOd_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBqt_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBq9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBrN_yEeuQRohrGBPGsA" name="No delay" target="_q2wZHt_yEeuQRohrGBPGsA" source="_q2xAPt_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBrd_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBrt_yEeuQRohrGBPGsA" name="notEndedAndNoDelay" content="return (! reachedMonitoringInstanceEnd) &amp;&amp; (delayBeforeNextMonitoringCycleInSeconds &lt;= 0);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_q2xBr9_yEeuQRohrGBPGsA" name="delayBeforeNextMonitoringCycleInSeconds" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
          <referencedElements xmi:type="process:Data" xmi:id="_q2xBsN_yEeuQRohrGBPGsA" name="reachedMonitoringInstanceEnd" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xBsd_yEeuQRohrGBPGsA" name="End of monitoring instance" target="_q2xBQN_yEeuQRohrGBPGsA" source="_q2xAPt_yEeuQRohrGBPGsA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xBst_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xBs9_yEeuQRohrGBPGsA" name="reachedMonitoringInstanceEnd" content="reachedMonitoringInstanceEnd" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_q2xBtN_yEeuQRohrGBPGsA" name="reachedMonitoringInstanceEnd" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
        </condition>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_q2xBtd_yEeuQRohrGBPGsA" documentation="Application administrator" name="Administrator" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_q2xBtt_yEeuQRohrGBPGsA" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_q2xBt9_yEeuQRohrGBPGsA">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_q2xBuN_yEeuQRohrGBPGsA" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_q2xBud_yEeuQRohrGBPGsA"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_q2xBut_yEeuQRohrGBPGsA"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_q2xBu9_yEeuQRohrGBPGsA">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_q2xBvN_yEeuQRohrGBPGsA"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_q2xBvd_yEeuQRohrGBPGsA" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xBvt_yEeuQRohrGBPGsA" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xBv9_yEeuQRohrGBPGsA" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_DyZq8IExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_Dy-5wIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xBwt_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xBw9_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xBxN_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xBxd_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xBxt_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xBx9_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xByN_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xByd_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xByt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xBy9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xBzN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xBzd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xBzt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xBz9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB0N_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB0d_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB0t_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB09_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_gG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_gW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_gm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_g2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_hG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_hW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_hm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_h2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xB1N_yEeuQRohrGBPGsA" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xB1d_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xB1t_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB19_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB2N_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB2d_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB2t_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB29_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB3N_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB3d_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB3t_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB39_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB4N_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xB4d_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnIN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnId_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnIt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnI9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnJN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_iG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_iW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_im-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_i2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_jG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_jW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_jm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tvE_j2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnJd_yEeuQRohrGBPGsA" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnJt_yEeuQRohrGBPGsA" name="logClass" value="MonitoringFailedTasks" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnJ9_yEeuQRohrGBPGsA" name="statusLogMonitoringRunning" value="RUNNING" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnKN_yEeuQRohrGBPGsA" name="monitorInstanceDurationInHours" value="4" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnKd_yEeuQRohrGBPGsA" name="statusLogMonitoringStarted" value="STARTED" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnKt_yEeuQRohrGBPGsA" name="maxNumberOfRetries" value="32" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnK9_yEeuQRohrGBPGsA" name="monitoringIntervalInMinutes" value="2" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnLN_yEeuQRohrGBPGsA" name="statusLogMonitoringComplete" value="COMPLETE" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnLd_yEeuQRohrGBPGsA" name="statusLogMonitoringAborted" value="ABORTED" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnLt_yEeuQRohrGBPGsA" name="oldestNewTaskDetectedInDays" value="4" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnL9_yEeuQRohrGBPGsA" name="monitoringTimeStartHour" value="7" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnMN_yEeuQRohrGBPGsA" name="monitoringTimeEndHour" value="21" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnMd_yEeuQRohrGBPGsA" name="monitoringDays" value="MON-FRI" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnMt_yEeuQRohrGBPGsA" name="maxNumberOfRetriedTasksPerCycle" value="100" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnM9_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutes" value="2, 2, 2, 4, 5, 15" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnNN_yEeuQRohrGBPGsA" name="statusLogMonitoringError" value="ERROR" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_q2xnNd_yEeuQRohrGBPGsA" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_q2xnNt_yEeuQRohrGBPGsA">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_q2xnN9_yEeuQRohrGBPGsA" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_q2xnON_yEeuQRohrGBPGsA"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_q2xnOd_yEeuQRohrGBPGsA"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_q2xnOt_yEeuQRohrGBPGsA">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_q2xnO9_yEeuQRohrGBPGsA"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_q2xnPN_yEeuQRohrGBPGsA" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnPd_yEeuQRohrGBPGsA" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnPt_yEeuQRohrGBPGsA" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_Dzl9wIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_D0LMkIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnQd_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnQt_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnQ9_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnRN_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnRd_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnRt_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnR9_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnSN_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnSd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnSt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnS9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnTN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnTd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnTt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnT9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnUN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnUd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnUt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOoG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOoW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOom-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOo2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOpG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOpW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOpm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOp2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnU9_yEeuQRohrGBPGsA" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnVN_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnVd_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnVt_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnV9_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnWN_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnWd_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnWt_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnW9_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnXN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnXd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnXt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnX9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnYN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnYd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnYt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnY9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnZN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnZd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOqG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOqW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOqm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOq2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOrG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOrW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOrm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_txsOr2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnZt_yEeuQRohrGBPGsA" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnZ9_yEeuQRohrGBPGsA" name="logClass" value="MonitoringFailedTasks" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnaN_yEeuQRohrGBPGsA" name="statusLogMonitoringRunning" value="RUNNING" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnad_yEeuQRohrGBPGsA" name="monitorInstanceDurationInHours" value="4" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnat_yEeuQRohrGBPGsA" name="statusLogMonitoringStarted" value="STARTED" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xna9_yEeuQRohrGBPGsA" name="maxNumberOfRetries" value="32" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnbN_yEeuQRohrGBPGsA" name="monitoringIntervalInMinutes" value="2" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnbd_yEeuQRohrGBPGsA" name="statusLogMonitoringComplete" value="COMPLETE" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnbt_yEeuQRohrGBPGsA" name="statusLogMonitoringAborted" value="ABORTED" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnb9_yEeuQRohrGBPGsA" name="oldestNewTaskDetectedInDays" value="4" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xncN_yEeuQRohrGBPGsA" name="monitoringTimeStartHour" value="7" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xncd_yEeuQRohrGBPGsA" name="monitoringTimeEndHour" value="21" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnct_yEeuQRohrGBPGsA" name="monitoringDays" value="MON-FRI" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnc9_yEeuQRohrGBPGsA" name="maxNumberOfRetriedTasksPerCycle" value="100" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xndN_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutes" value="2, 2, 2, 4, 5, 15" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xndd_yEeuQRohrGBPGsA" name="statusLogMonitoringError" value="ERROR" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_q2xndt_yEeuQRohrGBPGsA" name="sgdbf-prod" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_q2xnd9_yEeuQRohrGBPGsA">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_q2xneN_yEeuQRohrGBPGsA" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_q2xned_yEeuQRohrGBPGsA"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_q2xnet_yEeuQRohrGBPGsA"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_q2xne9_yEeuQRohrGBPGsA">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_q2xnfN_yEeuQRohrGBPGsA"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_q2xnfd_yEeuQRohrGBPGsA" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnft_yEeuQRohrGBPGsA" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnf9_yEeuQRohrGBPGsA" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_D0xCcIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_D1TN8IExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xngt_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xng9_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnhN_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnhd_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnht_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnh9_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xniN_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnid_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnit_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xni9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnjN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnjd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnjt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnj9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnkN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnkd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnkt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnk9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6MG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6MW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6Mm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6M2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6NG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6NW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6Nm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6N2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnlN_yEeuQRohrGBPGsA" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnld_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnlt_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnl9_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnmN_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnmd_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnmt_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnm9_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnnN_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnnd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnnt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnn9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnoN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnod_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnot_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xno9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnpN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnpd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xnpt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6OG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6OW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6Om-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6O2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6PG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6PW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6Pm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_tzm6P2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xnp9_yEeuQRohrGBPGsA" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnqN_yEeuQRohrGBPGsA" name="logClass" value="MonitoringFailedTasks" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnqd_yEeuQRohrGBPGsA" name="statusLogMonitoringRunning" value="RUNNING" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnqt_yEeuQRohrGBPGsA" name="monitorInstanceDurationInHours" value="4" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnq9_yEeuQRohrGBPGsA" name="statusLogMonitoringStarted" value="STARTED" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnrN_yEeuQRohrGBPGsA" name="maxNumberOfRetries" value="32" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnrd_yEeuQRohrGBPGsA" name="monitoringIntervalInMinutes" value="2" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnrt_yEeuQRohrGBPGsA" name="statusLogMonitoringComplete" value="COMPLETE" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnr9_yEeuQRohrGBPGsA" name="statusLogMonitoringAborted" value="ABORTED" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnsN_yEeuQRohrGBPGsA" name="oldestNewTaskDetectedInDays" value="4" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnsd_yEeuQRohrGBPGsA" name="monitoringTimeStartHour" value="7" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnst_yEeuQRohrGBPGsA" name="monitoringTimeEndHour" value="21" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xns9_yEeuQRohrGBPGsA" name="monitoringDays" value="MON-FRI" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xntN_yEeuQRohrGBPGsA" name="maxNumberOfRetriedTasksPerCycle" value="100" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xntd_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutes" value="2, 2, 2, 4, 5, 15" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xntt_yEeuQRohrGBPGsA" name="statusLogMonitoringError" value="ERROR" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnt9_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnuN_yEeuQRohrGBPGsA" name="statusLogMonitoringRunning" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when running"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnud_yEeuQRohrGBPGsA" name="monitorInstanceDurationInHours" typeClassname="java.lang.Integer" description="Number of hours we keep the same monitoring process instance"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnut_yEeuQRohrGBPGsA" name="statusLogMonitoringStarted" typeClassname="java.lang.String" description="Initial value of LogTasksMonitoring status field when started"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnu9_yEeuQRohrGBPGsA" name="maxNumberOfRetries" typeClassname="java.lang.Integer" description="Maximum number of retries for one task"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnvN_yEeuQRohrGBPGsA" name="monitoringIntervalInMinutes" typeClassname="java.lang.Integer" description="Number of minutes between two monitoring cycles"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnvd_yEeuQRohrGBPGsA" name="statusLogMonitoringComplete" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when complete"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnvt_yEeuQRohrGBPGsA" name="statusLogMonitoringAborted" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when aborted"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnv9_yEeuQRohrGBPGsA" name="oldestNewTaskDetectedInDays" typeClassname="java.lang.Integer" description="Number of days corresponding to the oldest task considered for retry"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnwN_yEeuQRohrGBPGsA" name="monitoringTimeStartHour" typeClassname="java.lang.Integer" description="Daily hour start (0-23) for monitoring"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnwd_yEeuQRohrGBPGsA" name="monitoringTimeEndHour" typeClassname="java.lang.Integer" description="Daily hour end (0-23 )for monitoring"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnwt_yEeuQRohrGBPGsA" name="monitoringDays" typeClassname="java.lang.String" description="Range of days for monitoring (MON-FRI for Monday to Friday)"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnw9_yEeuQRohrGBPGsA" name="maxNumberOfRetriedTasksPerCycle" typeClassname="java.lang.Integer" description="Maximum number of tasks retried per monitoring cycle"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnxN_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutes" typeClassname="java.lang.String" description="Comma separated list indicating the number of minutes to wait between each retry : first number indicates delay after first retry, second number the delay after second retry, etc. Last number is the delay applied until the max number of retries is reached"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xnxd_yEeuQRohrGBPGsA" name="statusLogMonitoringError" typeClassname="java.lang.String" description="Value of LogTasksMonitoring status field when terminated with error"/>
      <contract xmi:type="process:Contract" xmi:id="_q2xnxt_yEeuQRohrGBPGsA"/>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xnx9_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xnyN_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xnyd_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xnyt_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xny9_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xnzN_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xnzd_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xnzt_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xnz9_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xn0N_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xn0d_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xn0t_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xn09_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xn1N_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xn1d_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <elements xmi:type="process:Pool" xmi:id="_q2xn1t_yEeuQRohrGBPGsA" name="RetryFailedTask" version="3.0">
      <elements xmi:type="process:StartEvent" xmi:id="_q2xn19_yEeuQRohrGBPGsA" name="Start" outgoing="_q2xo0N_yEeuQRohrGBPGsA">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xn2N_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xn2d_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_q2xn2t_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_q2xn29_yEeuQRohrGBPGsA" name="Check Activity State" outgoing="_q2xo09_yEeuQRohrGBPGsA _q2xo59_yEeuQRohrGBPGsA" incoming="_q2xo6t_yEeuQRohrGBPGsA">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xn3N_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xn3d_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_q2xn3t_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <connectors xmi:type="process:Connector" xmi:id="_q2xn39_yEeuQRohrGBPGsA" name="CheckActivityState" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_q2xn4N_yEeuQRohrGBPGsA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xn4d_yEeuQRohrGBPGsA" key="script">
              <expression xmi:type="expression:Expression" xmi:id="_q2xn4t_yEeuQRohrGBPGsA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xn49_yEeuQRohrGBPGsA" key="variables"/>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xn5N_yEeuQRohrGBPGsA" key="fakeScriptExpression">
              <expression xmi:type="expression:Expression" xmi:id="_q2xn5d_yEeuQRohrGBPGsA" name="CheckActivityState" content="import com.bonitasoft.engine.api.ProcessAPI&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.pop3p.groovy.ActivityState;&#xD;&#xA;&#xD;&#xA;def String task_state =&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;def ProcessAPI process_api = apiAccessor.getProcessAPI();&#xD;&#xA;&#x9;task_state = ActivityState.getActivityState(failedTaskId, taskStateNotFound, process_api, log_file);&#xD;&#xA;&#x9;log_file.info(&quot;CheckActivityState(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Current activity state is [&quot; + task_state + &quot;]&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;CheckActivityState(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return task_state;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                <referencedElements xmi:type="expression:Expression" xmi:id="_q2xn5t_yEeuQRohrGBPGsA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="process:Data" xmi:id="_q2xn59_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xn6N_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xn6d_yEeuQRohrGBPGsA" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
              </expression>
            </parameters>
          </configuration>
          <outputs xmi:type="expression:Operation" xmi:id="_q2xn6t_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xn69_yEeuQRohrGBPGsA" name="taskState" content="taskState" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xn7N_yEeuQRohrGBPGsA" name="taskState" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xn7d_yEeuQRohrGBPGsA" name="result" content="return result;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="definition:Output" xmi:id="_q2xn7t_yEeuQRohrGBPGsA" name="result" type="java.lang.Object"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xn79_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </outputs>
        </connectors>
        <operations xmi:type="expression:Operation" xmi:id="_q2xn8N_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xn8d_yEeuQRohrGBPGsA" name="isFailed" content="isFailed" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xn8t_yEeuQRohrGBPGsA" name="isFailed" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xn89_yEeuQRohrGBPGsA" name="setIsFailed" content="import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def is_failed = false;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if ((taskState != null) &amp;&amp; taskState.equalsIgnoreCase(ActivityStates.FAILED_STATE)) {&#xD;&#xA;&#x9;&#x9;is_failed = true;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsFailed(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task with state [&quot; + taskState + &quot;] is not longer failed, do not retry it&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsFailed(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#x9;&#xD;&#xA;return is_failed;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xn9N_yEeuQRohrGBPGsA" name="taskState" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xn9d_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xn9t_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xn99_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_q2xn-N_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xn-d_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xn-t_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xn-9_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_q2xn_N_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_q2xn_d_yEeuQRohrGBPGsA" name="Retry Task" outgoing="_q2xo19_yEeuQRohrGBPGsA" incoming="_q2xo09_yEeuQRohrGBPGsA">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xn_t_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xn_9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_q2xoAN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <connectors xmi:type="process:Connector" xmi:id="_q2xoAd_yEeuQRohrGBPGsA" name="retryTask" definitionId="scripting-groovy-script" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_q2xoAt_yEeuQRohrGBPGsA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xoA9_yEeuQRohrGBPGsA" key="script">
              <expression xmi:type="expression:Expression" xmi:id="_q2xoBN_yEeuQRohrGBPGsA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xoBd_yEeuQRohrGBPGsA" key="variables"/>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xoBt_yEeuQRohrGBPGsA" key="fakeScriptExpression">
              <expression xmi:type="expression:Expression" xmi:id="_q2xoB9_yEeuQRohrGBPGsA" name="RetryTask" content="import com.bonitasoft.engine.api.ProcessAPI&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Retrying task&#xD;&#xA;&#x9;log_file.info(&quot;RetryTask(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Retrying task...&quot;);&#xD;&#xA;&#x9;def ProcessAPI process_api = apiAccessor.getProcessAPI();&#xD;&#xA;&#x9;process_api.retryTask(failedTaskId);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;RetryTask(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                <referencedElements xmi:type="process:Data" xmi:id="_q2xoCN_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoCd_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_q2xoCt_yEeuQRohrGBPGsA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
              </expression>
            </parameters>
          </configuration>
          <outputs xmi:type="expression:Operation" xmi:id="_q2xoC9_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoDN_yEeuQRohrGBPGsA"/>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoDd_yEeuQRohrGBPGsA" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
              <referencedElements xmi:type="definition:Output" xmi:id="_q2xoDt_yEeuQRohrGBPGsA" name="result" type="java.lang.Object"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xoD9_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </outputs>
        </connectors>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoEN_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoEd_yEeuQRohrGBPGsA" name="retryStartTime" content="retryStartTime" type="TYPE_VARIABLE" returnType="java.time.OffsetDateTime">
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2xoEt_yEeuQRohrGBPGsA" name="retryStartTime" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoE9_yEeuQRohrGBPGsA" name="setRetryStartTime" content="import java.time.OffsetDateTime&#xD;&#xA;&#xD;&#xA;return OffsetDateTime.now();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoFN_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoFd_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoFt_yEeuQRohrGBPGsA" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xoF9_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoGN_yEeuQRohrGBPGsA" name="incrementNbRetries" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def int nb_retries = 0;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;nb_retries = taskToRetry.getNbRetries() + 1;&#xD;&#xA;&#x9;log_file.info(&quot;incrementNbRetries&quot;, &quot;Retrying task &quot; + String.valueOf(taskToRetry.getTaskId() + &quot; : attempt n°&quot; + String.valueOf(nb_retries)));&#xD;&#xA;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;incrementNbRetries&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return nb_retries;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoGd_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xoGt_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoG9_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setNbRetries">
            <inputTypes>java.lang.Integer</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoHN_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoHd_yEeuQRohrGBPGsA" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xoHt_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoH9_yEeuQRohrGBPGsA" name="retryStartTime" content="retryStartTime" interpreter="GROOVY" type="TYPE_VARIABLE" returnType="java.time.OffsetDateTime">
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2xoIN_yEeuQRohrGBPGsA" name="retryStartTime" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoId_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setLastRetryDate">
            <inputTypes>java.time.OffsetDateTime</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoIt_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoI9_yEeuQRohrGBPGsA" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xoJN_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoJd_yEeuQRohrGBPGsA" name="true" content="return true;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean"/>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoJt_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setIsRetrying">
            <inputTypes>java.lang.Boolean</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoJ9_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoKN_yEeuQRohrGBPGsA" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xoKd_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoKt_yEeuQRohrGBPGsA" name="setNextRetryDate" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import java.time.OffsetDateTime&#xD;&#xA;&#xD;&#xA;def OffsetDateTime next_retry_time = OffsetDateTime.now();&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;def int delay_minutes = 0;&#xD;&#xA;&#x9;def int nb_retries = taskToRetry.getNbRetries();&#xD;&#xA;&#x9;def int nb_configured_delays = delayBetweenRetriesInMinutesArray.size();&#xD;&#xA;&#x9;if (nb_retries &lt;= nb_configured_delays) {&#xD;&#xA;&#x9;&#x9;delay_minutes = delayBetweenRetriesInMinutesArray.get(nb_retries-1);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;if (nb_configured_delays > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;delay_minutes = delayBetweenRetriesInMinutesArray.get(nb_configured_delays-1);&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;// Nothing configured, applying a default&#xD;&#xA;&#x9;&#x9;&#x9;delay_minutes = 3;&#xD;&#xA;&#x9;&#x9;&#x9;log_file.error(&quot;setNextRetryDate&quot;, &quot;Missing configuration of delays between retries, using default delay : &quot; + String.valueOf(delay_minutes));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Adding delay&#xD;&#xA;&#x9;log_file.debug(&quot;setNextRetryDate&quot;, &quot;Retry count is &quot; + String.valueOf(nb_retries) + &quot;, delay before next retry :&quot; + String.valueOf(delay_minutes));&#xD;&#xA;&#x9;next_retry_time = next_retry_time.plusMinutes(delay_minutes);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setNextRetryDate&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return next_retry_time;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoK9_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xoLN_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoLd_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutesArray" multiple="true" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoLt_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setNextRetryDate">
            <inputTypes>java.time.OffsetDateTime</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoL9_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoMN_yEeuQRohrGBPGsA" name="isRetried" content="isRetried" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoMd_yEeuQRohrGBPGsA" name="isRetried" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoMt_yEeuQRohrGBPGsA" name="true" content="true" returnType="java.lang.Boolean"/>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoM9_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_q2xoNN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xoNd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xoNt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xoN9_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_q2xoON_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:IntermediateCatchTimerEvent" xmi:id="_q2xoOd_yEeuQRohrGBPGsA" name="Wait for Task completion" outgoing="_q2xo2t_yEeuQRohrGBPGsA" incoming="_q2xo19_yEeuQRohrGBPGsA _q2xo3d_yEeuQRohrGBPGsA">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xoOt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xoO9_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_q2xoPN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xoPd_yEeuQRohrGBPGsA" name="Number of seconds" content="return 1000L * intervalToCheckTaskCompletionInSeconds;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoPt_yEeuQRohrGBPGsA" name="intervalToCheckTaskCompletionInSeconds" typeClassname="java.lang.Integer" description="Number of seconds between 2 checks of task completion"/>
        </condition>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_q2xoP9_yEeuQRohrGBPGsA" name="Check Task completion" outgoing="_q2xo3d_yEeuQRohrGBPGsA _q2xo4d_yEeuQRohrGBPGsA" incoming="_q2xo2t_yEeuQRohrGBPGsA">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xoQN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xoQd_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_q2xoQt_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <data xmi:type="process:Data" xmi:id="_q2xoQ9_yEeuQRohrGBPGsA" name="retryTaskDurationInSeconds" dataType="_q2xpdd_yEeuQRohrGBPGsA">
          <defaultValue xmi:type="expression:Expression" xmi:id="_q2xoRN_yEeuQRohrGBPGsA" name="init_retryTaskDurationInSeconds()" content="import java.time.OffsetDateTime&#xD;&#xA;import java.time.temporal.ChronoUnit;&#xD;&#xA;&#xD;&#xA;def long duration_retry = 0L;&#xD;&#xA;&#xD;&#xA;def time_now = OffsetDateTime.now();&#xD;&#xA;duration_retry = retryStartTime.until(time_now, ChronoUnit.SECONDS);&#xD;&#xA;return duration_retry;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
            <referencedElements xmi:type="process:JavaObjectData" xmi:id="_q2xoRd_yEeuQRohrGBPGsA" name="retryStartTime" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime"/>
          </defaultValue>
        </data>
        <connectors xmi:type="process:Connector" xmi:id="_q2xoRt_yEeuQRohrGBPGsA" name="CheckTaskCompletion" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
          <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_q2xoR9_yEeuQRohrGBPGsA" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.8.3-001">
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xoSN_yEeuQRohrGBPGsA" key="script">
              <expression xmi:type="expression:Expression" xmi:id="_q2xoSd_yEeuQRohrGBPGsA" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
            </parameters>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xoSt_yEeuQRohrGBPGsA" key="variables"/>
            <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_q2xoS9_yEeuQRohrGBPGsA" key="fakeScriptExpression">
              <expression xmi:type="expression:Expression" xmi:id="_q2xoTN_yEeuQRohrGBPGsA" name="CheckTaskCompletion" content="import com.bonitasoft.engine.api.ProcessAPI&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.pop3p.groovy.ActivityState;&#xD;&#xA;&#xD;&#xA;def String task_state =&quot;&quot;;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;def ProcessAPI process_api = apiAccessor.getProcessAPI();&#xD;&#xA;&#x9;task_state = ActivityState.getActivityState(failedTaskId, taskStateNotFound, process_api, log_file);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;log_file.info(&quot;CheckTaskCompletion(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Current activity state is [&quot; + task_state + &quot;]&quot;);&#xD;&#xA;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;CheckTaskCompletion(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return task_state;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoTd_yEeuQRohrGBPGsA" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
                <referencedElements xmi:type="process:Data" xmi:id="_q2xoTt_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoT9_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_q2xoUN_yEeuQRohrGBPGsA" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
              </expression>
            </parameters>
          </configuration>
          <outputs xmi:type="expression:Operation" xmi:id="_q2xoUd_yEeuQRohrGBPGsA">
            <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoUt_yEeuQRohrGBPGsA" name="taskState" content="taskState" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_q2xoU9_yEeuQRohrGBPGsA" name="taskState" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoVN_yEeuQRohrGBPGsA" name="result" content="return result;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="definition:Output" xmi:id="_q2xoVd_yEeuQRohrGBPGsA" name="result" type="java.lang.Object"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_q2xoVt_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
          </outputs>
        </connectors>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoV9_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoWN_yEeuQRohrGBPGsA" name="isExecuting" content="isExecuting" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoWd_yEeuQRohrGBPGsA" name="isExecuting" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoWt_yEeuQRohrGBPGsA" name="setIsExecuting" content="import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def is_executing = false;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (taskState.equalsIgnoreCase(ActivityStates.EXECUTING_STATE)) {&#xD;&#xA;&#x9;&#x9;is_executing = true;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsExecuting(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task with state [&quot; + taskState + &quot;] is not longer executing&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsExecuting(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#x9;&#xD;&#xA;return is_executing;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoW9_yEeuQRohrGBPGsA" name="taskState" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoXN_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoXd_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoXt_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoX9_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoYN_yEeuQRohrGBPGsA" name="isCompleted" content="isCompleted" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoYd_yEeuQRohrGBPGsA" name="isCompleted" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoYt_yEeuQRohrGBPGsA" name="setIsCompleted" content="import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def is_completed = false;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (taskState.equalsIgnoreCase(ActivityStates.COMPLETED_STATE)&#xD;&#xA;&#x9;&#x9;|| taskState.equalsIgnoreCase(taskStateNotFound)) {&#xD;&#xA;&#x9;&#x9;is_completed = true;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsCompleted(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task with state [&quot; + taskState + &quot;] is successfully retried&quot;);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsCompleted(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task with state [&quot; + taskState + &quot;] is not completed&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsCompleted(&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#x9;&#xD;&#xA;return is_completed;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoY9_yEeuQRohrGBPGsA" name="taskState" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoZN_yEeuQRohrGBPGsA" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoZd_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoZt_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoZ9_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoaN_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoad_yEeuQRohrGBPGsA" name="keepWaiting" content="keepWaiting" type="TYPE_VARIABLE" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoat_yEeuQRohrGBPGsA" name="keepWaiting" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoa9_yEeuQRohrGBPGsA" name="setKeepWaiting" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def boolean keep_waiting=false;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (! isExecuting) {&#xD;&#xA;&#x9;&#x9;log_file.debug(&quot;setKeepWaiting (&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Task is no longer executing, do not keep waiting for task completion&quot;);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;def Long max_wait_time = new Long(maxWaitTimeForCompletionInSeconds)&#xD;&#xA;&#x9;&#x9;if (retryTaskDurationInSeconds &lt; max_wait_time) {&#xD;&#xA;&#x9;&#x9;&#x9;keep_waiting = true;&#xD;&#xA;&#x9;&#x9;&#x9;log_file.debug(&quot;setKeepWaiting (&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Keep waiting for completion, curent duration=&quot; + String.valueOf(retryTaskDurationInSeconds) + &quot;s&quot;);&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;log_file.debug(&quot;setKeepWaiting (&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, &quot;Maximum wait time for completion is reached : &quot; + String.valueOf(retryTaskDurationInSeconds) + &quot;s&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setKeepWaiting (&quot; + String.valueOf(failedTaskId) + &quot;)&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return keep_waiting;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xobN_yEeuQRohrGBPGsA" name="maxWaitTimeForCompletionInSeconds" typeClassname="java.lang.Integer" description="Maximum number of seconds we keep waiting for completion of the task"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xobd_yEeuQRohrGBPGsA" name="retryTaskDurationInSeconds" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xobt_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xob9_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xocN_yEeuQRohrGBPGsA" name="isExecuting" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xocd_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_q2xoct_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xoc9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xodN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xodd_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_q2xodt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_q2xod9_yEeuQRohrGBPGsA" name="Update task status" outgoing="_q2xo5N_yEeuQRohrGBPGsA" incoming="_q2xo4d_yEeuQRohrGBPGsA _q2xo59_yEeuQRohrGBPGsA">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xoeN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xoed_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_q2xoet_yEeuQRohrGBPGsA" name="descriptionAfterCompletion()" content="def String desc=&quot;Task &quot; + String.valueOf(failedTaskId) + &quot; is now with state [&quot; + taskState + &quot;]&quot;&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_q2xoe9_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
          <referencedElements xmi:type="process:Data" xmi:id="_q2xofN_yEeuQRohrGBPGsA" name="taskState" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
        </stepSummary>
        <operations xmi:type="expression:Operation" xmi:id="_q2xofd_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoft_yEeuQRohrGBPGsA" name="retryResultCode" content="retryResultCode" type="TYPE_VARIABLE" returnType="java.lang.Integer">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xof9_yEeuQRohrGBPGsA" documentation="0: not retried, not completed&#xD;&#xA;1: not retried, completed&#xD;&#xA;10: retried, not completed&#xD;&#xA;11: retried, completed" name="retryResultCode" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xogN_yEeuQRohrGBPGsA" name="setResultCode" content="def int result_code = 0;&#xD;&#xA;&#xD;&#xA;if (isRetried) {&#xD;&#xA;&#x9;result_code += 10;&#xD;&#xA;}&#xD;&#xA;if (isCompleted) {&#xD;&#xA;&#x9;result_code += 1;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return result_code;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xogd_yEeuQRohrGBPGsA" name="isCompleted" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xogt_yEeuQRohrGBPGsA" name="isRetried" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xog9_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_q2xohN_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xohd_yEeuQRohrGBPGsA" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xoht_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xoh9_yEeuQRohrGBPGsA" name="taskState" content="taskState" type="TYPE_VARIABLE">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xoiN_yEeuQRohrGBPGsA" name="taskState" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoid_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setStatus">
            <inputTypes>java.lang.String</inputTypes>
          </operator>
        </operations>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoit_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xoi9_yEeuQRohrGBPGsA" name="taskToRetry" content="taskToRetry" type="TYPE_VARIABLE" returnType="com.sgdbf.model.LogFailedTasks">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xojN_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xojd_yEeuQRohrGBPGsA" name="setIsRetrying" content="import org.bonitasoft.engine.bpm.flownode.ActivityStates;&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;&#xD;&#xA;def is_retrying = true;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;if (isCompleted) {&#xD;&#xA;&#x9;&#x9;is_retrying = false;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsRetrying&quot;, &quot;Task &quot; + String.valueOf(failedTaskId) + &quot; is completed, it will no longer be retried&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;} else if ((taskState == null)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(ActivityStates.ABORTED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(ActivityStates.CANCELLED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(ActivityStates.SKIPPED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(ActivityStates.COMPLETED_STATE)&#xD;&#xA;&#x9;&#x9;&#x9;|| taskState.equalsIgnoreCase(taskStateNotFound)) {&#xD;&#xA;&#x9;&#x9;is_retrying = false;&#xD;&#xA;&#x9;&#x9;log_file.info(&quot;setIsRetrying&quot;, &quot;Task &quot; + String.valueOf(failedTaskId) + &quot; with state [&quot; + taskState + &quot;] will no longer be retried&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;// CFR 29/10/2020 - Correction UAT Lot 2 Sprint 1&#xD;&#xA;&#x9;&#x9;int nb_retries = taskToRetry.nbRetries;&#xD;&#xA;&#x9;&#x9;if (nb_retries >= maxNumberOfRetries) {&#xD;&#xA;&#x9;&#x9;&#x9;is_retrying = false;&#xD;&#xA;&#x9;&#x9;&#x9;log_file.info(&quot;setIsRetrying&quot;, &quot;Task &quot; + String.valueOf(failedTaskId) + &quot; with state [&quot; + taskState + &quot;] will no longer be retried as it has already been retried &quot; + String.valueOf(nb_retries) + &quot; times, i.e. more or equal to the max number of attempt (&quot; + String.valueOf(maxNumberOfRetries) + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;setIsRetrying&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return is_retrying;&#xD;&#xA;&#x9;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xojt_yEeuQRohrGBPGsA" name="maxNumberOfRetries" dataType="_q2xpdN_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xoj9_yEeuQRohrGBPGsA" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xokN_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xokd_yEeuQRohrGBPGsA" name="taskState" dataType="_q2xpd9_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xokt_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="process:Data" xmi:id="_q2xok9_yEeuQRohrGBPGsA" name="isCompleted" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
            <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xolN_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xold_yEeuQRohrGBPGsA" type="JAVA_METHOD" expression="setIsRetrying">
            <inputTypes>java.lang.Boolean</inputTypes>
          </operator>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_q2xolt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xol9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xomN_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xomd_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_q2xomt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:EndEvent" xmi:id="_q2xom9_yEeuQRohrGBPGsA" name="End Retry Task" incoming="_q2xo5N_yEeuQRohrGBPGsA">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xonN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xond_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_q2xont_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_q2xon9_yEeuQRohrGBPGsA" name="Get Failed Task Id" outgoing="_q2xo6t_yEeuQRohrGBPGsA" incoming="_q2xo0N_yEeuQRohrGBPGsA">
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_q2xooN_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_q2xood_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_q2xoot_yEeuQRohrGBPGsA" name="" content="" returnTypeFixed="true"/>
        <operations xmi:type="expression:Operation" xmi:id="_q2xoo9_yEeuQRohrGBPGsA">
          <leftOperand xmi:type="expression:Expression" xmi:id="_q2xopN_yEeuQRohrGBPGsA" name="failedTaskId" content="failedTaskId" type="TYPE_VARIABLE" returnType="java.lang.Long">
            <referencedElements xmi:type="process:Data" xmi:id="_q2xopd_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA"/>
          </leftOperand>
          <rightOperand xmi:type="expression:Expression" xmi:id="_q2xopt_yEeuQRohrGBPGsA" name="getTaskId" content="return taskToRetry.getTaskId();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_q2xop9_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks"/>
          </rightOperand>
          <operator xmi:type="expression:Operator" xmi:id="_q2xoqN_yEeuQRohrGBPGsA" type="ASSIGNMENT"/>
        </operations>
        <loopCondition xmi:type="expression:Expression" xmi:id="_q2xoqd_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_q2xoqt_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_q2xoq9_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_q2xorN_yEeuQRohrGBPGsA" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_q2xord_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <data xmi:type="process:BusinessObjectData" xmi:id="_q2xort_yEeuQRohrGBPGsA" name="taskToRetry" dataType="_q2xpet_yEeuQRohrGBPGsA" className="com.sgdbf.model.LogFailedTasks">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xor9_yEeuQRohrGBPGsA" name="init_taskToRetry" content="import com.sgdbf.pop3p.groovy.LogFile;&#xD;&#xA;import com.sgdbf.model.LogFailedTasks;&#xD;&#xA;&#xD;&#xA;def LogFailedTasks task_to_rety = null;&#xD;&#xA;&#xD;&#xA;LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;log_file.info(&quot;init_taskToRetry&quot;, &quot;Retrieving task to retry with persistence id &quot; + inputFailedTaskPersistenceId);&#xD;&#xA;&#x9;task_to_rety = logFailedTasksDAO.findByPersistenceId(Long.valueOf(inputFailedTaskPersistenceId));&#xD;&#xA;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;log_file.exception(&quot;init_taskToRetry&quot;, e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return task_to_rety;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.sgdbf.model.LogFailedTasks">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_q2xosN_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
          <referencedElements xmi:type="process:ContractInput" xmi:id="_q2xosd_yEeuQRohrGBPGsA" name="inputFailedTaskPersistenceId">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_q2xost_yEeuQRohrGBPGsA"/>
          </referencedElements>
          <referencedElements xmi:type="expression:Expression" xmi:id="_q2xos9_yEeuQRohrGBPGsA" name="logFailedTasksDAO" content="logFailedTasksDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.LogFailedTasksDAO" returnTypeFixed="true"/>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xotN_yEeuQRohrGBPGsA" name="isFailed" dataType="_q2xpct_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xotd_yEeuQRohrGBPGsA" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xott_yEeuQRohrGBPGsA" name="isExecuting" dataType="_q2xpct_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xot9_yEeuQRohrGBPGsA" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xouN_yEeuQRohrGBPGsA" name="taskState" dataType="_q2xpd9_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xoud_yEeuQRohrGBPGsA" content=""/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xout_yEeuQRohrGBPGsA" name="keepWaiting" dataType="_q2xpct_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xou9_yEeuQRohrGBPGsA" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xovN_yEeuQRohrGBPGsA" name="delayBetweenRetriesInMinutesArray" multiple="true" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xovd_yEeuQRohrGBPGsA" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xovt_yEeuQRohrGBPGsA" documentation="0: not retried, not completed&#xD;&#xA;1: not retried, completed&#xD;&#xA;10: retried, not completed&#xD;&#xA;11: retried, completed" name="retryResultCode" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xov9_yEeuQRohrGBPGsA" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xowN_yEeuQRohrGBPGsA" name="isRetried" dataType="_q2xpct_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xowd_yEeuQRohrGBPGsA" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xowt_yEeuQRohrGBPGsA" name="isCompleted" dataType="_q2xpct_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xow9_yEeuQRohrGBPGsA" name="false" content="false" returnType="java.lang.Boolean"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xoxN_yEeuQRohrGBPGsA" name="failedTaskId" dataType="_q2xpdd_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xoxd_yEeuQRohrGBPGsA" content="" returnType="java.lang.Long"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_q2xoxt_yEeuQRohrGBPGsA" name="retryStartTime" dataType="_q2xpeN_yEeuQRohrGBPGsA" className="java.time.OffsetDateTime">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xox9_yEeuQRohrGBPGsA" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.time.OffsetDateTime"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_q2xoyN_yEeuQRohrGBPGsA" name="maxNumberOfRetries" dataType="_q2xpdN_yEeuQRohrGBPGsA">
        <defaultValue xmi:type="expression:Expression" xmi:id="_q2xoyd_yEeuQRohrGBPGsA" name="inputMaxNumberOfRetries" content="inputMaxNumberOfRetries" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Integer">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_q2xoyt_yEeuQRohrGBPGsA" name="inputMaxNumberOfRetries" type="INTEGER">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_q2xoy9_yEeuQRohrGBPGsA"/>
          </referencedElements>
        </defaultValue>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_q2xozN_yEeuQRohrGBPGsA">
        <targetForm xmi:type="expression:Expression" xmi:id="_q2xozd_yEeuQRohrGBPGsA" name="instantiateRetryFailedTask" content="11000222-5a24-4466-ad9b-5affbcdd0d11" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_q2xozt_yEeuQRohrGBPGsA">
        <targetForm xmi:type="expression:Expression" xmi:id="_q2xoz9_yEeuQRohrGBPGsA" name="caseoverview" content="981aadcf-631a-4742-9507-59e85e93c39e" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xo0N_yEeuQRohrGBPGsA" target="_q2xon9_yEeuQRohrGBPGsA" source="_q2xn19_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xo0d_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xo0t_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xo09_yEeuQRohrGBPGsA" name="Still failed" target="_q2xn_d_yEeuQRohrGBPGsA" source="_q2xn29_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xo1N_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xo1d_yEeuQRohrGBPGsA" name="isFailed" content="isFailed" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_q2xo1t_yEeuQRohrGBPGsA" name="isFailed" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xo19_yEeuQRohrGBPGsA" target="_q2xoOd_yEeuQRohrGBPGsA" source="_q2xn_d_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xo2N_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xo2d_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xo2t_yEeuQRohrGBPGsA" target="_q2xoP9_yEeuQRohrGBPGsA" source="_q2xoOd_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xo29_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xo3N_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xo3d_yEeuQRohrGBPGsA" name="Keep waiting" target="_q2xoOd_yEeuQRohrGBPGsA" source="_q2xoP9_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xo3t_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xo39_yEeuQRohrGBPGsA" name="keepWaiting" content="keepWaiting" type="TYPE_VARIABLE" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_q2xo4N_yEeuQRohrGBPGsA" name="keepWaiting" dataType="_q2xpct_yEeuQRohrGBPGsA"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xo4d_yEeuQRohrGBPGsA" target="_q2xod9_yEeuQRohrGBPGsA" source="_q2xoP9_yEeuQRohrGBPGsA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xo4t_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xo49_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xo5N_yEeuQRohrGBPGsA" target="_q2xom9_yEeuQRohrGBPGsA" source="_q2xod9_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xo5d_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xo5t_yEeuQRohrGBPGsA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xo59_yEeuQRohrGBPGsA" name="No longer failed" target="_q2xod9_yEeuQRohrGBPGsA" source="_q2xn29_yEeuQRohrGBPGsA" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xo6N_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xo6d_yEeuQRohrGBPGsA" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_q2xo6t_yEeuQRohrGBPGsA" target="_q2xn29_yEeuQRohrGBPGsA" source="_q2xon9_yEeuQRohrGBPGsA">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_q2xo69_yEeuQRohrGBPGsA"/>
        <condition xmi:type="expression:Expression" xmi:id="_q2xo7N_yEeuQRohrGBPGsA" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_q2xo7d_yEeuQRohrGBPGsA" name="Administrator" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_q2xo7t_yEeuQRohrGBPGsA" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_q2xo79_yEeuQRohrGBPGsA">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_q2xo8N_yEeuQRohrGBPGsA" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_q2xo8d_yEeuQRohrGBPGsA"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_q2xo8t_yEeuQRohrGBPGsA"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_q2xo89_yEeuQRohrGBPGsA">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_q2xo9N_yEeuQRohrGBPGsA"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_q2xo9d_yEeuQRohrGBPGsA" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xo9t_yEeuQRohrGBPGsA" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xo99_yEeuQRohrGBPGsA" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_D165AIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_D2dEgIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xo-t_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xo-9_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xo_N_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xo_d_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xo_t_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xo_9_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpAN_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpAd_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpAt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpA9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpBN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpBd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpBt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpB9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpCN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpCd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpCt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpC9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvAG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvAW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvAm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvA2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvBG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvBW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvBm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvB2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpDN_yEeuQRohrGBPGsA" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpDd_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpDt_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpD9_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpEN_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpEd_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpEt_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpE9_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpFN_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpFd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpFt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpF9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpGN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpGd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpGt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpG9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpHN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpHd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpHt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvCG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvCW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvCm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvC2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvDG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvDW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvDm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t1GvD2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpH9_yEeuQRohrGBPGsA" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpIN_yEeuQRohrGBPGsA" name="logClass" value="RetryFailedTask" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpId_yEeuQRohrGBPGsA" name="intervalToCheckTaskCompletionInSeconds" value="10" typeClassname="java.lang.Integer" description="Number of seconds between 2 checks of task completion"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpIt_yEeuQRohrGBPGsA" name="maxWaitTimeForCompletionInSeconds" value="50" typeClassname="java.lang.Integer" description="Maximum number of seconds we keep waiting for completion of the task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpI9_yEeuQRohrGBPGsA" name="taskStateNotFound" value="Task no longer exists" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_q2xpJN_yEeuQRohrGBPGsA" name="bonita" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_q2xpJd_yEeuQRohrGBPGsA">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_q2xpJt_yEeuQRohrGBPGsA" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_q2xpJ9_yEeuQRohrGBPGsA"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_q2xpKN_yEeuQRohrGBPGsA"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_q2xpKd_yEeuQRohrGBPGsA"/>
            <users xmi:type="actormapping:Users" xmi:id="_q2xpKt_yEeuQRohrGBPGsA"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_q2xpK9_yEeuQRohrGBPGsA" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpLN_yEeuQRohrGBPGsA" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpLd_yEeuQRohrGBPGsA" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_D4wKkIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_D5d8QIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpMN_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpMd_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpMt_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpM9_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpNN_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpNd_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpNt_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpN9_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpON_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpOd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpOt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpO9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpPN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpPd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpPt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpP9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpQN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpQd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4kG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4kW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4km-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4k2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4lG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4lW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4lm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4l2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpQt_yEeuQRohrGBPGsA" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpQ9_yEeuQRohrGBPGsA" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpRN_yEeuQRohrGBPGsA" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpRd_yEeuQRohrGBPGsA" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpRt_yEeuQRohrGBPGsA" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpR9_yEeuQRohrGBPGsA" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpSN_yEeuQRohrGBPGsA" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpSd_yEeuQRohrGBPGsA" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpSt_yEeuQRohrGBPGsA" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpS9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpTN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpTd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpTt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpT9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpUN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpUd_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpUt_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpU9_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_q2xpVN_yEeuQRohrGBPGsA" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4mG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4mW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4mm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4m2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4nG-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4nW-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4nm-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_t2t4n2-FEey7IpcoEkoV4w" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_q2xpVd_yEeuQRohrGBPGsA" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpVt_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpV9_yEeuQRohrGBPGsA" name="intervalToCheckTaskCompletionInSeconds" typeClassname="java.lang.Integer" description="Number of seconds between 2 checks of task completion"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpWN_yEeuQRohrGBPGsA" name="maxWaitTimeForCompletionInSeconds" typeClassname="java.lang.Integer" description="Maximum number of seconds we keep waiting for completion of the task"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpWd_yEeuQRohrGBPGsA" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpWt_yEeuQRohrGBPGsA" name="logClass" typeClassname="java.lang.String" description="Logging will be done with class com.sgdbf.groovy.&lt;logClass>"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpW9_yEeuQRohrGBPGsA" name="intervalToCheckTaskCompletionInSeconds" typeClassname="java.lang.Integer" description="Number of seconds between 2 checks of task completion"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpXN_yEeuQRohrGBPGsA" name="maxWaitTimeForCompletionInSeconds" typeClassname="java.lang.Integer" description="Maximum number of seconds we keep waiting for completion of the task"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_q2xpXd_yEeuQRohrGBPGsA" name="taskStateNotFound" typeClassname="java.lang.String" description="Task State when task no longer exists"/>
      <contract xmi:type="process:Contract" xmi:id="_q2xpXt_yEeuQRohrGBPGsA">
        <inputs xmi:type="process:ContractInput" xmi:id="_q2xpX9_yEeuQRohrGBPGsA" name="inputFailedTaskPersistenceId">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_q2xpYN_yEeuQRohrGBPGsA"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_q2xpYd_yEeuQRohrGBPGsA" name="inputMaxNumberOfRetries" type="INTEGER">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_q2xpYt_yEeuQRohrGBPGsA"/>
        </inputs>
      </contract>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xpY9_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xpZN_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xpZd_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xpZt_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xpZ9_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xpaN_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xpad_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xpat_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xpa9_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xpbN_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xpbd_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xpbt_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_q2xpb9_yEeuQRohrGBPGsA">
        <name xmi:type="expression:Expression" xmi:id="_q2xpcN_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_q2xpcd_yEeuQRohrGBPGsA" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_q2xpct_yEeuQRohrGBPGsA" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_q2xpc9_yEeuQRohrGBPGsA" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_q2xpdN_yEeuQRohrGBPGsA" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_q2xpdd_yEeuQRohrGBPGsA" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_q2xpdt_yEeuQRohrGBPGsA" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_q2xpd9_yEeuQRohrGBPGsA" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_q2xpeN_yEeuQRohrGBPGsA" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_q2xped_yEeuQRohrGBPGsA" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_q2xpet_yEeuQRohrGBPGsA" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_q2xpe9_yEeuQRohrGBPGsA" type="Process" element="_q2wZAN_yEeuQRohrGBPGsA" name="MyDiagram" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_q2xpfN_yEeuQRohrGBPGsA" type="2007" element="_q2wZAd_yEeuQRohrGBPGsA">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2xpfd_yEeuQRohrGBPGsA" type="5008" element="_q2wZAd_yEeuQRohrGBPGsA"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_q2xpft_yEeuQRohrGBPGsA" type="7001" element="_q2wZAd_yEeuQRohrGBPGsA">
        <children xmi:type="notation:Node" xmi:id="_q2xpf9_yEeuQRohrGBPGsA" type="3007" element="_q2wZAt_yEeuQRohrGBPGsA">
          <children xmi:type="notation:DecorationNode" xmi:id="_q2xpgN_yEeuQRohrGBPGsA" type="5007" element="_q2wZAt_yEeuQRohrGBPGsA"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_q2xpgd_yEeuQRohrGBPGsA" type="7002" element="_q2wZAt_yEeuQRohrGBPGsA">
            <children xmi:type="notation:Shape" xmi:id="_q2xpgt_yEeuQRohrGBPGsA" type="3002" element="_q2wZA9_yEeuQRohrGBPGsA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpg9_yEeuQRohrGBPGsA" type="5024" element="_q2wZA9_yEeuQRohrGBPGsA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_q2xphN_yEeuQRohrGBPGsA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xphd_yEeuQRohrGBPGsA" x="62" y="121" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpht_yEeuQRohrGBPGsA" type="3027" element="_q2wZB9_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xph9_yEeuQRohrGBPGsA" type="5017" element="_q2wZB9_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpiN_yEeuQRohrGBPGsA" x="160" y="103" width="114" height="87"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpid_yEeuQRohrGBPGsA" type="3016" element="_q2wZFd_yEeuQRohrGBPGsA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpit_yEeuQRohrGBPGsA" type="5031" element="_q2wZFd_yEeuQRohrGBPGsA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_q2xpi9_yEeuQRohrGBPGsA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpjN_yEeuQRohrGBPGsA" x="81" y="198" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpjd_yEeuQRohrGBPGsA" type="3027" element="_q2wZHt_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpjt_yEeuQRohrGBPGsA" type="5017" element="_q2wZHt_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpj9_yEeuQRohrGBPGsA" x="339" y="100" width="112" height="85"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpkN_yEeuQRohrGBPGsA" type="3027" element="_q2wZQ9_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpkd_yEeuQRohrGBPGsA" type="5017" element="_q2wZQ9_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpkt_yEeuQRohrGBPGsA" x="518" y="103" width="114" height="87"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpk9_yEeuQRohrGBPGsA" type="3027" element="_q2xAF9_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xplN_yEeuQRohrGBPGsA" type="5017" element="_q2xAF9_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpld_yEeuQRohrGBPGsA" x="710" y="126"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xplt_yEeuQRohrGBPGsA" type="3003" element="_q2xANd_yEeuQRohrGBPGsA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpl9_yEeuQRohrGBPGsA" type="5025" element="_q2xANd_yEeuQRohrGBPGsA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_q2xpmN_yEeuQRohrGBPGsA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpmd_yEeuQRohrGBPGsA" x="993" y="72" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpmt_yEeuQRohrGBPGsA" type="3008" element="_q2xAOd_yEeuQRohrGBPGsA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpm9_yEeuQRohrGBPGsA" type="5026" element="_q2xAOd_yEeuQRohrGBPGsA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_q2xpnN_yEeuQRohrGBPGsA" x="2" y="-7"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpnd_yEeuQRohrGBPGsA" x="879" y="65" height="73"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpnt_yEeuQRohrGBPGsA" type="3027" element="_q2xAPt_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpn9_yEeuQRohrGBPGsA" type="5017" element="_q2xAPt_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpoN_yEeuQRohrGBPGsA" x="700" y="15" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpod_yEeuQRohrGBPGsA" type="3027" element="_q2xAYt_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpot_yEeuQRohrGBPGsA" type="5017" element="_q2xAYt_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpo9_yEeuQRohrGBPGsA" x="601" y="236" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xppN_yEeuQRohrGBPGsA" type="3027" element="_q2xAgd_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xppd_yEeuQRohrGBPGsA" type="5017" element="_q2xAgd_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xppt_yEeuQRohrGBPGsA" x="767" y="237" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpp9_yEeuQRohrGBPGsA" type="3063" element="_q2xAs9_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpqN_yEeuQRohrGBPGsA" type="5093" element="_q2xAs9_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpqd_yEeuQRohrGBPGsA" x="1155" y="235" width="128" height="64"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpqt_yEeuQRohrGBPGsA" type="3008" element="_q2xAyt_yEeuQRohrGBPGsA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpq9_yEeuQRohrGBPGsA" type="5026" element="_q2xAyt_yEeuQRohrGBPGsA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_q2xprN_yEeuQRohrGBPGsA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xprd_yEeuQRohrGBPGsA" x="1069" y="244"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xprt_yEeuQRohrGBPGsA" type="3027" element="_q2xAz9_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpr9_yEeuQRohrGBPGsA" type="5017" element="_q2xAz9_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpsN_yEeuQRohrGBPGsA" x="1299" y="160" width="116" height="58"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpsd_yEeuQRohrGBPGsA" type="3027" element="_q2xA7d_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpst_yEeuQRohrGBPGsA" type="5017" element="_q2xA7d_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xps9_yEeuQRohrGBPGsA" x="1050" y="156"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xptN_yEeuQRohrGBPGsA" type="3027" element="_q2xBGt_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xptd_yEeuQRohrGBPGsA" type="5017" element="_q2xBGt_yEeuQRohrGBPGsA"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xptt_yEeuQRohrGBPGsA" x="921" y="242" width="108" height="54"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpt9_yEeuQRohrGBPGsA" type="3017" element="_q2xBOd_yEeuQRohrGBPGsA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpuN_yEeuQRohrGBPGsA" type="5032" element="_q2xBOd_yEeuQRohrGBPGsA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_q2xpud_yEeuQRohrGBPGsA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xput_yEeuQRohrGBPGsA" x="499" y="45"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_q2xpu9_yEeuQRohrGBPGsA" type="3003" element="_q2xBQN_yEeuQRohrGBPGsA" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_q2xpvN_yEeuQRohrGBPGsA" type="5025" element="_q2xBQN_yEeuQRohrGBPGsA">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_q2xpvd_yEeuQRohrGBPGsA" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpvt_yEeuQRohrGBPGsA" x="993" y="20"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_q2xpv9_yEeuQRohrGBPGsA"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_q2xpwN_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_q2xpwd_yEeuQRohrGBPGsA"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_q2xpwt_yEeuQRohrGBPGsA"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpw9_yEeuQRohrGBPGsA" x="22" y="10" width="1100" height="361"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_q2xpxN_yEeuQRohrGBPGsA"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2xpxd_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_q2xpxt_yEeuQRohrGBPGsA"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_q2xpx9_yEeuQRohrGBPGsA"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpyN_yEeuQRohrGBPGsA" width="1552" height="250"/>
    </children>
    <children xmi:type="notation:Node" xmi:id="_q2xpyd_yEeuQRohrGBPGsA" type="2007" element="_q2xn1t_yEeuQRohrGBPGsA">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2xpyt_yEeuQRohrGBPGsA" type="5008" element="_q2xn1t_yEeuQRohrGBPGsA"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_q2xpy9_yEeuQRohrGBPGsA" type="7001" element="_q2xn1t_yEeuQRohrGBPGsA">
        <children xmi:type="notation:Shape" xmi:id="_q2xpzN_yEeuQRohrGBPGsA" type="3002" element="_q2xn19_yEeuQRohrGBPGsA" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_q2xpzd_yEeuQRohrGBPGsA" type="5024" element="_q2xn19_yEeuQRohrGBPGsA">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_q2xpzt_yEeuQRohrGBPGsA" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xpz9_yEeuQRohrGBPGsA" x="74" y="110"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_q2xp0N_yEeuQRohrGBPGsA" type="3027" element="_q2xn29_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_q2xp0d_yEeuQRohrGBPGsA" type="5017" element="_q2xn29_yEeuQRohrGBPGsA"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xp0t_yEeuQRohrGBPGsA" x="296" y="99" width="120" height="60"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_q2xp09_yEeuQRohrGBPGsA" type="3027" element="_q2xn_d_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_q2xp1N_yEeuQRohrGBPGsA" type="5017" element="_q2xn_d_yEeuQRohrGBPGsA"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xp1d_yEeuQRohrGBPGsA" x="502" y="104"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_q2xp1t_yEeuQRohrGBPGsA" type="3017" element="_q2xoOd_yEeuQRohrGBPGsA" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_q2xp19_yEeuQRohrGBPGsA" type="5032" element="_q2xoOd_yEeuQRohrGBPGsA">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_q2xp2N_yEeuQRohrGBPGsA" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xp2d_yEeuQRohrGBPGsA" x="673" y="113"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_q2xp2t_yEeuQRohrGBPGsA" type="3027" element="_q2xoP9_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_q2xp29_yEeuQRohrGBPGsA" type="5017" element="_q2xoP9_yEeuQRohrGBPGsA"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2xp3N_yEeuQRohrGBPGsA" x="787" y="99" width="120" height="60"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_q2xp3d_yEeuQRohrGBPGsA" type="3027" element="_q2xod9_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_q2yOMN_yEeuQRohrGBPGsA" type="5017" element="_q2xod9_yEeuQRohrGBPGsA"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2yOMd_yEeuQRohrGBPGsA" x="996" y="99" width="122" height="61"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_q2yOMt_yEeuQRohrGBPGsA" type="3003" element="_q2xom9_yEeuQRohrGBPGsA" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_q2yOM9_yEeuQRohrGBPGsA" type="5025" element="_q2xom9_yEeuQRohrGBPGsA">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yONN_yEeuQRohrGBPGsA" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2yONd_yEeuQRohrGBPGsA" x="1212" y="115"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_q2yONt_yEeuQRohrGBPGsA" type="3027" element="_q2xon9_yEeuQRohrGBPGsA" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_q2yON9_yEeuQRohrGBPGsA" type="5017" element="_q2xon9_yEeuQRohrGBPGsA"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2yOON_yEeuQRohrGBPGsA" x="141" y="100"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_q2yOOd_yEeuQRohrGBPGsA"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOOt_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_q2yOO9_yEeuQRohrGBPGsA"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_q2yOPN_yEeuQRohrGBPGsA"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_q2yOPd_yEeuQRohrGBPGsA" width="1400" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_q2yOPt_yEeuQRohrGBPGsA"/>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOP9_yEeuQRohrGBPGsA" type="4001" element="_q2xBbd_yEeuQRohrGBPGsA" source="_q2xpgt_yEeuQRohrGBPGsA" target="_q2xpht_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOQN_yEeuQRohrGBPGsA" type="6001" element="_q2xBbd_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOQd_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOQt_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOQ9_yEeuQRohrGBPGsA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yORN_yEeuQRohrGBPGsA" type="4001" element="_q2xBcN_yEeuQRohrGBPGsA" source="_q2xpht_yEeuQRohrGBPGsA" target="_q2xpjd_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yORd_yEeuQRohrGBPGsA" type="6001" element="_q2xBcN_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yORt_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOR9_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOSN_yEeuQRohrGBPGsA" points="[0, -26, -88, -7]$[65, -26, -23, -7]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOSd_yEeuQRohrGBPGsA" id="(1.0,0.7)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOSt_yEeuQRohrGBPGsA" id="(0.21,0.52)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOS9_yEeuQRohrGBPGsA" type="4001" element="_q2xBc9_yEeuQRohrGBPGsA" source="_q2xpjd_yEeuQRohrGBPGsA" target="_q2xpkN_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOTN_yEeuQRohrGBPGsA" type="6001" element="_q2xBc9_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOTd_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOTt_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOT9_yEeuQRohrGBPGsA" points="[0, -3, -67, 0]$[59, -3, -8, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOUN_yEeuQRohrGBPGsA" id="(1.0,0.5666666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOUd_yEeuQRohrGBPGsA" id="(0.07017543859649122,0.543859649122807)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOUt_yEeuQRohrGBPGsA" type="4001" element="_q2xBdt_yEeuQRohrGBPGsA" source="_q2xpkN_yEeuQRohrGBPGsA" target="_q2xpk9_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOU9_yEeuQRohrGBPGsA" type="6001" element="_q2xBdt_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOVN_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOVd_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOVt_yEeuQRohrGBPGsA" points="[0, -6, -86, 0]$[76, -7, -10, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOV9_yEeuQRohrGBPGsA" id="(1.0,0.5614035087719298)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOWN_yEeuQRohrGBPGsA" id="(0.1,0.44)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOWd_yEeuQRohrGBPGsA" type="4001" element="_q2xBet_yEeuQRohrGBPGsA" source="_q2xpk9_yEeuQRohrGBPGsA" target="_q2xpmt_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOWt_yEeuQRohrGBPGsA" type="6001" element="_q2xBet_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOW9_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOXN_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOXd_yEeuQRohrGBPGsA" points="[50, -1, -90, 49]$[140, -1, 0, 49]$[140, -13, 0, 37]"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOXt_yEeuQRohrGBPGsA" id="(0.16279069767441862,0.5616438356164384)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOX9_yEeuQRohrGBPGsA" type="4001" element="_q2xBfd_yEeuQRohrGBPGsA" source="_q2xpmt_yEeuQRohrGBPGsA" target="_q2xplt_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOYN_yEeuQRohrGBPGsA" type="6001" element="_q2xBfd_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOYd_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOYt_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOY9_yEeuQRohrGBPGsA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOZN_yEeuQRohrGBPGsA" type="4001" element="_q2xBgd_yEeuQRohrGBPGsA" source="_q2xpid_yEeuQRohrGBPGsA" target="_q2xpjd_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOZd_yEeuQRohrGBPGsA" type="6001" element="_q2xBgd_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOZt_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOZ9_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOaN_yEeuQRohrGBPGsA" points="[-1, -5, -238, 83]$[198, -5, -39, 83]$[198, -86, -39, 2]$[228, -86, -9, 2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOad_yEeuQRohrGBPGsA" id="(1.0,0.5666666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOat_yEeuQRohrGBPGsA" id="(0.072,0.5319148936170213)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOa9_yEeuQRohrGBPGsA" type="4001" element="_q2xBhN_yEeuQRohrGBPGsA" source="_q2xpkN_yEeuQRohrGBPGsA" target="_q2xpod_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yObN_yEeuQRohrGBPGsA" type="6001" element="_q2xBhN_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yObd_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yObt_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOb9_yEeuQRohrGBPGsA" points="[11, 2, -50, -88]$[49, 2, -12, -88]$[49, 78, -12, -12]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOcN_yEeuQRohrGBPGsA" id="(0.9035087719298246,0.632183908045977)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOcd_yEeuQRohrGBPGsA" id="(0.675,0.2)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOct_yEeuQRohrGBPGsA" type="4001" element="_q2xBh9_yEeuQRohrGBPGsA" source="_q2xpod_yEeuQRohrGBPGsA" target="_q2xppN_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOc9_yEeuQRohrGBPGsA" type="6001" element="_q2xBh9_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOdN_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOdd_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOdt_yEeuQRohrGBPGsA" points="[0, -2, -123, -4]$[63, -2, -60, -4]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOd9_yEeuQRohrGBPGsA" id="(1.0,0.4666666666666667)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOeN_yEeuQRohrGBPGsA" type="4001" element="_q2xBit_yEeuQRohrGBPGsA" source="_q2xpqt_yEeuQRohrGBPGsA" target="_q2xpp9_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOed_yEeuQRohrGBPGsA" type="6001" element="_q2xBit_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOet_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOe9_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOfN_yEeuQRohrGBPGsA" points="[-21, 6, -70, 22]$[35, -18, -14, -2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOfd_yEeuQRohrGBPGsA" id="(1.0,0.813953488372093)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOft_yEeuQRohrGBPGsA" id="(0.109375,0.421875)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOf9_yEeuQRohrGBPGsA" type="4001" element="_q2xBj9_yEeuQRohrGBPGsA" source="_q2xppN_yEeuQRohrGBPGsA" target="_q2xptN_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOgN_yEeuQRohrGBPGsA" type="6001" element="_q2xBj9_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOgd_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOgt_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOg9_yEeuQRohrGBPGsA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOhN_yEeuQRohrGBPGsA" id="(1.0,0.5833333333333334)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOhd_yEeuQRohrGBPGsA" type="4001" element="_q2xBkt_yEeuQRohrGBPGsA" source="_q2xpqt_yEeuQRohrGBPGsA" target="_q2xpsd_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOht_yEeuQRohrGBPGsA" type="6001" element="_q2xBkt_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOh9_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOiN_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOid_yEeuQRohrGBPGsA" points="[-22, -35, -2, 94]$[-22, -96, -2, 33]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOit_yEeuQRohrGBPGsA" id="(1.0,0.813953488372093)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOi9_yEeuQRohrGBPGsA" id="(0.24,0.34)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOjN_yEeuQRohrGBPGsA" type="4001" element="_q2xBld_yEeuQRohrGBPGsA" source="_q2xpp9_yEeuQRohrGBPGsA" target="_q2xprt_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOjd_yEeuQRohrGBPGsA" type="6001" element="_q2xBld_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOjt_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOj9_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOkN_yEeuQRohrGBPGsA" points="[0, 0, -60, 78]$[86, 0, 26, 78]$[86, -54, 26, 24]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOkd_yEeuQRohrGBPGsA" id="(1.0,0.5625)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOkt_yEeuQRohrGBPGsA" id="(0.14655172413793102,0.5862068965517241)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOk9_yEeuQRohrGBPGsA" type="4001" element="_q2xBmN_yEeuQRohrGBPGsA" source="_q2xpmt_yEeuQRohrGBPGsA" target="_q2xpnt_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOlN_yEeuQRohrGBPGsA" type="6001" element="_q2xBmN_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOld_yEeuQRohrGBPGsA" x="-6" y="7"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOlt_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOl9_yEeuQRohrGBPGsA" points="[-20, 18, 67, 53]$[-129, 18, -42, 53]$[-129, -7, -42, 28]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOmN_yEeuQRohrGBPGsA" id="(0.46511627906976744,0.2328767123287671)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOmd_yEeuQRohrGBPGsA" id="(0.9333333333333333,0.5333333333333333)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOmt_yEeuQRohrGBPGsA" type="4001" element="_q2xBm9_yEeuQRohrGBPGsA" source="_q2xprt_yEeuQRohrGBPGsA" target="_q2xpsd_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOm9_yEeuQRohrGBPGsA" type="6001" element="_q2xBm9_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOnN_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOnd_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOnt_yEeuQRohrGBPGsA" points="[-116, -9, 194, 0]$[-301, -10, 9, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOn9_yEeuQRohrGBPGsA" id="(1.0,0.5344827586206896)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOoN_yEeuQRohrGBPGsA" id="(0.91,0.44)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOod_yEeuQRohrGBPGsA" type="4001" element="_q2xBnt_yEeuQRohrGBPGsA" source="_q2xpsd_yEeuQRohrGBPGsA" target="_q2xpmt_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOot_yEeuQRohrGBPGsA" type="6001" element="_q2xBnt_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOo9_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOpN_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOpd_yEeuQRohrGBPGsA" points="[-100, -11, 55, 84]$[-138, -11, 17, 84]$[-138, -87, 17, 8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOpt_yEeuQRohrGBPGsA" id="(1.0,0.72)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOp9_yEeuQRohrGBPGsA" type="4001" element="_q2xBod_yEeuQRohrGBPGsA" source="_q2xptN_yEeuQRohrGBPGsA" target="_q2xpqt_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOqN_yEeuQRohrGBPGsA" type="6001" element="_q2xBod_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOqd_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOqt_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOq9_yEeuQRohrGBPGsA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOrN_yEeuQRohrGBPGsA" type="4001" element="_q2xBpN_yEeuQRohrGBPGsA" source="_q2xpnt_yEeuQRohrGBPGsA" target="_q2xpt9_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOrd_yEeuQRohrGBPGsA" type="6001" element="_q2xBpN_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOrt_yEeuQRohrGBPGsA" x="-46" y="-13"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOr9_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOsN_yEeuQRohrGBPGsA" points="[-120, 12, 175, 2]$[-292, 12, 3, 2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOsd_yEeuQRohrGBPGsA" id="(1.0,0.5333333333333333)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOst_yEeuQRohrGBPGsA" id="(0.8666666666666667,0.4)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOs9_yEeuQRohrGBPGsA" type="4001" element="_q2xBqd_yEeuQRohrGBPGsA" source="_q2xpt9_yEeuQRohrGBPGsA" target="_q2xpjd_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOtN_yEeuQRohrGBPGsA" type="6001" element="_q2xBqd_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOtd_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOtt_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOt9_yEeuQRohrGBPGsA" points="[-20, -1, 108, -82]$[-125, -1, 3, -82]$[-125, 34, 3, -47]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOuN_yEeuQRohrGBPGsA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOud_yEeuQRohrGBPGsA" id="(0.528,0.20212765957446807)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOut_yEeuQRohrGBPGsA" type="4001" element="_q2xBrN_yEeuQRohrGBPGsA" source="_q2xpnt_yEeuQRohrGBPGsA" target="_q2xpjd_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOu9_yEeuQRohrGBPGsA" type="6001" element="_q2xBrN_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOvN_yEeuQRohrGBPGsA" x="-130" y="12"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOvd_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOvt_yEeuQRohrGBPGsA" points="[-120, -20, 268, -97]$[-435, -20, -47, -97]$[-435, 53, -47, -24]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOv9_yEeuQRohrGBPGsA" id="(1.0,0.5333333333333333)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOwN_yEeuQRohrGBPGsA" id="(0.8303571428571429,0.2823529411764706)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOwd_yEeuQRohrGBPGsA" type="4001" element="_q2xBsd_yEeuQRohrGBPGsA" source="_q2xpnt_yEeuQRohrGBPGsA" target="_q2xpu9_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOwt_yEeuQRohrGBPGsA" type="6001" element="_q2xBsd_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOw9_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOxN_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOxd_yEeuQRohrGBPGsA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOxt_yEeuQRohrGBPGsA" type="4001" element="_q2xo0N_yEeuQRohrGBPGsA" source="_q2xpzN_yEeuQRohrGBPGsA" target="_q2yONt_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOx9_yEeuQRohrGBPGsA" type="6001" element="_q2xo0N_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOyN_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOyd_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yOyt_yEeuQRohrGBPGsA" points="[-1, -16, -107, 7]$[78, -35, -28, -12]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yOy9_yEeuQRohrGBPGsA" id="(1.0,1.0)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yOzN_yEeuQRohrGBPGsA" type="4001" element="_q2xo09_yEeuQRohrGBPGsA" source="_q2xp0N_yEeuQRohrGBPGsA" target="_q2xp09_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yOzd_yEeuQRohrGBPGsA" type="6001" element="_q2xo09_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yOzt_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yOz9_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yO0N_yEeuQRohrGBPGsA" points="[0, -5, -92, 0]$[86, -6, -6, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO0d_yEeuQRohrGBPGsA" id="(1.0,0.55)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO0t_yEeuQRohrGBPGsA" id="(0.06,0.46)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yO09_yEeuQRohrGBPGsA" type="4001" element="_q2xo19_yEeuQRohrGBPGsA" source="_q2xp09_yEeuQRohrGBPGsA" target="_q2xp1t_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yO1N_yEeuQRohrGBPGsA" type="6001" element="_q2xo19_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yO1d_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yO1t_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yO19_yEeuQRohrGBPGsA" points="[0, -10, -86, 1]$[71, -10, -15, 1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO2N_yEeuQRohrGBPGsA" id="(1.0,0.7)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yO2d_yEeuQRohrGBPGsA" type="4001" element="_q2xo2t_yEeuQRohrGBPGsA" source="_q2xp1t_yEeuQRohrGBPGsA" target="_q2xp2t_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yO2t_yEeuQRohrGBPGsA" type="6001" element="_q2xo2t_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yO29_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yO3N_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yO3d_yEeuQRohrGBPGsA" points="[0, -16, -85, 1]$[84, -18, -1, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO3t_yEeuQRohrGBPGsA" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO39_yEeuQRohrGBPGsA" id="(0.008333333333333333,0.45)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yO4N_yEeuQRohrGBPGsA" type="4001" element="_q2xo3d_yEeuQRohrGBPGsA" source="_q2xp2t_yEeuQRohrGBPGsA" target="_q2xp1t_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yO4d_yEeuQRohrGBPGsA" type="6001" element="_q2xo3d_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yO4t_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yO49_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yO5N_yEeuQRohrGBPGsA" points="[43, 0, 158, -21]$[43, -36, 158, -57]$[-116, -36, -1, -57]$[-116, 14, -1, -7]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO5d_yEeuQRohrGBPGsA" id="(0.14166666666666666,0.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO5t_yEeuQRohrGBPGsA" id="(0.5333333333333333,0.23333333333333334)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yO59_yEeuQRohrGBPGsA" type="4001" element="_q2xo4d_yEeuQRohrGBPGsA" source="_q2xp2t_yEeuQRohrGBPGsA" target="_q2xp3d_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yO6N_yEeuQRohrGBPGsA" type="6001" element="_q2xo4d_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yO6d_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yO6t_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yO69_yEeuQRohrGBPGsA" points="[0, -6, -104, 0]$[89, -7, -15, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO7N_yEeuQRohrGBPGsA" id="(1.0,0.6)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO7d_yEeuQRohrGBPGsA" id="(0.12295081967213115,0.4918032786885246)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yO7t_yEeuQRohrGBPGsA" type="4001" element="_q2xo5N_yEeuQRohrGBPGsA" source="_q2xp3d_yEeuQRohrGBPGsA" target="_q2yOMt_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yO79_yEeuQRohrGBPGsA" type="6001" element="_q2xo5N_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yO8N_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yO8d_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yO8t_yEeuQRohrGBPGsA" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yO89_yEeuQRohrGBPGsA" type="4001" element="_q2xo59_yEeuQRohrGBPGsA" source="_q2xp0N_yEeuQRohrGBPGsA" target="_q2xp3d_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yO9N_yEeuQRohrGBPGsA" type="6001" element="_q2xo59_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yO9d_yEeuQRohrGBPGsA" x="-255" y="-12"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yO9t_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yO99_yEeuQRohrGBPGsA" points="[-47, 25, -675, 7]$[-47, 62, -675, 44]$[641, 62, 13, 44]$[641, 26, 13, 8]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO-N_yEeuQRohrGBPGsA" id="(1.0,0.5833333333333334)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO-d_yEeuQRohrGBPGsA" id="(0.39344262295081966,0.8688524590163934)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_q2yO-t_yEeuQRohrGBPGsA" type="4001" element="_q2xo6t_yEeuQRohrGBPGsA" source="_q2yONt_yEeuQRohrGBPGsA" target="_q2xp0N_yEeuQRohrGBPGsA" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_q2yO-9_yEeuQRohrGBPGsA" type="6001" element="_q2xo6t_yEeuQRohrGBPGsA">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_q2yO_N_yEeuQRohrGBPGsA" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_q2yO_d_yEeuQRohrGBPGsA" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_q2yO_t_yEeuQRohrGBPGsA" points="[0, -3, -59, 0]$[55, -3, -4, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yO_9_yEeuQRohrGBPGsA" id="(1.0,0.66)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_q2yPAN_yEeuQRohrGBPGsA" id="(0.03333333333333333,0.5166666666666667)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
