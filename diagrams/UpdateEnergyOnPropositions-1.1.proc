<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.3/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_DPhlwHVcEe2XAuaIctqsHw" name="UpdateEnergyOnPropositions" version="1.1" author="C6754557" bonitaVersion="7.14.6" bonitaModelVersion="7.12.0-004">
    <elements xmi:type="process:Pool" xmi:id="_DPhlwXVcEe2XAuaIctqsHw" name="UpdateEnergyOnPropositions" version="1.1">
      <elements xmi:type="process:Lane" xmi:id="_DPhlwnVcEe2XAuaIctqsHw" name="Update lane" actor="_DPiNqHVcEe2XAuaIctqsHw">
        <elements xmi:type="process:StartEvent" xmi:id="_DPhlw3VcEe2XAuaIctqsHw" name="File Upload" outgoing="_DPiNhHVcEe2XAuaIctqsHw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_DPhlxHVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_DPhlxXVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_DPhlxnVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_DPhlx3VcEe2XAuaIctqsHw" name="Load list of materials" outgoing="_DPiNh3VcEe2XAuaIctqsHw _DPiNlnVcEe2XAuaIctqsHw _DPiNnnVcEe2XAuaIctqsHw" incoming="_DPiNhHVcEe2XAuaIctqsHw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_DPhlyHVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_DPhlyXVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_DPhlynVcEe2XAuaIctqsHw" name="descriptionAfterCompletion()" content="def String desc=&quot;Loaded &quot; + String.valueOf(nbMaterials) + &quot; materials from input file&quot;;&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_DPhly3VcEe2XAuaIctqsHw" name="nbMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
          </stepSummary>
          <connectors xmi:type="process:Connector" xmi:id="_DPhlzHVcEe2XAuaIctqsHw" name="loadExcelFile" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_DPhlzXVcEe2XAuaIctqsHw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.12.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_DPhlznVcEe2XAuaIctqsHw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_DPhlz3VcEe2XAuaIctqsHw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_DPhl0HVcEe2XAuaIctqsHw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_DPhl0XVcEe2XAuaIctqsHw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_DPhl0nVcEe2XAuaIctqsHw" name="readExcelFile" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.ExcelFile&#xD;&#xA;import com.sgdbf.pop3p.groovy.LocaleUtility&#xD;&#xA;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;List&lt;List&lt;Object>> excel_content=null;&#xD;&#xA;String error_message=&quot;&quot;;&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;   String filename = materialsFile.getFileName();&#xD;&#xA;&#x9;   logDebug(log_file, &quot;Filename: &quot; + filename);&#xD;&#xA;&#x9;   ByteArrayInputStream input_stream = new ByteArrayInputStream(materialsFile.getContent());&#xD;&#xA;&#x9;   java.util.Locale user_locale = LocaleUtility.getLocale();&#xD;&#xA;&#x9;   excel_content = ExcelFile.readExcelInputStreamFirstWorksheet(input_stream, true, true, user_locale);&#xD;&#xA;&#x9;   if (excel_content == null) {&#xD;&#xA;&#x9;&#x9;&#x9; error_message = &quot;Failed to read input file [&quot; + filename + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#x9; logError(log_file, error_message);&#xD;&#xA;&#x9;   } else {&#xD;&#xA;&#x9;&#x9;&#x9; logDebug(log_file, &quot;Successfully loaded input file [&quot; + filename + &quot;]&quot;);&#xD;&#xA;&#x9;   }&#xD;&#xA;&#x9;   &#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;   logError(log_file, &quot;Exception: &quot; + e.toString());&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return [excelContent: excel_content, errorMessage: error_message];&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;readExcelFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;readExcelFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;readExcelFile&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPhl03VcEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_DPhl1HVcEe2XAuaIctqsHw" name="materialsFile" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="org.bonitasoft.engine.bpm.contract.FileInputValue"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_DPhl1XVcEe2XAuaIctqsHw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_DPiM0HVcEe2XAuaIctqsHw" name="materialsData" content="materialsData" type="TYPE_VARIABLE" returnType="java.util.List">
                <referencedElements xmi:type="process:JavaObjectData" xmi:id="_DPiM0XVcEe2XAuaIctqsHw" name="materialsData" multiple="true" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="java.util.List"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_DPiM0nVcEe2XAuaIctqsHw" name="excelContent" content="return result['excelContent'];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
                <referencedElements xmi:type="definition:Output" xmi:id="_DPiM03VcEe2XAuaIctqsHw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_DPiM1HVcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
            </outputs>
            <outputs xmi:type="expression:Operation" xmi:id="_DPiM1XVcEe2XAuaIctqsHw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_DPiM1nVcEe2XAuaIctqsHw" name="errorMsg" content="errorMsg" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_DPiM13VcEe2XAuaIctqsHw" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_DPiM2HVcEe2XAuaIctqsHw" name="errorMessage" content="return result[&quot;errorMessage&quot;];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
                <referencedElements xmi:type="definition:Output" xmi:id="_DPiM2XVcEe2XAuaIctqsHw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_DPiM2nVcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <operations xmi:type="expression:Operation" xmi:id="_DPiM23VcEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_DPiM3HVcEe2XAuaIctqsHw" name="nbMaterials" content="nbMaterials" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_DPiM3XVcEe2XAuaIctqsHw" name="nbMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_DPiM3nVcEe2XAuaIctqsHw" name="getNbMaterials" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def int nb_materials = 0;&#xD;&#xA;def log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;if (materialsData != null) {&#xD;&#xA;&#x9;nb_materials = materialsData.size();&#xD;&#xA;&#x9;if ((nb_materials > 0) &amp;&amp; ignoreHeaderLine) {&#xD;&#xA;&#x9;&#x9;nb_materials--;&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;logInfo(log_file, &quot;Number of materials found in file: &quot; + String.valueOf(nb_materials));&#xD;&#xA;&#xD;&#xA;return nb_materials;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;filterMaterials&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_DPiM33VcEe2XAuaIctqsHw" name="materialsData" multiple="true" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="java.util.List"/>
              <referencedElements xmi:type="process:Data" xmi:id="_DPiM4HVcEe2XAuaIctqsHw" name="ignoreHeaderLine" dataType="_DPiOT3VcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPiM4XVcEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_DPiM4nVcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_DPiM43VcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_DPiM5HVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_DPiM5XVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_DPiM5nVcEe2XAuaIctqsHw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_DPiM53VcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_DPiM6HVcEe2XAuaIctqsHw" name="Filter materials list" outgoing="_DPiNinVcEe2XAuaIctqsHw _DPiNmnVcEe2XAuaIctqsHw _DPiNo3VcEe2XAuaIctqsHw" incoming="_DPiNh3VcEe2XAuaIctqsHw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_DPiM6XVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_DPiM6nVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_DPiM63VcEe2XAuaIctqsHw" name="descriptionAfterCompletion()" content="def String desc=&quot;Found &quot; + String.valueOf(nbFilteredMaterials) + &quot; materials with a valid energy&quot;;&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_XAGvIHVuEe2-SNUo-hJ98Q" name="nbFilteredMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
          </stepSummary>
          <operations xmi:type="expression:Operation" xmi:id="_DPiM7XVcEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_DPiM7nVcEe2XAuaIctqsHw" name="filteredMaterials" content="filteredMaterials" type="TYPE_VARIABLE" returnType="java.util.List">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_DPiM73VcEe2XAuaIctqsHw" documentation="List of materials with a valid energy, with fields:&#xD;&#xA;materialNumber, energy, retrofit, b100, xtl, zfe&#xD;&#xA;" name="filteredMaterials" multiple="true" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="java.util.Map"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_DPiM8HVcEe2XAuaIctqsHw" name="filterMaterials" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def List&lt;Map&lt;String, Object>> filtered_materials = [];&#xD;&#xA;def log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Loop through each line in Excel file&#xD;&#xA;&#x9;def int first_material = (ignoreHeaderLine) ? 1 : 0;&#xD;&#xA;&#x9;def int list_size = materialsData.size();&#xD;&#xA;&#x9;for (int i=first_material; i&lt;list_size; i++) {&#xD;&#xA;&#x9;&#x9;def List&lt;Object> one_material = materialsData[i];&#xD;&#xA;&#x9;&#x9;// Check the number of columns : at least 5&#xD;&#xA;&#x9;&#x9;def int nb_cols = one_material.size();&#xD;&#xA;&#x9;&#x9;if (nb_cols &lt; 6) {&#xD;&#xA;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Excel line &quot; + String.valueOf(i+1) + &quot;: Ignore line with &quot; + String.valueOf(nb_cols) + &quot; columns&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def String material_number = one_material[0];&#xD;&#xA;&#x9;&#x9;&#x9;if (material_number) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def energy_code = one_material[1];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (energy_code &amp;&amp; energy_code != energyCodeToBeDefined) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Found a valid energy&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def Map valid_material = [&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;materialNumber&quot; : material_number,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;energyCode&quot; : energy_code,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;energyName&quot; : one_material[2],&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;retrofit&quot; : getBoolean(one_material[3]),&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;b100&quot; : getBoolean(one_material[4]),&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;xtl&quot;  : getBoolean(one_material[5])&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;filtered_materials.add(valid_material);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Ignore invalid energy&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Excel line &quot; + String.valueOf(i+1) + &quot;: Ignore invalid energy for material &quot; + material_number);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Ignore invalid line&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Excel line &quot; + String.valueOf(i+1) + &quot;: Ignore line with no material number&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;logError(log_file, &quot;Exception: &quot; + e);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return filtered_materials;&#xD;&#xA;&#xD;&#xA;def Boolean getBoolean(Object lyre_value) {&#xD;&#xA;&#x9;Boolean res = null;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if ((lyre_value == 1) || (lyre_value == &quot;1&quot;)) {&#xD;&#xA;&#x9;&#x9;res = true;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else if ((lyre_value == 2) || (lyre_value == &quot;2&quot;)) {&#xD;&#xA;&#x9;&#x9;res = false;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return res;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;filterMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;filterMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;filterMaterials&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPiM8XVcEe2XAuaIctqsHw" name="energyCodeToBeDefined" typeClassname="java.lang.String" description="Lyre energy Lyre code 'A définir' : ignore material in this case"/>
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_DPiM8nVcEe2XAuaIctqsHw" name="materialsData" multiple="true" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="java.util.List"/>
              <referencedElements xmi:type="process:Data" xmi:id="_DPiM83VcEe2XAuaIctqsHw" name="ignoreHeaderLine" dataType="_DPiOT3VcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPiM9HVcEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_DPiM9XVcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_DPiM9nVcEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_DPiM93VcEe2XAuaIctqsHw" name="nbFilteredMaterials" content="nbFilteredMaterials" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_DPiM-HVcEe2XAuaIctqsHw" name="nbFilteredMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_DPiM-XVcEe2XAuaIctqsHw" name="getNbFilteredMaterials" content="import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def int nb_materials = 0;&#xD;&#xA;def log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;if (filteredMaterials != null) {&#xD;&#xA;&#x9;nb_materials = filteredMaterials.size();&#xD;&#xA;}&#xD;&#xA;logInfo(log_file, &quot;Number of valid materials to update : &quot; + String.valueOf(nb_materials));&#xD;&#xA;&#xD;&#xA;return nb_materials;&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;getNbFilteredMaterials&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPiM-nVcEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_DPiM-3VcEe2XAuaIctqsHw" documentation="List of materials with a valid energy, with fields:&#xD;&#xA;materialNumber, energy, retrofit, b100, xtl, zfe&#xD;&#xA;" name="filteredMaterials" multiple="true" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="java.util.Map"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_DPiM_HVcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_DPiM_XVcEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_DPiM_nVcEe2XAuaIctqsHw" name="maxNumberOfBatches" content="maxNumberOfBatches" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_DPiM_3VcEe2XAuaIctqsHw" name="maxNumberOfBatches" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_DPiNAHVcEe2XAuaIctqsHw" name="setMaxNumberOfBatches" content="def double_value = Math.ceil(nbFilteredMaterials /nbMaterialsPerBatch);&#xD;&#xA;return double_value.intValue();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNAXVcEe2XAuaIctqsHw" name="nbFilteredMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPiNAnVcEe2XAuaIctqsHw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_DPiNA3VcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_DPiNBHVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_DPiNBXVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_DPiNBnVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_DPiNB3VcEe2XAuaIctqsHw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_DPiNCHVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_DPiNCXVcEe2XAuaIctqsHw" name="Process one batch" outgoing="_DPiNjXVcEe2XAuaIctqsHw" incoming="_DPiNinVcEe2XAuaIctqsHw" type="STANDARD" testBefore="true">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_DPiNCnVcEe2XAuaIctqsHw" name="displayName()" content="def String desc = &quot;Batch n°&quot; + String.valueOf(batchCount + 1);&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_DPiNC3VcEe2XAuaIctqsHw" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
          </dynamicLabel>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_DPiNDHVcEe2XAuaIctqsHw" name="dynamicDescription()" content="def String desc = &quot;Processing materials &quot; + String.valueOf(materialStartIndex) + &quot; to &quot; + String.valueOf(materialEndIndex);&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_DPiNDXVcEe2XAuaIctqsHw" name="materialStartIndex" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            <referencedElements xmi:type="process:Data" xmi:id="_DPiNDnVcEe2XAuaIctqsHw" name="materialEndIndex" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
          </dynamicDescription>
          <stepSummary xmi:type="expression:Expression" xmi:id="_DPiND3VcEe2XAuaIctqsHw" name="descriptionAfterCompletion()" content="def String desc = &quot;Updated &quot; + String.valueOf(nbUpdatedPropositionsOnBatch) + &quot; propositions on this step, total=&quot; + String.valueOf(nbPropositionsUpdated);&#xD;&#xA;&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_DPiNEHVcEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            <referencedElements xmi:type="process:Data" xmi:id="_DPiNEXVcEe2XAuaIctqsHw" name="nbPropositionsUpdated" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
          </stepSummary>
          <data xmi:type="process:Data" xmi:id="_DPiNEnVcEe2XAuaIctqsHw" name="materialStartIndex" dataType="_DPiOUXVcEe2XAuaIctqsHw">
            <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNE3VcEe2XAuaIctqsHw" name="init_materialStartIndex()" content="return batchCount * nbMaterialsPerBatch;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPiNFHVcEe2XAuaIctqsHw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNFXVcEe2XAuaIctqsHw" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </defaultValue>
          </data>
          <data xmi:type="process:Data" xmi:id="_DPiNFnVcEe2XAuaIctqsHw" name="materialEndIndex" dataType="_DPiOUXVcEe2XAuaIctqsHw">
            <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNF3VcEe2XAuaIctqsHw" name="init_materialEndIndex()" content="def int end_index = (batchCount * nbMaterialsPerBatch) + nbMaterialsPerBatch;&#xD;&#xA;if (end_index >= nbFilteredMaterials) {&#xD;&#xA;&#x9;end_index = nbFilteredMaterials-1;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return end_index" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPiNGHVcEe2XAuaIctqsHw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNGXVcEe2XAuaIctqsHw" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNGnVcEe2XAuaIctqsHw" name="nbFilteredMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </defaultValue>
          </data>
          <data xmi:type="process:Data" xmi:id="_DPiNG3VcEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" dataType="_DPiOUXVcEe2XAuaIctqsHw">
            <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNHHVcEe2XAuaIctqsHw" name="0" content="0" returnType="java.lang.Integer"/>
          </data>
          <connectors xmi:type="process:Connector" xmi:id="_DPiNHXVcEe2XAuaIctqsHw" name="Process_Lot" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_DPiNHnVcEe2XAuaIctqsHw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.12.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_DPiNH3VcEe2XAuaIctqsHw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_DPiNIHVcEe2XAuaIctqsHw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_DPiNIXVcEe2XAuaIctqsHw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_DPiNInVcEe2XAuaIctqsHw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_DPiNI3VcEe2XAuaIctqsHw" name="ProcessOneLotOfMaterials" content="import com.sgdbf.model.Proposition&#xD;&#xA;import com.sgdbf.model.PropositionDAO&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;logInfo(log_file, &quot;Starting batch &quot; + String.valueOf(batchCount) + &quot; : processing materials &quot; + String.valueOf(materialStartIndex) + &quot; to &quot; + String.valueOf(materialEndIndex));&#xD;&#xA;&#x9;return filteredMaterials.subList(materialStartIndex, materialEndIndex);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;def String error_msg = &quot;Exception processing batch &quot; + String.valueOf(batchCount) + &quot; : &quot; + e;&#xD;&#xA;&#x9;logError(log_file, error_msg);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_DPiNJHVcEe2XAuaIctqsHw" documentation="List of materials with a valid energy, with fields:&#xD;&#xA;materialNumber, energy, retrofit, b100, xtl, zfe&#xD;&#xA;" name="filteredMaterials" multiple="true" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="java.util.Map"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_DPiNJXVcEe2XAuaIctqsHw" name="materialStartIndex" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_DPiNJnVcEe2XAuaIctqsHw" name="materialEndIndex" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPiNJ3VcEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_DPiNKHVcEe2XAuaIctqsHw" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_DPiNKXVcEe2XAuaIctqsHw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_DPiNKnVcEe2XAuaIctqsHw" name="updatedPropositions" content="updatedPropositions" type="TYPE_VARIABLE" returnType="java.util.List">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_DPiNK3VcEe2XAuaIctqsHw" name="updatedPropositions" multiple="true" dataType="_DPiOV3VcEe2XAuaIctqsHw" className="com.sgdbf.model.Proposition"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_DPiNLHVcEe2XAuaIctqsHw" name="getPropositionsToUpdate" content="import com.sgdbf.model.Proposition&#xD;&#xA;import com.sgdbf.model.PropositionDAO&#xD;&#xA;import com.sgdbf.pop3p.groovy.LogFile&#xD;&#xA;&#xD;&#xA;def LogFile log_file = LogFile.getLogFile(logClass);&#xD;&#xA;&#xD;&#xA;def int nb_materials_processed = 0;&#xD;&#xA;def int nb_propositions_updated = 0;&#xD;&#xA;def String error_msg = &quot;&quot;;&#xD;&#xA;def List&lt;Proposition> list_propositions_to_update = [];&#xD;&#xA;&#xD;&#xA;try {&#xD;&#xA;&#x9;// Get list of materials to process&#xD;&#xA;&#x9;def List&lt;Map&lt;String, Object>> materials_list = result;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Process each material&#xD;&#xA;&#x9;for (Map&lt;String, Object> one_material : materials_list) {&#xD;&#xA;&#x9;&#x9;def String material_number = one_material[&quot;materialNumber&quot;];&#xD;&#xA;&#x9;&#x9;def int nb_material_props_updated = 0;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// Search propositions for this material&#xD;&#xA;&#x9;&#x9;def List&lt;Proposition> list_propositions = searchPropositions(propositionDAO, material_number);&#xD;&#xA;&#x9;&#x9;if (list_propositions == null) {&#xD;&#xA;&#x9;&#x9;&#x9;error_msg = &quot;Error processing batch &quot; + String.valueOf(batchCount) + &quot;, failed to search existing propositions for material [&quot; + material_number + &quot;]&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;logError(log_file, error_msg);&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;def int nb_propositions = list_propositions.size() ;&#xD;&#xA;&#x9;&#x9;&#x9;one_material[&quot;nbPropositions&quot;] = nb_propositions;&#xD;&#xA;&#x9;&#x9;&#x9;if (nb_propositions > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Checking the propositions to update&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Batch &quot; + String.valueOf(batchCount) + &quot; : Updating &quot; + String.valueOf(nb_propositions) + &quot; propositions for material [&quot; + material_number + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;for (int prop_num=0; prop_num&lt;nb_propositions; prop_num++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def Proposition one_prop = list_propositions[prop_num];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;one_material = updateProposition(one_prop, one_material);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;def one_prop_error_msg = one_material[&quot;errorMsg&quot;];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (one_prop_error_msg  != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;logError(log_file, &quot;Failed to update proposition [&quot; + one_prop.persistenceId +  &quot;] : &quot; + one_prop_error_msg);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (error_msg != &quot;&quot;) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;error_msg += &quot; - &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;error_msg += one_prop_error_msg;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Get list of propositions updated&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;def List&lt;Proposition> updated_props = one_material[&quot;updatedPropositions&quot;];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if ((updated_props != null) &amp;&amp; (updated_props.size() > 0)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list_propositions_to_update.addAll(updated_props);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;nb_material_props_updated += updated_props.size();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Count total number of updated propositions&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;nb_propositions_updated += nb_material_props_updated;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logDebug(log_file, &quot;Batch &quot; + String.valueOf(batchCount) + &quot; : no proposition found for material [&quot; + material_number + &quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// Increment number of materials processed&#xD;&#xA;&#x9;&#x9;&#x9;nb_materials_processed++;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} // End for materials&#xD;&#xA;&#x9;logInfo(log_file, &quot;End of batch &quot; + String.valueOf(batchCount) + &quot; : processed &quot; + String.valueOf(nb_materials_processed) + &quot; materials and updated &quot; + String.valueOf(nb_propositions_updated) + &quot; propositions&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;} catch(e) {&#xD;&#xA;&#x9;error_msg = &quot;Exception processing batch &quot; + String.valueOf(batchCount) + &quot; : &quot; + e;&#xD;&#xA;&#x9;logError(log_file, error_msg);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return list_propositions_to_update;&#xD;&#xA;&#xD;&#xA;def List&lt;Proposition> searchPropositions(PropositionDAO propositionDAO, String material_number) {&#xD;&#xA;&#x9;List&lt;Proposition> props = propositionDAO.findByMaterialNumber(material_number, 0, 1000);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return props;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def Map&lt;String, Object> updateProposition(Proposition one_prop, Map&lt;String, Object> one_material) {&#xD;&#xA;&#x9;def boolean is_updated = false;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check energy code&#xD;&#xA;&#x9;def String energy_code = one_material[&quot;energyCode&quot;];&#xD;&#xA;&#x9;if ((energy_code != null) &amp;&amp; (one_prop.currentEnergyCode != energy_code )) {&#xD;&#xA;&#x9;&#x9;one_prop.currentEnergyCode = energy_code;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;// Check energy name&#xD;&#xA;&#x9;def String energy_name = one_material[&quot;energyName&quot;];&#xD;&#xA;&#x9;if ((energy_name != null) &amp;&amp; (one_prop.currentEnergyName != energy_name )) {&#xD;&#xA;&#x9;&#x9;one_prop.currentEnergyName = energy_name;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;// Check retrofit flag&#xD;&#xA;&#x9;def Boolean retrofit = one_material[&quot;retrofit&quot;];&#xD;&#xA;&#x9;if ((retrofit == true) &amp;&amp; (one_prop.currentRetrofitable != retrofit)) {&#xD;&#xA;&#x9;&#x9;one_prop.currentRetrofitable = retrofit;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check B100&#xD;&#xA;&#x9;def Boolean b100 =  one_material[&quot;b100&quot;];&#xD;&#xA;&#x9;if ((b100 == true) &amp;&amp; (one_prop.currentBiofuelB100 != b100)) {&#xD;&#xA;&#x9;&#x9;one_prop.currentBiofuelB100 = b100;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Check XTL&#xD;&#xA;&#x9;def Boolean xtl =  one_material[&quot;xtl&quot;];&#xD;&#xA;&#x9;if ((xtl == true) &amp;&amp; (one_prop.currentBiofuelXTL != xtl)) {&#xD;&#xA;&#x9;&#x9;one_prop.currentBiofuelXTL = xtl;&#xD;&#xA;&#x9;&#x9;is_updated = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;if (is_updated) {&#xD;&#xA;&#x9;&#x9;def List&lt;Proposition> updated_props = one_material[&quot;updatedPropositions&quot;];&#xD;&#xA;&#x9;&#x9;if (updated_props == null) {&#xD;&#xA;&#x9;&#x9;&#x9;updated_props = [];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;updated_props.add(one_prop);&#xD;&#xA;&#x9;&#x9;one_material[&quot;updatedPropositions&quot;] = updated_props;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;return one_material;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Function LogMessage&#xD;&#xA;def void logDebug(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.debug(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logInfo(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.info(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;def void logError(LogFile log_file, String message) {&#xD;&#xA;&#x9;log_file.error(&quot;ProcessOneLotOfMaterials&quot;, message);&#xD;&#xA;}&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
                <referencedElements xmi:type="parameter:Parameter" xmi:id="_DPiNLXVcEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
                <referencedElements xmi:type="process:Data" xmi:id="_DPiNLnVcEe2XAuaIctqsHw" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
                <referencedElements xmi:type="definition:Output" xmi:id="_DPiNL3VcEe2XAuaIctqsHw" name="result" type="java.lang.Object"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_DPiNMHVcEe2XAuaIctqsHw" name="propositionDAO" content="propositionDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.sgdbf.model.PropositionDAO" returnTypeFixed="true"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_DPiNMXVcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <operations xmi:type="expression:Operation" xmi:id="_DPiNMnVcEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_DPiNM3VcEe2XAuaIctqsHw" name="batchCount" content="batchCount" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNNHVcEe2XAuaIctqsHw" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_DPiNNXVcEe2XAuaIctqsHw" name="increment" content="batchCount + 1;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNNnVcEe2XAuaIctqsHw" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_DPiNN3VcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_DPiNOHVcEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_DPiNOXVcEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" content="nbUpdatedPropositionsOnBatch" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNOnVcEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_DPiNO3VcEe2XAuaIctqsHw" name="numberOfPropositionsInList" content="def int nb_props = 0;&#xD;&#xA;&#xD;&#xA;if (updatedPropositions != null) {&#xD;&#xA;&#x9;nb_props = updatedPropositions.size();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return nb_props ;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_DPiNPHVcEe2XAuaIctqsHw" name="updatedPropositions" multiple="true" dataType="_DPiOV3VcEe2XAuaIctqsHw" className="com.sgdbf.model.Proposition"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_DPiNPXVcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_DPiNPnVcEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_DPiNP3VcEe2XAuaIctqsHw" name="nbPropositionsUpdated" content="nbPropositionsUpdated" type="TYPE_VARIABLE" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNQHVcEe2XAuaIctqsHw" name="nbPropositionsUpdated" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_DPiNQXVcEe2XAuaIctqsHw" name="addNumberOnStep" content="return nbPropositionsUpdated + nbUpdatedPropositionsOnBatch;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer">
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNQnVcEe2XAuaIctqsHw" name="nbUpdatedPropositionsOnBatch" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="process:Data" xmi:id="_DPiNQ3VcEe2XAuaIctqsHw" name="nbPropositionsUpdated" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_DPiNRHVcEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_DPiNRXVcEe2XAuaIctqsHw" name="loopWhile()" content="nbMaterialsProcessed &lt; nbFilteredMaterials" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_DPiNRnVcEe2XAuaIctqsHw" name="nbMaterialsProcessed" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            <referencedElements xmi:type="process:Data" xmi:id="_DPiNR3VcEe2XAuaIctqsHw" name="nbFilteredMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
          </loopCondition>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_DPiNSHVcEe2XAuaIctqsHw" name="maxNumberOfBatches" content="maxNumberOfBatches" type="TYPE_VARIABLE" returnType="java.lang.Integer" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_DPiNSXVcEe2XAuaIctqsHw" name="maxNumberOfBatches" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
          </loopMaximum>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_DPiNSnVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_DPiNS3VcEe2XAuaIctqsHw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_DPiNTHVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <BoundaryIntermediateEvents xmi:type="process:IntermediateErrorCatchEvent" xmi:id="_LsElMHVlEe2XAuaIctqsHw" name="ProcessBatchError" outgoing="_Nxv4QHVlEe2XAuaIctqsHw"/>
        </elements>
        <elements xmi:type="process:EndEvent" xmi:id="_DPiNTXVcEe2XAuaIctqsHw" name="End" incoming="_LLzf0HVcEe2XAuaIctqsHw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_DPiNTnVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_DPiNT3VcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_DPiNUHVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_DPiNUXVcEe2XAuaIctqsHw" name="Build report" outgoing="_DPiNkHVcEe2XAuaIctqsHw" incoming="_DPiNjXVcEe2XAuaIctqsHw _DPiNk3VcEe2XAuaIctqsHw _DPiNnnVcEe2XAuaIctqsHw _DPiNo3VcEe2XAuaIctqsHw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_DPiNUnVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_DPiNU3VcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_DPiNVHVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <operations xmi:type="expression:Operation" xmi:id="_4Kcc0HVdEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_4Kcc0XVdEe2XAuaIctqsHw" name="executionReport" content="executionReport" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_4ndI8HVdEe2XAuaIctqsHw" name="executionReport" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_4Kcc0nVdEe2XAuaIctqsHw" name="buildReport" content="def String report = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;if ((errorMsg == null) || (errorMsg == &quot;&quot;)) {&#xD;&#xA;&#x9;report = &quot;Update process completed successfully&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;} else {&#xD;&#xA;&#x9;report = &quot;Error during update process : &quot; + errorMsg;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;report += &quot;&lt;BR>&lt;BR>Input file : &quot; + materialsFile.getFileName();&#xD;&#xA;if (nbMaterials != null) {&#xD;&#xA;&#x9;report += &quot;Number of materials in input file : &quot; + String.valueOf(nbMaterials) + &quot;&lt;BR>&quot;;&#xD;&#xA;}&#xD;&#xA;if (nbFilteredMaterials != null) {&#xD;&#xA;&#x9;report += &quot;Number of materials in input file with valid energy : &quot; + String.valueOf(nbFilteredMaterials) + &quot;&lt;BR>&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;if (batchCount != null) {&#xD;&#xA;&#x9;report += &quot;Number of batches executed &quot; + String.valueOf(batchCount) + &quot; with &quot; + String.valueOf(nbMaterialsPerBatch) + &quot; materials processed per batch&lt;BR>&quot;;&#xD;&#xA;}&#xD;&#xA;if (nbPropositionsUpdated != null) {&#xD;&#xA;&#x9;report += &quot;Number of propositions updated : &quot; + String.valueOf(nbPropositionsUpdated) + &quot;&lt;BR>&quot;;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return report;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="process:JavaObjectData" xmi:id="_mwQqoHVtEe2-SNUo-hJ98Q" name="materialsFile" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="org.bonitasoft.engine.bpm.contract.FileInputValue"/>
              <referencedElements xmi:type="process:Data" xmi:id="_mwQqoXVtEe2-SNUo-hJ98Q" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="process:Data" xmi:id="_mwQqonVtEe2-SNUo-hJ98Q" name="nbMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="process:Data" xmi:id="_mwQqo3VtEe2-SNUo-hJ98Q" name="nbFilteredMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="process:Data" xmi:id="_mwQqpHVtEe2-SNUo-hJ98Q" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="parameter:Parameter" xmi:id="_mwQqpXVtEe2-SNUo-hJ98Q" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
              <referencedElements xmi:type="process:Data" xmi:id="_mwQqpnVtEe2-SNUo-hJ98Q" name="nbPropositionsUpdated" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_4Kcc03VdEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_DPiNVXVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_DPiNVnVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_DPiNV3VcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_DPiNWHVcEe2XAuaIctqsHw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_DPiNWXVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_DPiNWnVcEe2XAuaIctqsHw" name="Report error" outgoing="_DPiNk3VcEe2XAuaIctqsHw" incoming="_DPiNlnVcEe2XAuaIctqsHw _DPiNmnVcEe2XAuaIctqsHw _Nxv4QHVlEe2XAuaIctqsHw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_DPiNW3VcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_DPiNXHVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_DPiNXXVcEe2XAuaIctqsHw" name="descriptionAfterCompletion()" content="def String desc = &quot;Error detected&quot;;&#xD;&#xA;&#xD;&#xA;if (errorMsg != null) {&#xD;&#xA;&#x9;desc += &quot; : &quot; + errorMsg;&#xD;&#xA;}&#xD;&#xA;return desc.take(255);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:Data" xmi:id="_DPiNXnVcEe2XAuaIctqsHw" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
          </stepSummary>
          <operations xmi:type="expression:Operation" xmi:id="_RbhbUHVlEe2XAuaIctqsHw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_RbhbUXVlEe2XAuaIctqsHw" name="errorMsg" content="errorMsg" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_SPwUoHVlEe2XAuaIctqsHw" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_RbhbUnVlEe2XAuaIctqsHw" name="newScript()" content="def String default_error = &quot;Error processing materials (batch n°&quot; + String.valueOf(batchCount) + &quot;)&quot;;&#xD;&#xA;&#xD;&#xA;def String error_msg = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;if ((errorMsg != null) &amp;&amp; (errorMsg != &quot;&quot;)) {&#xD;&#xA;&#x9;error_msg = errorMsg;&#xD;&#xA; } else {&#xD;&#xA;&#x9;error_msg = default_error;&#xD;&#xA;}&#xD;&#xA;return error_msg;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="process:Data" xmi:id="_NyGoIHVmEe2XAuaIctqsHw" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
              <referencedElements xmi:type="process:Data" xmi:id="_NyGoIXVmEe2XAuaIctqsHw" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_RbhbU3VlEe2XAuaIctqsHw" type="ASSIGNMENT"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_DPiNX3VcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_DPiNYHVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_DPiNYXVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_DPiNYnVcEe2XAuaIctqsHw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_DPiNY3VcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_LKzaQHVcEe2XAuaIctqsHw" name="Send report" outgoing="_LLzf0HVcEe2XAuaIctqsHw" incoming="_DPiNkHVcEe2XAuaIctqsHw">
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_LLFHEHVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_LLEgAHVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_LLFHEXVcEe2XAuaIctqsHw" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_YWUj4HVdEe2XAuaIctqsHw" name="sendReport" definitionId="email" event="ON_ENTER" definitionVersion="1.2.0">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_YWUj4XVdEe2XAuaIctqsHw" definitionId="email" version="1.2.0" modelVersion="7.12.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj4nVdEe2XAuaIctqsHw" key="smtpHost">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj43VdEe2XAuaIctqsHw" name="smtpHost" content="smtpHost" interpreter="GROOVY" type="TYPE_PARAMETER" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_YWUj5HVdEe2XAuaIctqsHw" name="smtpHost" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj5XVdEe2XAuaIctqsHw" key="smtpPort">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj5nVdEe2XAuaIctqsHw" name="smtpPort" content="smtpPort" interpreter="GROOVY" type="TYPE_PARAMETER" returnType="java.lang.Integer" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_YWUj53VdEe2XAuaIctqsHw" name="smtpPort" typeClassname="java.lang.Integer"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj6HVdEe2XAuaIctqsHw" key="sslSupport">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj6XVdEe2XAuaIctqsHw" name="false" content="false" returnType="java.lang.Boolean" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj6nVdEe2XAuaIctqsHw" key="starttlsSupport">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj63VdEe2XAuaIctqsHw" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj7HVdEe2XAuaIctqsHw" key="trustCertificate">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj7XVdEe2XAuaIctqsHw" name="false" content="false" returnType="java.lang.Boolean" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj7nVdEe2XAuaIctqsHw" key="userName">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj73VdEe2XAuaIctqsHw" name="smtpUsername" content="smtpUsername" type="TYPE_PARAMETER" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_YWUj8HVdEe2XAuaIctqsHw" name="smtpUsername" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj8XVdEe2XAuaIctqsHw" key="password">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj8nVdEe2XAuaIctqsHw" name="smtpPassword" content="smtpPassword" type="TYPE_PARAMETER" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_YWUj83VdEe2XAuaIctqsHw" name="smtpPassword" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj9HVdEe2XAuaIctqsHw" key="from">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj9XVdEe2XAuaIctqsHw" name="noReplyEmail" content="noReplyEmail" type="TYPE_PARAMETER" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_1Te2wHVdEe2XAuaIctqsHw" name="noReplyEmail" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj9nVdEe2XAuaIctqsHw" key="returnPath">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj93VdEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj-HVdEe2XAuaIctqsHw" key="to">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj-XVdEe2XAuaIctqsHw" name="administratorEmail" content="administratorEmail" type="TYPE_PARAMETER" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_1Tfd0HVdEe2XAuaIctqsHw" name="administratorEmail" typeClassname="java.lang.String"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj-nVdEe2XAuaIctqsHw" key="bcc">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj-3VdEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj_HVdEe2XAuaIctqsHw" key="cc">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj_XVdEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUj_nVdEe2XAuaIctqsHw" key="subject">
                <expression xmi:type="expression:Expression" xmi:id="_YWUj_3VdEe2XAuaIctqsHw" name="Update energy on proposition : execution report" content="Update energy on proposition : execution report" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUkAHVdEe2XAuaIctqsHw" key="html">
                <expression xmi:type="expression:Expression" xmi:id="_YWUkAXVdEe2XAuaIctqsHw" name="true" content="true" returnType="java.lang.Boolean" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUkAnVdEe2XAuaIctqsHw" key="message">
                <expression xmi:type="expression:Expression" xmi:id="_YWUkA3VdEe2XAuaIctqsHw" name="executionReport" content="executionReport" type="TYPE_VARIABLE" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Data" xmi:id="_YWUkBHVdEe2XAuaIctqsHw" name="executionReport" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUkBXVdEe2XAuaIctqsHw" key="headers">
                <expression xmi:type="expression:TableExpression" xmi:id="_YWUkBnVdEe2XAuaIctqsHw"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUkB3VdEe2XAuaIctqsHw" key="charset">
                <expression xmi:type="expression:Expression" xmi:id="_YWUkCHVdEe2XAuaIctqsHw" name="UTF-8" content="UTF-8" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUkCXVdEe2XAuaIctqsHw" key="replyTo">
                <expression xmi:type="expression:Expression" xmi:id="_YWUkCnVdEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_YWUkC3VdEe2XAuaIctqsHw" key="attachments">
                <expression xmi:type="expression:ListExpression" xmi:id="_YWUkDHVdEe2XAuaIctqsHw"/>
              </parameters>
            </configuration>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_LLFuIHVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_LLFuIXVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_LLFuInVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_LLFuJHVcEe2XAuaIctqsHw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_LLFuI3VcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
      </elements>
      <data xmi:type="process:JavaObjectData" xmi:id="_DPiNZHVcEe2XAuaIctqsHw" name="materialsData" multiple="true" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="java.util.List">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNZXVcEe2XAuaIctqsHw" name="emptyList" content="return [];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_DPiNZnVcEe2XAuaIctqsHw" name="materialsFile" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="org.bonitasoft.engine.bpm.contract.FileInputValue">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNZ3VcEe2XAuaIctqsHw" name="excelFile" content="excelFile" interpreter="GROOVY" type="TYPE_CONTRACT_INPUT" returnType="org.bonitasoft.engine.bpm.contract.FileInputValue">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_DPiNaHVcEe2XAuaIctqsHw" name="excelFile" type="FILE">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_DPiNaXVcEe2XAuaIctqsHw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_DPiNanVcEe2XAuaIctqsHw" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNa3VcEe2XAuaIctqsHw" name="emptystring" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_DPiNbHVcEe2XAuaIctqsHw" name="nbMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNbXVcEe2XAuaIctqsHw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_DPiNbnVcEe2XAuaIctqsHw" name="ignoreHeaderLine" dataType="_DPiOT3VcEe2XAuaIctqsHw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNb3VcEe2XAuaIctqsHw" name="withHeaderLine" content="withHeaderLine" type="TYPE_CONTRACT_INPUT" returnType="java.lang.Boolean">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_DPiNcHVcEe2XAuaIctqsHw" name="withHeaderLine" type="BOOLEAN">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_DPiNcXVcEe2XAuaIctqsHw"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_DPiNcnVcEe2XAuaIctqsHw" documentation="List of materials with a valid energy, with fields:&#xD;&#xA;materialNumber, energy, retrofit, b100, xtl, zfe&#xD;&#xA;" name="filteredMaterials" multiple="true" dataType="_DPiOVXVcEe2XAuaIctqsHw" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNc3VcEe2XAuaIctqsHw" content="" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_DPiNdHVcEe2XAuaIctqsHw" name="nbFilteredMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNdXVcEe2XAuaIctqsHw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_DPiNdnVcEe2XAuaIctqsHw" name="nbMaterialsProcessed" dataType="_DPiOUXVcEe2XAuaIctqsHw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNd3VcEe2XAuaIctqsHw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_DPiNeHVcEe2XAuaIctqsHw" name="maxNumberOfBatches" dataType="_DPiOUXVcEe2XAuaIctqsHw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNeXVcEe2XAuaIctqsHw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_DPiNenVcEe2XAuaIctqsHw" name="batchCount" dataType="_DPiOUXVcEe2XAuaIctqsHw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNe3VcEe2XAuaIctqsHw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:BusinessObjectData" xmi:id="_DPiNfHVcEe2XAuaIctqsHw" name="updatedPropositions" multiple="true" dataType="_DPiOV3VcEe2XAuaIctqsHw" className="com.sgdbf.model.Proposition">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNfXVcEe2XAuaIctqsHw" name="init_updatedPropositions()" content="return [];" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_DPiNfnVcEe2XAuaIctqsHw" name="nbPropositionsUpdated" dataType="_DPiOUXVcEe2XAuaIctqsHw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_DPiNf3VcEe2XAuaIctqsHw" name="0" content="0" returnType="java.lang.Integer"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_TXoRwHVcEe2XAuaIctqsHw" name="executionReport" dataType="_DPiOVHVcEe2XAuaIctqsHw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_TXoRwXVcEe2XAuaIctqsHw" name="EmptyString" content="return &quot;&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT"/>
      </data>
      <formMapping xmi:type="process:FormMapping" xmi:id="_DPiNgHVcEe2XAuaIctqsHw">
        <targetForm xmi:type="expression:Expression" xmi:id="_DPiNgXVcEe2XAuaIctqsHw" name="loadExcelFileForm" content="707763e5-9799-4612-88f6-8c507760c18c" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_DPiNgnVcEe2XAuaIctqsHw">
        <targetForm xmi:type="expression:Expression" xmi:id="_DPiNg3VcEe2XAuaIctqsHw" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNhHVcEe2XAuaIctqsHw" target="_DPhlx3VcEe2XAuaIctqsHw" source="_DPhlw3VcEe2XAuaIctqsHw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNhXVcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNhnVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNh3VcEe2XAuaIctqsHw" name="materials loaded" target="_DPiM6HVcEe2XAuaIctqsHw" source="_DPhlx3VcEe2XAuaIctqsHw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNiHVcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNiXVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNinVcEe2XAuaIctqsHw" name="materials to process" target="_DPiNCXVcEe2XAuaIctqsHw" source="_DPiM6HVcEe2XAuaIctqsHw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNi3VcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNjHVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNjXVcEe2XAuaIctqsHw" target="_DPiNUXVcEe2XAuaIctqsHw" source="_DPiNCXVcEe2XAuaIctqsHw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNjnVcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNj3VcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNkHVcEe2XAuaIctqsHw" target="_LKzaQHVcEe2XAuaIctqsHw" source="_DPiNUXVcEe2XAuaIctqsHw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNkXVcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNknVcEe2XAuaIctqsHw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNk3VcEe2XAuaIctqsHw" target="_DPiNUXVcEe2XAuaIctqsHw" source="_DPiNWnVcEe2XAuaIctqsHw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNlHVcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNlXVcEe2XAuaIctqsHw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNlnVcEe2XAuaIctqsHw" name="Error detected" target="_DPiNWnVcEe2XAuaIctqsHw" source="_DPhlx3VcEe2XAuaIctqsHw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNl3VcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNmHVcEe2XAuaIctqsHw" name="(errorMsg != null) &amp;&amp; (errorMsg != &quot;&quot;)" content="return (errorMsg != null) &amp;&amp; (errorMsg != &quot;&quot;);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_DPiNmXVcEe2XAuaIctqsHw" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNmnVcEe2XAuaIctqsHw" name="error detected" target="_DPiNWnVcEe2XAuaIctqsHw" source="_DPiM6HVcEe2XAuaIctqsHw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNm3VcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNnHVcEe2XAuaIctqsHw" name="newScript()" content="return (errorMsg != null) &amp;&amp; (errorMsg != &quot;&quot;);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_DPiNnXVcEe2XAuaIctqsHw" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNnnVcEe2XAuaIctqsHw" name="No materials found" target="_DPiNUXVcEe2XAuaIctqsHw" source="_DPhlx3VcEe2XAuaIctqsHw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNn3VcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNoHVcEe2XAuaIctqsHw" name="No material" content="return (nbMaterials == 0) &amp;&amp; (errorMsg == &quot;&quot;);" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_DPiNoXVcEe2XAuaIctqsHw" name="nbMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
          <referencedElements xmi:type="process:Data" xmi:id="_DPiNonVcEe2XAuaIctqsHw" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_DPiNo3VcEe2XAuaIctqsHw" name="No materials in filtered list" target="_DPiNUXVcEe2XAuaIctqsHw" source="_DPiM6HVcEe2XAuaIctqsHw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_DPiNpHVcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_DPiNpXVcEe2XAuaIctqsHw" name="newScript()" content="(nbFilteredMaterials == 0) &amp;&amp; (errorMsg == &quot;&quot;)" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_DPiNpnVcEe2XAuaIctqsHw" name="nbFilteredMaterials" dataType="_DPiOUXVcEe2XAuaIctqsHw"/>
          <referencedElements xmi:type="process:Data" xmi:id="_DPiNp3VcEe2XAuaIctqsHw" name="errorMsg" dataType="_DPiOVHVcEe2XAuaIctqsHw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_LLzf0HVcEe2XAuaIctqsHw" target="_DPiNTXVcEe2XAuaIctqsHw" source="_LKzaQHVcEe2XAuaIctqsHw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_LL0t8HVcEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_LL0t8XVcEe2XAuaIctqsHw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_Nxv4QHVlEe2XAuaIctqsHw" target="_DPiNWnVcEe2XAuaIctqsHw" source="_LsElMHVlEe2XAuaIctqsHw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_Nx1X0HVlEe2XAuaIctqsHw"/>
        <condition xmi:type="expression:Expression" xmi:id="_Nx1X0XVlEe2XAuaIctqsHw" name="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_DPiNqHVcEe2XAuaIctqsHw" documentation="Admin user" name="Administrator" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_DPiNqXVcEe2XAuaIctqsHw" name="sgdbf-DEV" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_DPiNqnVcEe2XAuaIctqsHw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_DPiNq3VcEe2XAuaIctqsHw" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_DPiNrHVcEe2XAuaIctqsHw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_DPiNrXVcEe2XAuaIctqsHw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_DPiNrnVcEe2XAuaIctqsHw">
              <role>AppAdmin</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_DPiNr3VcEe2XAuaIctqsHw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_DPiNsHVcEe2XAuaIctqsHw" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_nLeaQHVdEe2XAuaIctqsHw" type="CONNECTOR" definitionId="email" definitionVersion="1.2.0" implementationId="email-impl" implementationVersion="1.3.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiNsXVcEe2XAuaIctqsHw" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiNsnVcEe2XAuaIctqsHw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_nnjSQHVdEe2XAuaIctqsHw" id="email-impl-1.3.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_nolNAHVdEe2XAuaIctqsHw" key="email-impl -- 1.3.0" value="bonita-connector-email-1.3.0.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_noyoYHVdEe2XAuaIctqsHw" key="email-impl -- 1.3.0" value="javax.mail-1.6.2.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_noz2gHVdEe2XAuaIctqsHw" key="email-impl -- 1.3.0" value="javax.mail-api-1.6.2.jar" type="CONNECTOR"/>
          </children>
          <children xmi:type="configuration:FragmentContainer" xmi:id="_EpaLcIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_Ep-MIIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiNtXVcEe2XAuaIctqsHw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNtnVcEe2XAuaIctqsHw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNt3VcEe2XAuaIctqsHw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNuHVcEe2XAuaIctqsHw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNuXVcEe2XAuaIctqsHw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNunVcEe2XAuaIctqsHw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNu3VcEe2XAuaIctqsHw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNvHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNvXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNvnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNv3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNwHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNwXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNwnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNw3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNxHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNxXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNxnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNx3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNyHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNyXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNynVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNy3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNzHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNzXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiNznVcEe2XAuaIctqsHw" id="OTHER">
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiNz3VcEe2XAuaIctqsHw" key="poi-4.0.0.jar" value="poi-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN0HVcEe2XAuaIctqsHw" key="poi-ooxml-4.0.0.jar" value="poi-ooxml-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN0XVcEe2XAuaIctqsHw" key="poi-scratchpad-4.0.0.jar" value="poi-scratchpad-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN0nVcEe2XAuaIctqsHw" key="commons-collections4-4.2.jar" value="commons-collections4-4.2.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN03VcEe2XAuaIctqsHw" key="commons-compress-1.21.jar" value="commons-compress-1.21.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN1HVcEe2XAuaIctqsHw" key="poi-ooxml-schemas-4.0.0.jar" value="poi-ooxml-schemas-4.0.0.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN1XVcEe2XAuaIctqsHw" key="commons-math3-3.6.1.jar" value="commons-math3-3.6.1.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN1nVcEe2XAuaIctqsHw" key="curvesapi-1.05.jar" value="curvesapi-1.05.jar" type="JAR"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN13VcEe2XAuaIctqsHw" key="xmlbeans-3.0.1.jar" value="xmlbeans-3.0.1.jar" type="JAR"/>
        </processDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiN2HVcEe2XAuaIctqsHw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN2XVcEe2XAuaIctqsHw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN2nVcEe2XAuaIctqsHw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN23VcEe2XAuaIctqsHw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN3HVcEe2XAuaIctqsHw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN3XVcEe2XAuaIctqsHw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN3nVcEe2XAuaIctqsHw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN33VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN4HVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN4XVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN4nVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN43VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN5HVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN5XVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN5nVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN53VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN6HVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN6XVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN6nVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN63VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN7HVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN7XVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN7nVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN73VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiN8HVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiN8XVcEe2XAuaIctqsHw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_DPiN8nVcEe2XAuaIctqsHw" name="logClass" value="com.sgdbf.pop3p.groovy.UpdateEnergyOnPropositions" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_DPiN83VcEe2XAuaIctqsHw" name="energyCodeToBeDefined" value="99" typeClassname="java.lang.String" description="Lyre energy Lyre code 'A définir' : ignore material in this case"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_DPiN9HVcEe2XAuaIctqsHw" name="nbMaterialsPerBatch" value="200" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_uuO2gHVcEe2XAuaIctqsHw" name="smtpHost" value="smtpauth.mail.saint-gobain.net" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_uuPdkHVcEe2XAuaIctqsHw" name="smtpPort" value="25" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_uuPdkXVcEe2XAuaIctqsHw" name="smtpUsername" value="CFRsvc-smtp-POPB" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_uuPdknVcEe2XAuaIctqsHw" name="smtpPassword" value="p/b23.NE" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_no250HVdEe2XAuaIctqsHw" name="noReplyEmail" value="noreply-BONITA@saint-gobain.com" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_no250XVdEe2XAuaIctqsHw" name="administratorEmail" value="Christian.Franiatte@saint-gobain.com" typeClassname="java.lang.String"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_DPiN9XVcEe2XAuaIctqsHw" name="sgdbf-uat" version="7.12.0-004" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_DPiN9nVcEe2XAuaIctqsHw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_DPiN93VcEe2XAuaIctqsHw" name="Administrator">
            <groups xmi:type="actormapping:Groups" xmi:id="_DPiN-HVcEe2XAuaIctqsHw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_DPiN-XVcEe2XAuaIctqsHw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_DPiN-nVcEe2XAuaIctqsHw"/>
            <users xmi:type="actormapping:Users" xmi:id="_DPiN-3VcEe2XAuaIctqsHw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_DPiN_HVcEe2XAuaIctqsHw" type="CONNECTOR" definitionId="scripting-groovy-script" definitionVersion="1.0.1" implementationId="scripting-groovy-script-impl" implementationVersion="1.1.4"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_Et5C0IExEe2eMJMBNSbmHw" type="CONNECTOR" definitionId="email" definitionVersion="1.2.0" implementationId="email-impl" implementationVersion="1.3.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiN_XVcEe2XAuaIctqsHw" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiN_nVcEe2XAuaIctqsHw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_EtQwsIExEe2eMJMBNSbmHw" id="scripting-groovy-script-impl-1.1.4">
            <fragments xmi:type="configuration:Fragment" xmi:id="_Et3NoIExEe2eMJMBNSbmHw" key="scripting-groovy-script-impl -- 1.1.4" value="bonita-connector-groovy-1.1.4.jar" type="CONNECTOR"/>
          </children>
          <children xmi:type="configuration:FragmentContainer" xmi:id="_EuopsIExEe2eMJMBNSbmHw" id="email-impl-1.3.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_EvQ70IExEe2eMJMBNSbmHw" key="email-impl -- 1.3.0" value="bonita-connector-email-1.3.0.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_EvQ70YExEe2eMJMBNSbmHw" key="email-impl -- 1.3.0" value="javax.mail-1.6.2.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_EvQ70oExEe2eMJMBNSbmHw" key="email-impl -- 1.3.0" value="javax.mail-api-1.6.2.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiOAXVcEe2XAuaIctqsHw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOAnVcEe2XAuaIctqsHw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOA3VcEe2XAuaIctqsHw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOBHVcEe2XAuaIctqsHw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOBXVcEe2XAuaIctqsHw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOBnVcEe2XAuaIctqsHw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOB3VcEe2XAuaIctqsHw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOCHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOCXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOCnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOC3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiODHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiODXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiODnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOD3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOEHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOEXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOEnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOE3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOFHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOFXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOFnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOF3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOGHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOGXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiOGnVcEe2XAuaIctqsHw" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiOG3VcEe2XAuaIctqsHw" id="GROOVY_SCRIPT">
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOHHVcEe2XAuaIctqsHw" key="ConfigFile.groovy" value="ConfigFile.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOHXVcEe2XAuaIctqsHw" key="MailContent.groovy" value="MailContent.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOHnVcEe2XAuaIctqsHw" key="MailTemplate.groovy" value="MailTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOH3VcEe2XAuaIctqsHw" key="PropositionTemplate.groovy" value="PropositionTemplate.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOIHVcEe2XAuaIctqsHw" key="TestScript.groovy" value="TestScript.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOIXVcEe2XAuaIctqsHw" key="UserDetails.groovy" value="UserDetails.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOInVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ActivityState.groovy" value="com/sgdbf/pop3p/groovy/ActivityState.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOI3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" value="com/sgdbf/pop3p/groovy/AnalyzeWebServiceResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOJHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/BDMUtility.groovy" value="com/sgdbf/pop3p/groovy/BDMUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOJXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" value="com/sgdbf/pop3p/groovy/CheckConnectorExecution.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOJnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" value="com/sgdbf/pop3p/groovy/EnvironmentParameters.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOJ3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelData.groovy" value="com/sgdbf/pop3p/groovy/ExcelData.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOKHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ExcelFile.groovy" value="com/sgdbf/pop3p/groovy/ExcelFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOKXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FileUtility.groovy" value="com/sgdbf/pop3p/groovy/FileUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOKnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" value="com/sgdbf/pop3p/groovy/FrenchBusinessDays.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOK3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" value="com/sgdbf/pop3p/groovy/LocaleUtility.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOLHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LogFile.groovy" value="com/sgdbf/pop3p/groovy/LogFile.groovy" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOLXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" value="com/sgdbf/pop3p/groovy/LyrePreOrderCreationResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOLnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUser.groovy" value="com/sgdbf/pop3p/groovy/LyreUser.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOL3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" value="com/sgdbf/pop3p/groovy/LyreUserProfiles.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOMHVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" value="com/sgdbf/pop3p/groovy/LyreUsersResponse.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOMXVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/MailRecipient.groovy" value="com/sgdbf/pop3p/groovy/MailRecipient.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOMnVcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/StringUtility.groovy" value="com/sgdbf/pop3p/groovy/StringUtility.groovy" exported="false" type="GROOVY_SCRIPT"/>
          <fragments xmi:type="configuration:Fragment" xmi:id="_DPiOM3VcEe2XAuaIctqsHw" key="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" value="com/sgdbf/pop3p/groovy/ValidationDueDateCalculation.groovy" exported="false" type="GROOVY_SCRIPT"/>
        </applicationDependencies>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_DPiONHVcEe2XAuaIctqsHw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_DPiONXVcEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_DPiONnVcEe2XAuaIctqsHw" name="energyCodeToBeDefined" typeClassname="java.lang.String" description="Lyre energy Lyre code 'A définir' : ignore material in this case"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_DPiON3VcEe2XAuaIctqsHw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_EvT_IIExEe2eMJMBNSbmHw" name="smtpHost" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_EvT_IYExEe2eMJMBNSbmHw" name="smtpPort" typeClassname="java.lang.Integer"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_EvT_IoExEe2eMJMBNSbmHw" name="smtpUsername" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_EvT_I4ExEe2eMJMBNSbmHw" name="smtpPassword" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_EvT_JIExEe2eMJMBNSbmHw" name="noReplyEmail" typeClassname="java.lang.String"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_EvT_JYExEe2eMJMBNSbmHw" name="administratorEmail" typeClassname="java.lang.String"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_DPiOOHVcEe2XAuaIctqsHw" name="logClass" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_DPiOOXVcEe2XAuaIctqsHw" name="energyCodeToBeDefined" typeClassname="java.lang.String" description="Lyre energy Lyre code 'A définir' : ignore material in this case"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_DPiOOnVcEe2XAuaIctqsHw" name="nbMaterialsPerBatch" typeClassname="java.lang.Integer" description="Number of materials processed together"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_ZO1VsHVcEe2XAuaIctqsHw" name="smtpHost" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_bsQaYHVcEe2XAuaIctqsHw" name="smtpPort" typeClassname="java.lang.Integer"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_lp2r8HVcEe2XAuaIctqsHw" name="smtpUsername" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_oywWkHVcEe2XAuaIctqsHw" name="smtpPassword" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_iRUNYHVdEe2XAuaIctqsHw" name="noReplyEmail" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_krUxsHVdEe2XAuaIctqsHw" name="administratorEmail" typeClassname="java.lang.String"/>
      <contract xmi:type="process:Contract" xmi:id="_DPiOO3VcEe2XAuaIctqsHw">
        <inputs xmi:type="process:ContractInput" xmi:id="_DPiOPHVcEe2XAuaIctqsHw" name="excelFile" type="FILE">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_DPiOPXVcEe2XAuaIctqsHw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_DPiOPnVcEe2XAuaIctqsHw" name="withHeaderLine" type="BOOLEAN">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_DPiOP3VcEe2XAuaIctqsHw"/>
        </inputs>
      </contract>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_DPiOQHVcEe2XAuaIctqsHw">
        <name xmi:type="expression:Expression" xmi:id="_DPiOQXVcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_DPiOQnVcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_DPiOQ3VcEe2XAuaIctqsHw">
        <name xmi:type="expression:Expression" xmi:id="_DPiORHVcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_DPiORXVcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_DPiORnVcEe2XAuaIctqsHw">
        <name xmi:type="expression:Expression" xmi:id="_DPiOR3VcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_DPiOSHVcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_DPiOSXVcEe2XAuaIctqsHw">
        <name xmi:type="expression:Expression" xmi:id="_DPiOSnVcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_DPiOS3VcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_DPiOTHVcEe2XAuaIctqsHw">
        <name xmi:type="expression:Expression" xmi:id="_DPiOTXVcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_DPiOTnVcEe2XAuaIctqsHw" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_DPiOT3VcEe2XAuaIctqsHw" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_DPiOUHVcEe2XAuaIctqsHw" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_DPiOUXVcEe2XAuaIctqsHw" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_DPiOUnVcEe2XAuaIctqsHw" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_DPiOU3VcEe2XAuaIctqsHw" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_DPiOVHVcEe2XAuaIctqsHw" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_DPiOVXVcEe2XAuaIctqsHw" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_DPiOVnVcEe2XAuaIctqsHw" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_DPiOV3VcEe2XAuaIctqsHw" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_DPiOWHVcEe2XAuaIctqsHw" type="Process" element="_DPhlwHVcEe2XAuaIctqsHw" name="MyDiagram" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_DPiOWXVcEe2XAuaIctqsHw" type="2007" element="_DPhlwXVcEe2XAuaIctqsHw">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiOWnVcEe2XAuaIctqsHw" type="5008"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiOW3VcEe2XAuaIctqsHw" type="7001">
        <children xmi:type="notation:Node" xmi:id="_DPiOXHVcEe2XAuaIctqsHw" type="3007" element="_DPhlwnVcEe2XAuaIctqsHw">
          <children xmi:type="notation:DecorationNode" xmi:id="_DPiOXXVcEe2XAuaIctqsHw" type="5007"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_DPiOXnVcEe2XAuaIctqsHw" type="7002">
            <children xmi:type="notation:Shape" xmi:id="_DPiOX3VcEe2XAuaIctqsHw" type="3002" element="_DPhlw3VcEe2XAuaIctqsHw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_DPiOYHVcEe2XAuaIctqsHw" type="5024">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiOYXVcEe2XAuaIctqsHw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_DPiOYnVcEe2XAuaIctqsHw" x="60" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_DPiOY3VcEe2XAuaIctqsHw" type="3027" element="_DPhlx3VcEe2XAuaIctqsHw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_DPiOZHVcEe2XAuaIctqsHw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_DPiOZXVcEe2XAuaIctqsHw" x="204" y="53" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_DPiOZnVcEe2XAuaIctqsHw" type="3027" element="_DPiM6HVcEe2XAuaIctqsHw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_DPiOZ3VcEe2XAuaIctqsHw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_DPiOaHVcEe2XAuaIctqsHw" x="441" y="53" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_DPiOaXVcEe2XAuaIctqsHw" type="3027" element="_DPiNCXVcEe2XAuaIctqsHw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_DPiOanVcEe2XAuaIctqsHw" type="5017"/>
              <children xmi:type="notation:Shape" xmi:id="_LsOWMHVlEe2XAuaIctqsHw" type="3032" element="_LsElMHVlEe2XAuaIctqsHw" fontName="Segoe UI">
                <children xmi:type="notation:DecorationNode" xmi:id="_LsPkUHVlEe2XAuaIctqsHw" type="5062">
                  <layoutConstraint xmi:type="notation:Location" xmi:id="_LsPkUXVlEe2XAuaIctqsHw" y="5"/>
                </children>
                <layoutConstraint xmi:type="notation:Bounds" xmi:id="_LsOWMXVlEe2XAuaIctqsHw" x="87" y="48"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_DPiOa3VcEe2XAuaIctqsHw" x="688" y="53" width="112" height="56"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_DPiObHVcEe2XAuaIctqsHw" type="3003" element="_DPiNTXVcEe2XAuaIctqsHw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_DPiObXVcEe2XAuaIctqsHw" type="5025">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiObnVcEe2XAuaIctqsHw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_DPiOb3VcEe2XAuaIctqsHw" x="1163" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_DPiOcHVcEe2XAuaIctqsHw" type="3027" element="_DPiNUXVcEe2XAuaIctqsHw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_DPiOcXVcEe2XAuaIctqsHw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_DPiOcnVcEe2XAuaIctqsHw" x="859" y="55"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_DPiOc3VcEe2XAuaIctqsHw" type="3027" element="_DPiNWnVcEe2XAuaIctqsHw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_DPiOdHVcEe2XAuaIctqsHw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_DPiOdXVcEe2XAuaIctqsHw" x="669" y="141"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_LLRUUHVcEe2XAuaIctqsHw" type="3027" element="_LKzaQHVcEe2XAuaIctqsHw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_LLUXoHVcEe2XAuaIctqsHw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_LLRUUXVcEe2XAuaIctqsHw" x="1011" y="55"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_DPiOdnVcEe2XAuaIctqsHw"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_DPiOd3VcEe2XAuaIctqsHw" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_DPiOeHVcEe2XAuaIctqsHw"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_DPiOeXVcEe2XAuaIctqsHw"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_DPiOenVcEe2XAuaIctqsHw"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_DPiOe3VcEe2XAuaIctqsHw"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiOfHVcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_DPiOfXVcEe2XAuaIctqsHw"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_DPiOfnVcEe2XAuaIctqsHw"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_DPiOf3VcEe2XAuaIctqsHw" width="1307" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_DPiOgHVcEe2XAuaIctqsHw"/>
    <edges xmi:type="notation:Connector" xmi:id="_DPiOgXVcEe2XAuaIctqsHw" type="4001" element="_DPiNhHVcEe2XAuaIctqsHw" source="_DPiOX3VcEe2XAuaIctqsHw" target="_DPiOY3VcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiOgnVcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiOg3VcEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiOhHVcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPiOhXVcEe2XAuaIctqsHw" points="[0, -15, -115, -1]$[114, -14, -1, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiOhnVcEe2XAuaIctqsHw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiOh3VcEe2XAuaIctqsHw" id="(0.008333333333333333,0.5166666666666667)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_DPiOiHVcEe2XAuaIctqsHw" type="4001" element="_DPiNh3VcEe2XAuaIctqsHw" source="_DPiOY3VcEe2XAuaIctqsHw" target="_DPiOZnVcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiOiXVcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiOinVcEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiOi3VcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPiOjHVcEe2XAuaIctqsHw" points="[0, -4, -95, 0]$[79, -4, -16, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiOjXVcEe2XAuaIctqsHw" id="(1.0,0.5666666666666667)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiOjnVcEe2XAuaIctqsHw" id="(0.13333333333333333,0.5)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_DPiOj3VcEe2XAuaIctqsHw" type="4001" element="_DPiNinVcEe2XAuaIctqsHw" source="_DPiOZnVcEe2XAuaIctqsHw" target="_DPiOaXVcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiOkHVcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiOkXVcEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiOknVcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPiOk3VcEe2XAuaIctqsHw" points="[0, 0, -58, 0]$[51, 0, -7, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiOlHVcEe2XAuaIctqsHw" id="(1.0,0.5333333333333333)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiOlXVcEe2XAuaIctqsHw" id="(0.0625,0.5357142857142857)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_DPiOlnVcEe2XAuaIctqsHw" type="4001" element="_DPiNjXVcEe2XAuaIctqsHw" source="_DPiOaXVcEe2XAuaIctqsHw" target="_DPiOcHVcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiOl3VcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiOmHVcEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiOmXVcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPiOmnVcEe2XAuaIctqsHw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_DPiOm3VcEe2XAuaIctqsHw" type="4001" element="_DPiNkHVcEe2XAuaIctqsHw" source="_DPiOcHVcEe2XAuaIctqsHw" target="_LLRUUHVcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiOnHVcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiOnXVcEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiOnnVcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPiz4HVcEe2XAuaIctqsHw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_DPiz4XVcEe2XAuaIctqsHw" type="4001" element="_DPiNk3VcEe2XAuaIctqsHw" source="_DPiOc3VcEe2XAuaIctqsHw" target="_DPiOcHVcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiz4nVcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiz43VcEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiz5HVcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPiz5XVcEe2XAuaIctqsHw" points="[0, -11, -103, 67]$[90, -11, -13, 67]$[90, -71, -13, 7]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiz5nVcEe2XAuaIctqsHw" id="(1.0,0.7)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiz53VcEe2XAuaIctqsHw" id="(0.32,0.86)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_DPiz6HVcEe2XAuaIctqsHw" type="4001" element="_DPiNlnVcEe2XAuaIctqsHw" source="_DPiOY3VcEe2XAuaIctqsHw" target="_DPiOc3VcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiz6XVcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiz6nVcEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiz63VcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPiz7HVcEe2XAuaIctqsHw" points="[-54, 25, -468, -53]$[-54, 91, -468, 13]$[364, 91, -50, 13]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiz7XVcEe2XAuaIctqsHw" id="(1.0,0.5833333333333334)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_DPiz7nVcEe2XAuaIctqsHw" type="4001" element="_DPiNmnVcEe2XAuaIctqsHw" source="_DPiOZnVcEe2XAuaIctqsHw" target="_DPiOc3VcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiz73VcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiz8HVcEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiz8XVcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPiz8nVcEe2XAuaIctqsHw" points="[-25, 28, -157, -44]$[-25, 69, -157, -3]$[127, 69, -5, -3]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiz83VcEe2XAuaIctqsHw" id="(1.0,0.5333333333333333)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiz9HVcEe2XAuaIctqsHw" id="(0.05,0.32)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_DPiz9XVcEe2XAuaIctqsHw" type="4001" element="_DPiNnnVcEe2XAuaIctqsHw" source="_DPiOY3VcEe2XAuaIctqsHw" target="_DPiOcHVcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiz9nVcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiz93VcEe2XAuaIctqsHw" x="-212" y="7"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiz-HVcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPiz-XVcEe2XAuaIctqsHw" points="[-54, -30, -649, -8]$[-54, -75, -649, -53]$[585, -75, -10, -53]$[585, -28, -10, -6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiz-nVcEe2XAuaIctqsHw" id="(1.0,0.5)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPiz-3VcEe2XAuaIctqsHw" id="(0.6,0.12)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_DPiz_HVcEe2XAuaIctqsHw" type="4001" element="_DPiNo3VcEe2XAuaIctqsHw" source="_DPiOZnVcEe2XAuaIctqsHw" target="_DPiOcHVcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_DPiz_XVcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_DPiz_nVcEe2XAuaIctqsHw" x="-71" y="7"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_DPiz_3VcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_DPi0AHVcEe2XAuaIctqsHw" points="[-60, -33, -373, -3]$[-60, -59, -373, -29]$[317, -59, 4, -29]$[317, -31, 4, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPi0AXVcEe2XAuaIctqsHw" id="(1.0,0.55)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_DPi0AnVcEe2XAuaIctqsHw" id="(0.15,0.02)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_LL3xQHVcEe2XAuaIctqsHw" type="4001" element="_LLzf0HVcEe2XAuaIctqsHw" source="_LLRUUHVcEe2XAuaIctqsHw" target="_DPiObHVcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_LL60kHVcEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_LL60kXVcEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_LL3xQXVcEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_LL3xQnVcEe2XAuaIctqsHw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_Nx3NAHVlEe2XAuaIctqsHw" type="4001" element="_Nxv4QHVlEe2XAuaIctqsHw" source="_LsOWMHVlEe2XAuaIctqsHw" target="_DPiOc3VcEe2XAuaIctqsHw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_Nx3NA3VlEe2XAuaIctqsHw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_Nx3NBHVlEe2XAuaIctqsHw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_Nx3NAXVlEe2XAuaIctqsHw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_Nx3NAnVlEe2XAuaIctqsHw" points="[0, 0, -11, -58]$[12, 65, 1, 7]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_Nx7ecHVlEe2XAuaIctqsHw" id="(1.0,1.0)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_Nx7ecXVlEe2XAuaIctqsHw" id="(0.54,0.86)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
