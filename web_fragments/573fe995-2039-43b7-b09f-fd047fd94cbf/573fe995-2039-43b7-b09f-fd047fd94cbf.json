{
  "modelVersion" : "2.2",
  "previousArtifactVersion" : "2.0",
  "id" : "573fe995-2039-43b7-b09f-fd047fd94cbf",
  "name" : "fragOnePropositionTransition",
  "lastUpdate" : 1671627900794,
  "rows" : [
    [
      {
        "type" : "fragment",
        "dimension" : {
          "xs" : 12,
          "sm" : 12,
          "md" : 12,
          "lg" : 12
        },
        "propertyValues" : {
          "cssClasses" : {
            "type" : "constant",
            "value" : ""
          },
          "hidden" : {
            "type" : "constant",
            "value" : false
          }
        },
        "reference" : "140f063c-f7d4-42a8-803f-b1c43fae2e73",
        "hasValidationError" : false,
        "id" : "2c88607c-2f92-441f-b733-5ef1b0713fda",
        "binding" : {
          "proposition" : "proposition",
          "listMaterials" : "listMaterials",
          "index" : "index",
          "selectedAgency" : "selectedAgency",
          "codeWorkflow" : "codeWorkflow",
          "disableFields" : "disableFields",
          "hideFields" : "hideFields",
          "invalidAmounts" : "invalidAmounts"
        }
      }
    ],
    [
      {
        "type" : "component",
        "dimension" : {
          "xs" : 12,
          "sm" : 12,
          "md" : 12,
          "lg" : 12
        },
        "propertyValues" : {
          "cssClasses" : {
            "type" : "constant",
            "value" : ""
          },
          "hidden" : {
            "type" : "constant",
            "value" : true
          },
          "text" : {
            "type" : "interpolation",
            "value" : "<i>Partie en dessous : custom pour le formulaire \"Transition\"</i>"
          },
          "alignment" : {
            "type" : "constant",
            "value" : "left"
          },
          "allowHTML" : {
            "type" : "constant",
            "value" : true
          },
          "labelHidden" : {
            "type" : "constant",
            "value" : true
          },
          "label" : {
            "type" : "interpolation",
            "value" : ""
          },
          "labelPosition" : {
            "type" : "constant",
            "value" : "top"
          },
          "labelWidth" : {
            "type" : "constant",
            "value" : 4
          }
        },
        "reference" : "97039766-5d0b-40aa-a060-8e33bdd050e3",
        "hasValidationError" : false,
        "id" : "pbText"
      }
    ],
    [
      {
        "type" : "container",
        "dimension" : {
          "xs" : 12,
          "sm" : 12,
          "md" : 12,
          "lg" : 12
        },
        "propertyValues" : {
          "cssClasses" : {
            "type" : "constant",
            "value" : ""
          },
          "hidden" : {
            "type" : "expression",
            "value" : "displayListValideurs"
          },
          "repeatedCollection" : {
            "type" : "variable"
          }
        },
        "reference" : "8a107338-322c-4e2f-b480-6f458f5b4c05",
        "hasValidationError" : false,
        "id" : "pbContainer",
        "rows" : [
          [
            {
              "type" : "container",
              "dimension" : {
                "xs" : 12,
                "sm" : 12,
                "md" : 1,
                "lg" : 1
              },
              "propertyValues" : {
                "cssClasses" : {
                  "type" : "constant",
                  "value" : ""
                },
                "hidden" : {
                  "type" : "constant",
                  "value" : false
                },
                "repeatedCollection" : {
                  "type" : "variable"
                }
              },
              "reference" : "6d07f7ed-2bd8-4532-99af-f8226fdeb43e",
              "hasValidationError" : false,
              "id" : "pbContainer",
              "rows" : [
                [ ]
              ]
            },
            {
              "type" : "container",
              "dimension" : {
                "xs" : 12,
                "sm" : 12,
                "md" : 10,
                "lg" : 10
              },
              "propertyValues" : {
                "cssClasses" : {
                  "type" : "constant",
                  "value" : ""
                },
                "hidden" : {
                  "type" : "constant",
                  "value" : false
                },
                "repeatedCollection" : {
                  "type" : "variable",
                  "value" : ""
                }
              },
              "reference" : "f886ff1c-dadc-4bf2-a1de-41b4b8832110",
              "hasValidationError" : false,
              "id" : "pbContainer",
              "rows" : [
                [
                  {
                    "type" : "fragment",
                    "dimension" : {
                      "xs" : 12,
                      "sm" : 12,
                      "md" : 12,
                      "lg" : 12
                    },
                    "propertyValues" : {
                      "cssClasses" : {
                        "type" : "constant",
                        "value" : ""
                      },
                      "hidden" : {
                        "type" : "constant",
                        "value" : false
                      }
                    },
                    "reference" : "dd172128-b138-47a7-8faa-47f616b4726f",
                    "hasValidationError" : false,
                    "id" : "7828c640-df52-4969-a8b3-b57cc791526d",
                    "binding" : {
                      "codeWorkflow" : "codeWorkflow",
                      "montantProposition" : "proposition.propositionAmount",
                      "genreMateriel" : "proposition.materialFamily",
                      "codeAgence" : "proposition.agencyCode",
                      "listNoeudsExposed" : "listNoeudsExposedFirst",
                      "isIntra" : "",
                      "approversList" : ""
                    }
                  }
                ],
                [
                  {
                    "type" : "container",
                    "dimension" : {
                      "xs" : 12,
                      "sm" : 12,
                      "md" : 12,
                      "lg" : 12
                    },
                    "propertyValues" : {
                      "cssClasses" : {
                        "type" : "constant",
                        "value" : ""
                      },
                      "hidden" : {
                        "type" : "expression",
                        "value" : "isHiddenSecondApprover"
                      },
                      "repeatedCollection" : {
                        "type" : "variable",
                        "value" : ""
                      }
                    },
                    "reference" : "1b39e4c8-b1c0-458a-b810-08de08c6d75e",
                    "hasValidationError" : false,
                    "id" : "pbContainer",
                    "rows" : [
                      [
                        {
                          "type" : "component",
                          "dimension" : {
                            "xs" : 12,
                            "sm" : 12,
                            "md" : 12,
                            "lg" : 12
                          },
                          "propertyValues" : {
                            "cssClasses" : {
                              "type" : "constant",
                              "value" : ""
                            },
                            "hidden" : {
                              "type" : "expression",
                              "value" : "isSelectedTransfertAgency"
                            },
                            "text" : {
                              "type" : "interpolation",
                              "value" : "<span class=\"glyphicon glyphicon-remove-sign text-danger btn-lg\"></span>\n<span class=\"text-danger \">L'agence de destination n'as pas été spécifiée, il est impossible de récupérer la liste des validateurs.\n</span>"
                            },
                            "alignment" : {
                              "type" : "constant",
                              "value" : "left"
                            },
                            "allowHTML" : {
                              "type" : "constant",
                              "value" : true
                            },
                            "labelHidden" : {
                              "type" : "constant",
                              "value" : true
                            },
                            "label" : {
                              "type" : "interpolation",
                              "value" : ""
                            },
                            "labelPosition" : {
                              "type" : "constant",
                              "value" : "top"
                            },
                            "labelWidth" : {
                              "type" : "constant",
                              "value" : 4
                            }
                          },
                          "reference" : "ed4632d3-8c6e-40de-a5bb-86ccd44aab34",
                          "hasValidationError" : false,
                          "id" : "pbText"
                        }
                      ],
                      [
                        {
                          "type" : "fragment",
                          "dimension" : {
                            "xs" : 12,
                            "sm" : 12,
                            "md" : 12,
                            "lg" : 12
                          },
                          "propertyValues" : {
                            "cssClasses" : {
                              "type" : "constant",
                              "value" : ""
                            },
                            "hidden" : {
                              "type" : "expression",
                              "value" : "! isSelectedTransfertAgency"
                            }
                          },
                          "reference" : "477d7353-e68a-4bb1-ac04-17258bf02f70",
                          "hasValidationError" : false,
                          "id" : "7828c640-df52-4969-a8b3-b57cc791526d",
                          "binding" : {
                            "montantProposition" : "proposition.propositionAmount",
                            "genreMateriel" : "proposition.materialFamily",
                            "codeAgence" : "targetAgencyCode",
                            "listNoeudsExposed" : "listNoeudsExposedSecond",
                            "codeWorkflow" : "DAD",
                            "isIntra" : "isIntraBoolean",
                            "approversList" : ""
                          }
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ],
    [
      {
        "type" : "component",
        "dimension" : {
          "xs" : 12,
          "sm" : 12,
          "md" : 12,
          "lg" : 12
        },
        "propertyValues" : {
          "cssClasses" : {
            "type" : "constant",
            "value" : ""
          },
          "hidden" : {
            "type" : "expression",
            "value" : "proposition.typeProposition != \"Transfert\" || isIntra === \"\" || !isSelectedTransfertAgency"
          },
          "text" : {
            "type" : "interpolation",
            "value" : "<span class=\"glyphicon glyphicon-map-marker text-success btn-lg\"></span>\n<span class=\" text-success\">\n{{ isIntra }}\n</span>"
          },
          "alignment" : {
            "type" : "constant",
            "value" : "left"
          },
          "allowHTML" : {
            "type" : "constant",
            "value" : true
          },
          "labelHidden" : {
            "type" : "constant",
            "value" : true
          },
          "label" : {
            "type" : "interpolation",
            "value" : ""
          },
          "labelPosition" : {
            "type" : "constant",
            "value" : "top"
          },
          "labelWidth" : {
            "type" : "constant",
            "value" : 4
          }
        },
        "reference" : "0f0f1aac-8f63-49f3-83d7-0443cbb69bb3",
        "hasValidationError" : false,
        "id" : "pbText"
      }
    ]
  ],
  "assets" : [ ],
  "inactiveAssets" : [ ],
  "variables" : {
    "listeMotifsExisting" : {
      "type" : "json",
      "value" : [
        "[\r",
        "    {\"val\":\"Rachat LocFi\",\"disp\":\"Rachat LocFi\"}, \r",
        "    {\"val\":\"A renouveler\",\"disp\":\"A renouveler\"},\r",
        "    {\"val\":\"A vendre\",\"disp\":\"A vendre\"},\r",
        "    {\"val\":\"A restituer\",\"disp\":\"A restituer\"},\r",
        "    {\"val\":\"A rebuter\",\"disp\":\"A rebuter\"},\r",
        "    {\"val\":\"Transfert\",\"disp\":\"Transfert\"}\r",
        "]"
      ],
      "exposed" : false
    },
    "displayListValideurs" : {
      "type" : "expression",
      "value" : [
        "if (!$data.selectedAgency || !$data.proposition) {",
        "    return false;",
        "}",
        "",
        "",
        "var to_return = false;",
        "if (($data.proposition.propositionAmount === \"\") ",
        "|| ($data.proposition.typeMaterial === \"\") || ($data.selectedAgency.code === \"\")) {",
        "    to_return =  true;",
        "}",
        "",
        "",
        "return to_return;"
      ],
      "exposed" : false
    },
    "listNoeudsExposedFirst" : {
      "type" : "json",
      "value" : [
        "[]"
      ],
      "exposed" : false
    },
    "DAD" : {
      "type" : "constant",
      "value" : [
        "DAD"
      ],
      "exposed" : false
    },
    "hideFields" : {
      "type" : "json",
      "value" : [
        "{}"
      ],
      "exposed" : false
    },
    "index" : {
      "type" : "constant",
      "value" : [
        ""
      ],
      "exposed" : true
    },
    "isHiddenSecondApprover" : {
      "type" : "expression",
      "value" : [
        "if (!$data.proposition) {\r",
        "    return false;\r",
        "}\r",
        "\r",
        "if ($data.proposition.typeProposition === \"Transfert\" || $data.proposition.typeProposition === \"A renouveler\") {\r",
        "\treturn false;\r",
        "} else {\r",
        "\treturn true;\r",
        "}"
      ],
      "exposed" : false
    },
    "disableFields" : {
      "type" : "expression",
      "value" : [
        "// Cette valeur sert a mettre en mode lecture simple une valeur. ",
        "// Pour cela : Ajouter la valeur à la variable JSON en temps que ",
        "// clé et true en temps que valeur",
        "",
        "",
        "// exemple : {\"typeProposition\" : true} va desactiver le champs \"typeProposition\" ",
        "//          du formulaire ",
        "",
        "// BPM-461 : do not disable field motif when launching DDD",
        "var is_empty = false;",
        "if ($data.proposition) {",
        "    if ($data.proposition.dddRenewStatus == \"PENDING_TASK\") {",
        "        is_empty = true;",
        "    }",
        "} ",
        "",
        "if (is_empty) {",
        "    return {",
        "        \"typeProposition\" : false",
        " ",
        "    };",
        "} else {",
        "    return {",
        "        \"typeProposition\" : true",
        "        ",
        "    };",
        "}"
      ],
      "exposed" : false
    },
    "codeWorkflow" : {
      "type" : "expression",
      "value" : [
        "\r",
        "if($data.proposition && $data.proposition.existing) {\r",
        "    // CFR 14/10/2020 - BPM-384 : Handle new motif 'A prolonger' as DAD\r",
        "    if (($data.proposition.existing == \"newMaterial\")\r",
        "    \t|| ($data.proposition.typeProposition === \"Rachat LocFi\")\r",
        "    \t|| ($data.proposition.typeProposition === \"A prolonger\")) {\r",
        "    \treturn \"DAD\";\r",
        "    } else if ($data.proposition.typeProposition === \"A vendre\") {\r",
        "    \treturn \"DAV\";\r",
        "    } else if ($data.proposition.typeProposition === \"A restituer\"\r",
        "    \t|| $data.proposition.typeProposition === \"A rebuter\"\r",
        "    \t|| $data.proposition.typeProposition === \"A renouveler\"\r",
        "    \t|| ($data.proposition.typeProposition === \"Transfert\" &&\r",
        "    \t\t$data.proposition.agencyCode != $data.proposition.transferAgencyCode)) {\r",
        "    \t\treturn \"DDD\"\r",
        "    }\r",
        "\r",
        "}\r"
      ],
      "exposed" : false
    },
    "listMotifsNew" : {
      "type" : "json",
      "value" : [
        "[\r",
        "    {\"val\":\"Nouveau matériel\",\"disp\":\"Nouveau matériel\"},\r",
        "    {\"val\":\"Nouvel équipement\",\"disp\":\"Nouvel équipement\"}\r",
        "]\r"
      ],
      "exposed" : false
    },
    "isIntra" : {
      "type" : "expression",
      "value" : [
        "var to_return = \"nada\";",
        "",
        "",
        "",
        "if ( ($data.listNoeudsExposedFirst.length < 0) || ($data.listNoeudsExposedSecond.length < 0)) {",
        "    return to_return;",
        "}",
        "",
        "",
        "for(var noeudFirst of $data.listNoeudsExposedFirst) {",
        "    for(var noeudSecond of $data.listNoeudsExposedSecond) {",
        "",
        "        if(noeudFirst.libNoeudApprob.toUpperCase() ===",
        "            noeudSecond.libNoeudApprob.toUpperCase()) {",
        "            if(noeudFirst.codeNoeudApprob.toUpperCase() ",
        "                === noeudSecond.codeNoeudApprob.toUpperCase()) {",
        "",
        "                to_return = \"Le mode de transfert est du type Intra-Entité, les codes de \";",
        "                to_return += noeudSecond.libNoeudApprob + \" sont les mêmes \" + noeudFirst.codeNoeudApprob;",
        "",
        "                return to_return",
        "            }",
        "        }",
        "    }",
        "}",
        "to_return = \"Aucun code ne correspond, le mode de transfert est du type Inter-Entité\";",
        "",
        "",
        "return to_return;"
      ],
      "exposed" : false
    },
    "isIntraBoolean" : {
      "type" : "expression",
      "value" : [
        "//var to_return = \"\";",
        "",
        "",
        "",
        "/*if (!($data.listNoeudsExposedFirst.length > 0) || !($data.listNoeudsExposedSecond.length > 0)) {",
        "    return to_return;",
        "}*/",
        "",
        "",
        "for(var noeudFirst of $data.listNoeudsExposedFirst) {",
        "    for(var noeudSecond of $data.listNoeudsExposedSecond) {",
        "",
        "        if(noeudFirst.libNoeudApprob.toUpperCase() ===",
        "            noeudSecond.libNoeudApprob.toUpperCase()) {",
        "            if(noeudFirst.codeNoeudApprob.toUpperCase() ",
        "                === noeudSecond.codeNoeudApprob.toUpperCase()) {",
        "",
        "               /* to_return = \"Le mode de transfert est du type Intra-Entité, les codes de \";",
        "                to_return += noeudSecond.libNoeudApprob + \" sont les mêmes \" + noeudFirst.codeNoeudApprob;*/",
        "",
        "                return true;",
        "            }",
        "        }",
        "    }",
        "}",
        "//to_return = \"Aucun code ne correspond, le mode de transfert est du type Inter-Entité\";",
        "",
        "",
        "return false;"
      ],
      "exposed" : false
    },
    "selectedAgency" : {
      "type" : "constant",
      "value" : [
        ""
      ],
      "exposed" : true
    },
    "listNoeudsExposedSecond" : {
      "type" : "json",
      "value" : [
        "[]"
      ],
      "exposed" : false
    },
    "proposition" : {
      "type" : "constant",
      "value" : [
        ""
      ],
      "exposed" : true
    },
    "targetAgencyCode" : {
      "type" : "expression",
      "value" : [
        "if (!$data.proposition || !$data.proposition.typeProposition) {",
        "    return \"\";",
        "}",
        "",
        "var targetAgencyCode = \"\";",
        "if ($data.proposition.typeProposition === \"A renouveler\") {",
        "    targetAgencyCode = $data.proposition.agencyCode;",
        "} else if ($data.proposition.typeProposition === \"Transfert\") {",
        "    if (!$data.proposition.transferAgencyCode) ",
        "    {",
        "        return \"\"",
        "    }",
        "    targetAgencyCode = $data.proposition.transferAgencyCode;",
        "}",
        "",
        "return targetAgencyCode;"
      ],
      "exposed" : false
    },
    "isSelectedTransfertAgency" : {
      "type" : "expression",
      "value" : [
        "if (!$data.proposition) {",
        "    return false;",
        "}",
        "",
        "var isSelectedTransfertAgencyExposed = $data.proposition.transferAgencyCode && $data.proposition.transferAgencyCode.length > 0;",
        "",
        "var isTransfertInter = ($data.proposition.transferAgencyCode && $data.proposition.transferAgencyCode.length > 0);",
        "var isRenouveler = ($data.proposition.typeProposition === \"A renouveler\");",
        "",
        "var displayDADApprovers = isRenouveler || isTransfertInter;",
        "",
        "/*if($data.isIntra===true)",
        "{",
        "    displayDADApprovers = false;",
        "}*/",
        "return  displayDADApprovers;"
      ],
      "exposed" : false
    },
    "listMaterials" : {
      "type" : "constant",
      "value" : [
        ""
      ],
      "exposed" : true
    },
    "invalidAmounts" : {
      "type" : "constant",
      "value" : [
        ""
      ],
      "exposed" : true
    }
  },
  "hasValidationError" : false,
  "type" : "fragment"
}